{
    "props": [
        {
            "Attribute": "children",
            "Type": "`ReactNode[]`",
            "Description": "The children to render. Usually a `DropdownTrigger` and `DropdownMenu` elements.",
            "Default": "-"
        },
        {
            "Attribute": "type",
            "Type": "`menu` | `listbox`",
            "Description": "Type of overlay that is opened by the dropdown trigger.",
            "Default": "`menu`"
        },
        {
            "Attribute": "trigger",
            "Type": "`press` | `longPress`",
            "Description": "How the dropdown menu is triggered.",
            "Default": "`press`"
        },
        {
            "Attribute": "isDisabled",
            "Type": "`boolean`",
            "Description": "Whether the dropdown trigger is disabled.",
            "Default": "`false`"
        },
        {
            "Attribute": "closeOnSelect",
            "Type": "`boolean`",
            "Description": "Whether the dropdown menu should be closed when an item is selected.",
            "Default": "`true`"
        },
        {
            "Attribute": "shouldBlockScroll",
            "Type": "`boolean`",
            "Description": "Whether the dropdown menu should block scrolling outside the menu.",
            "Default": "`true`"
        },
        {
            "Attribute": "PopoverProps",
            "Type": "[PopoverProps](/docs/components/popover)",
            "Description": "Since the dropdown is an extension of the popover, it accepts all the props of the popover component.",
            "Default": "-"
        }
    ],
    "link": "https://nextui.org/docs/components/dropdown",
    "events": [
        {
            "Attribute": "onOpenChange",
            "Type": "`(isOpen: boolean) => void`",
            "Description": "Handler that is called when the dropdown's open state changes."
        },
        {
            "Attribute": "shouldCloseOnInteractOutside",
            "Type": "`(e: HTMLElement) => void`",
            "Description": "When user interacts with the argument element outside of the dropdown ref, return `true` if `onClose` should be called."
        },
        {
            "Attribute": "onClose",
            "Type": "`() => void`",
            "Description": "Handler that is called when the dropdown should close."
        }
    ]
}

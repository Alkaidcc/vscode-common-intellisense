{
    "props": [
        {
            "Attribute": "children",
            "Type": "`ReactNode[]`",
            "Description": "The elements that make up the table. Includes the `TableHeader`, `TableBody`, `TableColumn`, and `TableRow`.",
            "Default": "-"
        },
        {
            "Attribute": "color",
            "Type": "`default` | `primary` | `secondary` | `success` | `warning` | `danger`",
            "Description": "Color of the selected rows, and checkboxes.",
            "Default": "`default`"
        },
        {
            "Attribute": "layout",
            "Type": "`auto` | `fixed`",
            "Description": "Defines the layout of the table.",
            "Default": "`auto`"
        },
        {
            "Attribute": "radius",
            "Type": "`none` | `sm` | `md` | `lg`",
            "Description": "The border-radius of the table.",
            "Default": "`lg`"
        },
        {
            "Attribute": "shadow",
            "Type": "`none` | `sm` | `md` | `lg`",
            "Description": "The shadow size of the table.",
            "Default": "`sm`"
        },
        {
            "Attribute": "hideHeader",
            "Type": "`boolean`",
            "Description": "Whether to hide the table header.",
            "Default": "`false`"
        },
        {
            "Attribute": "isStriped",
            "Type": "`boolean`",
            "Description": "Whether to apply striped rows in the table.",
            "Default": "`false`"
        },
        {
            "Attribute": "isCompact",
            "Type": "`boolean`",
            "Description": "Whether to apply compact style to the table.",
            "Default": "`false`"
        },
        {
            "Attribute": "isHeaderSticky",
            "Type": "`boolean`",
            "Description": "Whether to make the table header sticky.",
            "Default": "`false`"
        },
        {
            "Attribute": "fullWidth",
            "Type": "`boolean`",
            "Description": "Whether to make the table full width.",
            "Default": "`true`"
        },
        {
            "Attribute": "disableAnimation",
            "Type": "`boolean`",
            "Description": "Whether to disable animations in the table.",
            "Default": "`false`"
        },
        {
            "Attribute": "removeWrapper",
            "Type": "`boolean`",
            "Description": "Whether the table base container should not be rendered.",
            "Default": "`false`"
        },
        {
            "Attribute": "BaseComponent",
            "Type": "`React.ComponentType<any>`",
            "Description": "A custom wrapper component for the table.",
            "Default": "`div`"
        },
        {
            "Attribute": "topContent",
            "Type": "`ReactNode`",
            "Description": "Provides content to include a component in the top of the table.",
            "Default": "-"
        },
        {
            "Attribute": "bottomContent",
            "Type": "`ReactNode`",
            "Description": "Provides content to include a component in the bottom of the table.",
            "Default": "-"
        },
        {
            "Attribute": "topContentPlacement",
            "Type": "`inside` | `outside`",
            "Description": "Where to place the `topContent` component.",
            "Default": "`inside`"
        },
        {
            "Attribute": "bottomContentPlacement",
            "Type": "`inside` | `outside`",
            "Description": "Where to place the `bottomContent` component.",
            "Default": "`inside`"
        },
        {
            "Attribute": "showSelectionCheckboxes",
            "Type": "`boolean`",
            "Description": "Whether the row selection checkboxes should be displayed.",
            "Default": "-"
        },
        {
            "Attribute": "sortDescriptor",
            "Type": "[SortDescriptor](#sort-descriptor)",
            "Description": "The current sorted column and direction.",
            "Default": "-"
        },
        {
            "Attribute": "selectedKeys",
            "Type": "[Selection](#selection)",
            "Description": "The currently selected keys in the collection (controlled).",
            "Default": "-"
        },
        {
            "Attribute": "defaultSelectedKeys",
            "Type": "[Selection](#selection)",
            "Description": "The initial selected keys in the collection (uncontrolled).",
            "Default": "-"
        },
        {
            "Attribute": "disabledKeys",
            "Type": "[Selection](#selection)",
            "Description": "A set of keys for rows that are disabled.",
            "Default": "-"
        },
        {
            "Attribute": "disallowEmptySelection",
            "Type": "`boolean`",
            "Description": "Whether the collection allows empty selection.",
            "Default": "-"
        },
        {
            "Attribute": "selectionMode",
            "Type": "`single` | `multiple` | `none`",
            "Description": "The type of selection that is allowed in the collection.",
            "Default": "`none`"
        },
        {
            "Attribute": "selectionBehavior",
            "Type": "`toggle` | `replace`",
            "Description": "How multiple selection should behave in the collection.",
            "Default": "`toggle`"
        },
        {
            "Attribute": "disabledBehavior",
            "Type": "`selection` | `all`",
            "Description": "Whether `disabledKeys` applies to all interactions, or only selection.",
            "Default": "`selection`"
        },
        {
            "Attribute": "allowDuplicateSelectionEvents",
            "Type": "`boolean`",
            "Description": "Whether `onSelectionChange` should fire even if the new set of keys is the same as the last.",
            "Default": "-"
        },
        {
            "Attribute": "disableAnimation",
            "Type": "`boolean`",
            "Description": "Whether to disable the table and checkbox animations.",
            "Default": "`false`"
        },
        {
            "Attribute": "checkboxesProps",
            "Type": "[CheckboxProps](/docs/components/checkbox/#checkbox-props)",
            "Description": "Props to be passed to the checkboxes.",
            "Default": "-"
        },
        {
            "Attribute": "classNames",
            "Type": "`Record<\"base\" ｜ \"table\" ｜ \"thead\" ｜ \"tbody\" ｜ \"tfoot\" ｜ \"emptyWrapper\" ｜ \"loadingWrapper\" ｜ \"wrapper\" ｜ \"tr\" ｜ \"th\" ｜ \"td\" ｜ \"sortIcon\", string>`",
            "Description": "Allows to set custom class names for the dropdown item slots.",
            "Default": "-"
        }
    ],
    "link": "https://nextui.org/docs/components/table",
    "events": [
        {
            "Attribute": "onRowAction",
            "Type": "`(key: React.Key) => void`",
            "Description": "Handler that is called when a user performs an action on the row."
        },
        {
            "Attribute": "onCellAction",
            "Type": "`(key: react.Key) => void`",
            "Description": "Handler that is called when a user performs an action on the cell."
        },
        {
            "Attribute": "onSelectionChange",
            "Type": "`(keys: Selection) => any`",
            "Description": "Handler that is called when the selection changes."
        },
        {
            "Attribute": "onSortChange",
            "Type": "`(descriptor: SortDescriptor) => any`",
            "Description": "Handler that is called when the sorted column or direction changes."
        }
    ]
}

{
  "props": [
    {
      "Attribute": "children",
      "Type": "`ReactNode`",
      "Description": "The label of the switch.",
      "Default": "-"
    },
    {
      "Attribute": "value",
      "Type": "`string`",
      "Description": "The value of the input element, used when submitting an HTML form.",
      "Default": "-"
    },
    {
      "Attribute": "name",
      "Type": "`string`",
      "Description": "The name of the input element, used when submitting an HTML form.",
      "Default": "-"
    },
    {
      "Attribute": "size",
      "Type": "`sm` | `md` | `lg`",
      "Description": "The size of the switch.",
      "Default": "`md`"
    },
    {
      "Attribute": "color",
      "Type": "`default` | `primary` | `secondary` | `success` | `warning` | `danger`",
      "Description": "The color of the switch.",
      "Default": "`primary`"
    },
    {
      "Attribute": "thumbIcon",
      "Type": "[ThumbIconProps](#switch-icon-props)",
      "Description": "The icon to be displayed when the switch is checked.",
      "Default": "-"
    },
    {
      "Attribute": "startContent",
      "Type": "`ReactNode`",
      "Description": "The icon to be displayed at the start of the switch.",
      "Default": "-"
    },
    {
      "Attribute": "endContent",
      "Type": "`ReactNode`",
      "Description": "The icon to be displayed at the end of the switch.",
      "Default": "-"
    },
    {
      "Attribute": "isSelected",
      "Type": "`boolean`",
      "Description": "Whether the element should be selected (controlled).",
      "Default": "-"
    },
    {
      "Attribute": "defaultSelected",
      "Type": "`boolean`",
      "Description": "Whether the element should be selected (uncontrolled).",
      "Default": "-"
    },
    {
      "Attribute": "isRequired",
      "Type": "`boolean`",
      "Description": "Whether user input is required on the input before form submission.",
      "Default": "`false`"
    },
    {
      "Attribute": "isReadOnly",
      "Type": "`boolean`",
      "Description": "Whether the input can be selected but not changed by the user.",
      "Default": "-"
    },
    {
      "Attribute": "isDisabled",
      "Type": "`boolean`",
      "Description": "Whether the switch is disabled.",
      "Default": "`false`"
    },
    {
      "Attribute": "disableAnimation",
      "Type": "`boolean`",
      "Description": "Whether the animation should be disabled.",
      "Default": "`false`"
    },
    {
      "Attribute": "classNames",
      "Type": "`Record<\"base\"｜ \"wrapper\"｜ \"thumb\"｜ \"label\" ｜ \"startContent\" ｜ \"endContent\" ｜ \"thumbIcon\" , string>`",
      "Description": "Allows to set custom class names for the switch slots.",
      "Default": "-"
    }
  ],
  "link": "https://nextui.org/docs/components/switch",
  "events": [
    {
      "Attribute": "onChange",
      "Type": "`React.ChangeEvent<HTMLInputElement>`",
      "Description": "Handler that is called when the element's selection state changes. You can pull out the new checked state by accessing `event.target.checked` (boolean)."
    },
    {
      "Attribute": "onValueChange",
      "Type": "`(isSelected: boolean) => void`",
      "Description": "Handler that is called when the element's selection state changes."
    }
  ]
}

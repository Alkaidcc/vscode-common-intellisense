{
  "props": [
    {
      "Attribute": "children",
      "Type": "`ReactNode` | `ReactNode[]`",
      "Description": "The contents of the collection. Usually the array of `AccordionItem`",
      "Default": ""
    },
    {
      "Attribute": "variant",
      "Type": "`light` | `shadow` | `bordered` | `splitted`",
      "Description": "The accordion appearance style.",
      "Default": "`light`"
    },
    {
      "Attribute": "selectionMode",
      "Type": "`none` | `single` | `multiple`",
      "Description": "The type of selection that is allowed in the collection.",
      "Default": ""
    },
    {
      "Attribute": "selectionBehavior",
      "Type": "`toggle` | `replace`",
      "Description": "The accordion selection behavior.",
      "Default": "`toggle`"
    },
    {
      "Attribute": "isCompact",
      "Type": "`boolean`",
      "Description": "Whether all Accordion items should be smaller.",
      "Default": "`false`"
    },
    {
      "Attribute": "isDisabled",
      "Type": "`boolean`",
      "Description": "Whether the Accordion items are disabled.",
      "Default": ""
    },
    {
      "Attribute": "showDivider",
      "Type": "`boolean`",
      "Description": "WWhether to display a divider at the bottom of the each accordion item.",
      "Default": "`true`"
    },
    {
      "Attribute": "DividerProps",
      "Type": "[DividerProps](/docs/components/divider)",
      "Description": "The divider component props.",
      "Default": "-"
    },
    {
      "Attribute": "hideIndicator",
      "Type": "`boolean`",
      "Description": "Whether the Accordion items indicator is hidden.",
      "Default": ""
    },
    {
      "Attribute": "disableAnimation",
      "Type": "`boolean`",
      "Description": "Whether the Accordion items open/close animation is disabled.",
      "Default": ""
    },
    {
      "Attribute": "disableIndicatorAnimation",
      "Type": "`boolean`",
      "Description": "Whether the Accordion items indicator animation is disabled.",
      "Default": ""
    },
    {
      "Attribute": "disallowEmptySelection",
      "Type": "`boolean`",
      "Description": "Whether the collection allows empty selection.",
      "Default": ""
    },
    {
      "Attribute": "keepContentMounted",
      "Type": "`boolean`",
      "Description": "Whether the Accordion items content should be always mounted.",
      "Default": "`false`"
    },
    {
      "Attribute": "fullWidth",
      "Type": "`boolean`",
      "Description": "Whether the accordion should take up the full width of its parent container.",
      "Default": "`true`"
    },
    {
      "Attribute": "motionProps",
      "Type": "`MotionProps`",
      "Description": "The motion properties of the Accordion.",
      "Default": ""
    },
    {
      "Attribute": "disabledKeys",
      "Type": "`React.Key[]`",
      "Description": "The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",
      "Default": ""
    },
    {
      "Attribute": "itemClasses",
      "Type": "[Classnames](#accordion-item-classnames)",
      "Description": "The accordion items classNames.",
      "Default": ""
    },
    {
      "Attribute": "selectedKeys",
      "Type": "`all` | `React.Key[]`",
      "Description": "The currently selected keys in the collection (controlled).",
      "Default": ""
    },
    {
      "Attribute": "defaultSelectedKeys",
      "Type": "`all` | `React.Key[]`",
      "Description": "The initial selected keys in the collection (uncontrolled).",
      "Default": ""
    },
    {
      "Attribute": "disabledKeys",
      "Type": "`React.Key[]`",
      "Description": "The currently disabled keys in the collection (controlled).",
      "Default": ""
    }
  ],
  "link": "https://nextui.org/docs/components/accordion",
  "events": [
    {
      "Attribute": "onSelectionChange",
      "Type": "`(keys: \"all\" ï½œ Set<React.Key>) => any`",
      "Description": "Handler that is called when the selection changes."
    }
  ]
}

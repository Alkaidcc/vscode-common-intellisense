{
  "props": [
    {
      "Attribute": "children",
      "Type": "`ReactNode`",
      "Description": "The label of the checkbox.",
      "Default": "-"
    },
    {
      "Attribute": "icon",
      "Type": "[CheckboxIconProps](#checkbox-icon-props)",
      "Description": "The icon to be displayed when the checkbox is checked.",
      "Default": "-"
    },
    {
      "Attribute": "value",
      "Type": "`string`",
      "Description": "The value of the checkbox element, used when submitting an HTML form.",
      "Default": ""
    },
    {
      "Attribute": "name",
      "Type": "`string`",
      "Description": "The name of the checkbox element, used when submitting an HTML form.",
      "Default": ""
    },
    {
      "Attribute": "size",
      "Type": "`sm` | `md` | `lg`",
      "Description": "The size of the checkbox.",
      "Default": "`md`"
    },
    {
      "Attribute": "color",
      "Type": "`default` | `primary` | `secondary` | `success` | `warning` | `danger`",
      "Description": "The color of the checkbox.",
      "Default": "`primary`"
    },
    {
      "Attribute": "radius",
      "Type": "`none` | `sm` | `md` | `lg` | `full`",
      "Description": "The radius of the checkbox.",
      "Default": "-"
    },
    {
      "Attribute": "lineThrough",
      "Type": "`boolean`",
      "Description": "Whether the label should be crossed out.",
      "Default": "`false`"
    },
    {
      "Attribute": "isSelected",
      "Type": "`boolean`",
      "Description": "Whether the element should be selected (controlled).",
      "Default": ""
    },
    {
      "Attribute": "defaultSelected",
      "Type": "`boolean`",
      "Description": "Whether the element should be selected (uncontrolled).",
      "Default": ""
    },
    {
      "Attribute": "isRequired",
      "Type": "`boolean`",
      "Description": "Whether user checkbox is required on the checkbox before form submission.",
      "Default": "`false`"
    },
    {
      "Attribute": "isReadOnly",
      "Type": "`boolean`",
      "Description": "Whether the checkbox can be selected but not changed by the user.",
      "Default": ""
    },
    {
      "Attribute": "isDisabled",
      "Type": "`boolean`",
      "Description": "Whether the checkbox is disabled.",
      "Default": "`false`"
    },
    {
      "Attribute": "isIndeterminate",
      "Type": "`boolean`",
      "Description": "Indeterminism is presentational only. The indeterminate visual representation remains regardless of user interaction.",
      "Default": ""
    },
    {
      "Attribute": "isInvalid",
      "Type": "`boolean`",
      "Description": "Whether the checkbox is invalid.",
      "Default": "`false`"
    },
    {
      "Attribute": "validationState",
      "Type": "`valid` | `invalid`",
      "Description": "Whether the checkbox should display its \"valid\" or \"invalid\" visual styling. (**Deprecated**) use **isInvalid** instead.",
      "Default": "-"
    },
    {
      "Attribute": "disableAnimation",
      "Type": "`boolean`",
      "Description": "Whether the animation should be disabled.",
      "Default": "`false`"
    },
    {
      "Attribute": "classNames",
      "Type": "`Record<\"base\"｜ \"wrapper\"｜ \"icon\"｜ \"label\", string>`",
      "Description": "Allows to set custom class names for the checkbox slots.",
      "Default": "-"
    }
  ],
  "link": "https://nextui.org/docs/components/checkbox",
  "events": [
    {
      "Attribute": "onChange",
      "Type": "`React.ChangeEvent<HTMLInputElement>`",
      "Description": "Handler that is called when the element's selection state changes. You can pull out the new checked state by accessing `event.target.checked` (boolean)."
    },
    {
      "Attribute": "onValueChange",
      "Type": "`(isSelected: boolean) => void`",
      "Description": "Handler that is called when the element's selection state changes."
    }
  ]
}

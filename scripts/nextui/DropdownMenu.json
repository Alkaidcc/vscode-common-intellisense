{
  "props": [
    {
      "Attribute": "children",
      "Type": "`ReactNode` | `((item: T) => ReactElement)`",
      "Description": "The contents of the collection. It's usually the `DropdownItem` or `DropdownSection`. (static)",
      "": "-"
    },
    {
      "Attribute": "items",
      "Type": "[`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols)",
      "Description": "Item objects in the collection. (dynamic)",
      "": "-"
    },
    {
      "Attribute": "variant",
      "Type": "`solid` | `bordered` | `light` | `flat` | `faded` | `shadow`",
      "Description": "The dropdown items appearance style.",
      "": "`solid`"
    },
    {
      "Attribute": "color",
      "Type": "`default` | `primary` | `secondary` | `success` | `warning` | `danger`",
      "Description": "The dropdown items color theme.",
      "": "`default`"
    },
    {
      "Attribute": "selectionMode",
      "Type": "`none` | `single` | `multiple`",
      "Description": "The type of selection that is allowed in the collection.",
      "": "-"
    },
    {
      "Attribute": "selectedKeys",
      "Type": "`React.Key[]`",
      "Description": "The currently selected keys in the collection (controlled).",
      "": "-"
    },
    {
      "Attribute": "disabledKeys",
      "Type": "`React.Key[]`",
      "Description": "The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",
      "": "-"
    },
    {
      "Attribute": "defaultSelectedKeys",
      "Type": "`all` | `React.Key[]`",
      "Description": "The initial selected keys in the collection (uncontrolled).",
      "": "-"
    },
    {
      "Attribute": "disallowEmptySelection",
      "Type": "`boolean`",
      "Description": "Whether the collection allows empty selection.",
      "": "`false`"
    },
    {
      "Attribute": "autoFocus",
      "Type": "`boolean` | `first` | `last`",
      "Description": "Where the focus should be set.",
      "": "`false`"
    },
    {
      "Attribute": "shouldFocusWrap",
      "Type": "`boolean`",
      "Description": "Whether keyboard navigation is circular.",
      "": "`false`"
    },
    {
      "Attribute": "closeOnSelect",
      "Type": "`boolean`",
      "Description": "Whether the dropdown menu should be closed when an item is selected.",
      "": "`true`"
    },
    {
      "Attribute": "disableAnimation",
      "Type": "`boolean`",
      "Description": "Whether to disable the animation of the dropdown items.",
      "": "`false`"
    },
    {
      "Attribute": "itemClasses",
      "Type": "`Record<\"base\"｜ \"wrapper\"｜ \"title\"｜ \"description\"｜ \"shortcut\" ｜ \"selectedIcon\", string>`",
      "Description": "Allows to set custom class names for the dropdown item slots.",
      "": "-"
    }
  ],
  "link": "https://nextui.org/docs/components/dropdownmenu",
  "events": [
    {
      "Attribute": "onAction",
      "Type": "`(key: React.Key) => void`",
      "Description": "Handler that is called when an item is selected."
    },
    {
      "Attribute": "onSelectionChange",
      "Type": "`(keys: React.Key[]) => void`",
      "Description": "Handler that is called when the selection changes."
    },
    {
      "Attribute": "onClose",
      "Type": "`() => void`",
      "Description": "Handler that is called when the menu should close after selecting an item."
    }
  ]
}

{
  "name": "Badge",
  "props": {
    "anchorOrigin": {
      "description": "The anchor of the badge.",
      "description_zh": "The anchor of the badge.",
      "default": "{\n  vertical: 'top',\n  horizontal: 'right',\n}",
      "value": "",
      "type": "{ horizontal: 'left'| 'right', vertical: 'bottom'| 'top' }",
      "required": false
    },
    "badgeContent": {
      "description": "The content rendered within the badge.",
      "description_zh": "The content rendered within the badge.",
      "default": "-",
      "value": "",
      "type": "node",
      "required": false
    },
    "children": {
      "description": "The badge will be added relative to this node.",
      "description_zh": "The badge will be added relative to this node.",
      "default": "-",
      "value": "",
      "type": "node",
      "required": false
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "description_zh": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "color": {
      "description": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the palette customization guide.",
      "description_zh": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the palette customization guide.",
      "default": "'default'",
      "value": "",
      "type": "'default'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string",
      "required": false
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component.",
      "description_zh": "The component used for the root node. Either a string to use a HTML element or a component.",
      "default": "-",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "components": {
      "description": "The components used for each slot inside.This prop is an alias for the slots prop. It's recommended to use the slots prop instead.",
      "description_zh": "The components used for each slot inside.This prop is an alias for the slots prop. It's recommended to use the slots prop instead.",
      "default": "{}",
      "value": "",
      "type": "{ Badge?: elementType, Root?: elementType }",
      "required": false
    },
    "componentsProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones.This prop is an alias for the slotProps prop. It's recommended to use the slotProps prop instead, as componentsProps will be deprecated in the future.",
      "description_zh": "The extra props for the slot components. You can override the existing props or add new ones.This prop is an alias for the slotProps prop. It's recommended to use the slotProps prop instead, as componentsProps will be deprecated in the future.",
      "default": "{}",
      "value": "",
      "type": "{ badge?: func| object, root?: func| object }",
      "required": false
    },
    "invisible": {
      "description": "If true, the badge is invisible.",
      "description_zh": "If true, the badge is invisible.",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "max": {
      "description": "Max count to show.",
      "description_zh": "Max count to show.",
      "default": "99",
      "value": "",
      "type": "number",
      "required": false
    },
    "overlap": {
      "description": "Wrapped shape the badge should overlap.",
      "description_zh": "Wrapped shape the badge should overlap.",
      "default": "'rectangular'",
      "value": "",
      "type": "'circular'| 'rectangular'",
      "required": false
    },
    "showZero": {
      "description": "Controls whether the badge is hidden when badgeContent is zero.",
      "description_zh": "Controls whether the badge is hidden when badgeContent is zero.",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "slotProps": {
      "description": "The props used for each slot inside the Badge.",
      "description_zh": "The props used for each slot inside the Badge.",
      "default": "{}",
      "value": "",
      "type": "{ badge?: func| object, root?: func| object }",
      "required": false
    },
    "slots": {
      "description": "The components used for each slot inside the Badge. Either a string to use a HTML element or a component.",
      "description_zh": "The components used for each slot inside the Badge. Either a string to use a HTML element or a component.",
      "default": "{}",
      "value": "",
      "type": "{ badge?: elementType, root?: elementType }",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    },
    "variant": {
      "description": "The variant to use.",
      "description_zh": "The variant to use.",
      "default": "'standard'",
      "value": "",
      "type": "'dot'| 'standard'| string",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/badge/",
  "link_zh": "https://mui.com/material-ui/api/badge/",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Badge"
}

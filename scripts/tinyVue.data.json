[
  {
    "name": "TinyButton",
    "props": {
      "autofocus": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认聚焦",
        "description_zh": "是否默认聚焦"
      },
      "circle": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否圆形按钮",
        "description_zh": "是否圆形按钮"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否被禁用按钮",
        "description_zh": "是否被禁用按钮"
      },
      "ghost": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否幽灵按钮",
        "description_zh": "是否幽灵按钮"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "按钮左侧展示的图标，接收为Icon组件",
        "description_zh": "按钮左侧展示的图标，接收为Icon组件"
      },
      "loading": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否加载中状态",
        "description_zh": "是否加载中状态"
      },
      "native-type": {
        "default": "'button'",
        "value": "",
        "type": "'button' | 'submit' | 'reset'",
        "description": "对应按钮原生 type 属性",
        "description_zh": "对应按钮原生 type 属性"
      },
      "plain": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否朴素按钮",
        "description_zh": "是否朴素按钮"
      },
      ":reset-time": {
        "default": "1000",
        "value": "",
        "type": "number",
        "description": "设置按钮禁用时间，防止重复提交，单位毫秒",
        "description_zh": "设置按钮禁用时间，防止重复提交，单位毫秒"
      },
      "round": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否圆角按钮",
        "description_zh": "是否圆角按钮"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'large' | 'medium' | 'small' | 'mini'",
        "description": "定义按钮尺寸",
        "description_zh": "定义按钮尺寸"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "按钮显示的文本",
        "description_zh": "按钮显示的文本"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "IButtonType",
        "description": "展示按钮不同的状态，设置为text则展示为文本按钮",
        "description_zh": "展示按钮不同的状态，设置为text则展示为文本按钮"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/button",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/button",
    "typeDetail": {
      "IButtonType": "type IButtonType = 'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'"
    },
    "events": [
      {
        "name": "click",
        "description": "当按钮被点击时触发的回调函数",
        "description_zh": "当按钮被点击时触发的回调函数",
        "params": "(event: PointEvent) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽，自定义按钮展示内容",
        "description_zh": "默认插槽，自定义按钮展示内容"
      }
    ],
    "filename": "Button"
  },
  {
    "name": "TinyButtonGroup",
    "props": {
      "border": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示边框线",
        "description_zh": "是否显示边框线"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "IButtonGroupData[]",
        "description": "按钮组数据",
        "description_zh": "按钮组数据"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否被禁用按钮组",
        "description_zh": "是否被禁用按钮组"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "默认选中按钮的值",
        "description_zh": "默认选中按钮的值"
      },
      "plain": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否朴素按钮",
        "description_zh": "是否朴素按钮"
      },
      "show-edit": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示编辑按钮，只有在显示更多的情况下生效",
        "description_zh": "是否显示编辑按钮，只有在显示更多的情况下生效"
      },
      ":show-more": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "当超过给定的按钮数量时显示更多按钮",
        "description_zh": "当超过给定的按钮数量时显示更多按钮"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "按钮组尺寸大小",
        "description_zh": "按钮组尺寸大小"
      },
      "text-field": {
        "default": "'text'",
        "value": "",
        "type": "string",
        "description": "按钮显示文字的字段值",
        "description_zh": "按钮显示文字的字段值"
      },
      "value-field": {
        "default": "'value'",
        "value": "",
        "type": "string",
        "description": "按钮选中值的字段值",
        "description_zh": "按钮选中值的字段值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/button-group",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/button-group",
    "typeDetail": {
      "IButtonGroupData": "interface IButtonGroupData {\n  text: string // 显示文本\n  value: number | number // 选中的值\n  disabled?: boolean // 是否禁用\n  // 配置选块角标\n  sup?: {\n    text: string // 角标文本\n    class?: string // 角标的自定义class\n    slot?: string // 自定义插槽名称，提供后可在button-group内使用对应的插槽自定义角标内容\n    icon?: Component // 传入图标组件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "当选中按钮发生改变时触发",
        "description_zh": "当选中按钮发生改变时触发",
        "params": "(value: string | number) => void"
      },
      {
        "name": "edit",
        "description": "当编辑按钮被点击时触发",
        "description_zh": "当编辑按钮被点击时触发",
        "params": "() => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽，自定义按钮组内容",
        "description_zh": "默认插槽，自定义按钮组内容"
      }
    ],
    "filename": "ButtonGroup"
  },
  {
    "name": "TinyColor",
    "props": {},
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Color"
  },
  {
    "name": "TinyContainer",
    "props": {
      "aside-width": {
        "default": "200",
        "value": "",
        "type": "number | string",
        "description": "左侧宽度",
        "description_zh": "左侧宽度"
      },
      "footer-height": {
        "default": "60",
        "value": "",
        "type": "number | string",
        "description": "底部高度",
        "description_zh": "底部高度"
      },
      "header-height": {
        "default": "60",
        "value": "",
        "type": "number | string",
        "description": "头部高度",
        "description_zh": "头部高度"
      },
      "pattern": {
        "default": "\"default\"",
        "value": "",
        "type": "IContainerPattern",
        "description": "版型类型",
        "description_zh": "版型类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/container",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/container",
    "typeDetail": {
      "IContainerPattern": "type IContainerPattern = 'default' | 'simple' | 'legend' | 'classic' | 'fashion'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "aside",
        "description": "侧边内容插槽",
        "description_zh": "侧边内容插槽"
      },
      {
        "name": "default",
        "description": "主要内容插槽",
        "description_zh": "主要内容插槽"
      },
      {
        "name": "footer",
        "description": "底部内容插槽",
        "description_zh": "底部内容插槽"
      },
      {
        "name": "header",
        "description": "头部内容插槽",
        "description_zh": "头部内容插槽"
      }
    ],
    "filename": "Container"
  },
  {
    "name": "TinyFont",
    "props": {},
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/font",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/font",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Font"
  },
  {
    "name": "TinyLayout",
    "props": {
      ":cols": {
        "default": "12",
        "value": "",
        "type": "number",
        "description": "总栅格数;该属性的可选值为 12 /24 ",
        "description_zh": "总栅格数;该属性的可选值为 12 /24 "
      },
      "tag": {
        "default": "\"div\"",
        "value": "",
        "type": "string",
        "description": "定义 Layout 元素的渲染后的标签，默认为div",
        "description_zh": "定义 Layout 元素的渲染后的标签，默认为div"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Layout"
  },
  {
    "name": "TinyRow",
    "props": {
      "align": {
        "default": "\"top\"",
        "value": "",
        "type": "string",
        "description": "子项的副轴对齐方向，可取值：'top', 'middle', 'bottom'",
        "description_zh": "子项的副轴对齐方向，可取值：'top', 'middle', 'bottom'"
      },
      "flex": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为flex容器",
        "description_zh": "是否为flex容器"
      },
      ":gutter": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "子项的间隔的像素",
        "description_zh": "子项的间隔的像素"
      },
      "justify": {
        "default": "\"start\"",
        "value": "",
        "type": "string",
        "description": "子项的主轴对齐方向，可取值：'start', 'center', 'end', 'space-between', 'space-around'",
        "description_zh": "子项的主轴对齐方向，可取值：'start', 'center', 'end', 'space-between', 'space-around'"
      },
      "noSpace": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "子项没有间隔，相当于强制gutter=0的情况",
        "description_zh": "子项没有间隔，相当于强制gutter=0的情况"
      },
      "order": {
        "default": "\"asc\" | \"des\"",
        "value": "",
        "type": "string",
        "description": "子项的排序方式。 不设置时，保留子项在模板中的顺序。",
        "description_zh": "子项的排序方式。 不设置时，保留子项在模板中的顺序。"
      },
      "tag": {
        "default": "\"div\"",
        "value": "",
        "type": "string",
        "description": "定义 Row 元素的渲染后的标签，默认为div",
        "description_zh": "定义 Row 元素的渲染后的标签，默认为div"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Row"
  },
  {
    "name": "TinyCol",
    "props": {
      ":lg": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "在响应式宽度  < 1920px  时，该列占用的栅格数",
        "description_zh": "在响应式宽度  < 1920px  时，该列占用的栅格数"
      },
      ":md": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "在响应式宽度  < 1200px  时，该列占用的栅格数",
        "description_zh": "在响应式宽度  < 1200px  时，该列占用的栅格数"
      },
      ":move": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "子项的右偏移量,是通过 left 属性实现偏移,建议使用 offset 代替",
        "description_zh": "子项的右偏移量,是通过 left 属性实现偏移,建议使用 offset 代替"
      },
      ":no": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "子项排序编号",
        "description_zh": "子项排序编号"
      },
      ":offset": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "子项的向右偏移量,是通过 margin-left 属性实现偏移",
        "description_zh": "子项的向右偏移量,是通过 margin-left 属性实现偏移"
      },
      ":sm": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "在响应式宽度  < 992px  时，该列占用的栅格数",
        "description_zh": "在响应式宽度  < 992px  时，该列占用的栅格数"
      },
      ":span": {
        "default": "12",
        "value": "",
        "type": "number",
        "description": "子项占据的列数",
        "description_zh": "子项占据的列数"
      },
      "tag": {
        "default": "\"div\"",
        "value": "",
        "type": "string",
        "description": "定义 Col 元素的渲染后的标签，默认为div",
        "description_zh": "定义 Col 元素的渲染后的标签，默认为div"
      },
      ":xl": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "在响应式宽度  >= 1920px  时，该列占用的栅格数",
        "description_zh": "在响应式宽度  >= 1920px  时，该列占用的栅格数"
      },
      ":xs": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "在响应式宽度  < 768px  时，该列占用的栅格数",
        "description_zh": "在响应式宽度  < 768px  时，该列占用的栅格数"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Col"
  },
  {
    "name": "TinyLink",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用状态",
        "description_zh": "是否禁用状态"
      },
      "href": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生 href 属性",
        "description_zh": "原生 href 属性"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "图标组件",
        "description_zh": "图标组件"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "'primary' | 'success' | 'warning' | 'danger' | 'info'",
        "description": "文本链接类型",
        "description_zh": "文本链接类型"
      },
      "underline": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否下划线",
        "description_zh": "是否下划线"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "显示内容",
        "description_zh": "显示内容"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/link",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/link",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      },
      {
        "name": "icon",
        "description": "图标",
        "description_zh": "图标"
      }
    ],
    "filename": "Link"
  },
  {
    "name": "TinyDivider",
    "props": {
      "border-style": {
        "default": "'solid'",
        "value": "",
        "type": "string",
        "description": "设置分隔线的样式，该属性的可选值为 solid / dashed",
        "description_zh": "设置分隔线的样式，该属性的可选值为 solid / dashed"
      },
      "color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置分隔线的颜色",
        "description_zh": "设置分隔线的颜色"
      },
      "content-background-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置分割线文案的背景颜色",
        "description_zh": "设置分割线文案的背景颜色"
      },
      "content-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置分隔线文案的颜色",
        "description_zh": "设置分隔线文案的颜色"
      },
      "content-position": {
        "default": "'center'",
        "value": "",
        "type": "string",
        "description": "设置分隔线文案的位置，该属性的可选值为 left / center / right",
        "description_zh": "设置分隔线文案的位置，该属性的可选值为 left / center / right"
      },
      "direction": {
        "default": "'horizontal'",
        "value": "",
        "type": "string",
        "description": "设置分隔线的方向，该属性的可选值为 horizontal / vertical",
        "description_zh": "设置分隔线的方向，该属性的可选值为 horizontal / vertical"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/divider",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/divider",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "Divider"
  },
  {
    "name": "TinyActionMenu",
    "props": {
      ":max-show-num": {
        "default": "2",
        "value": "",
        "type": "number",
        "description": "最多显示菜单按钮的个数，其他菜单在下拉弹框显示",
        "description_zh": "最多显示菜单按钮的个数，其他菜单在下拉弹框显示"
      },
      "mode": {
        "default": "\"default\"",
        "value": "",
        "type": "\"default\" | \"card\"",
        "description": "菜单按钮模式",
        "description_zh": "菜单按钮模式"
      },
      "more-text": {
        "default": "'更多'",
        "value": "",
        "type": "string",
        "description": "下拉按钮文本",
        "description_zh": "下拉按钮文本"
      },
      "options": {
        "default": "[]",
        "value": "",
        "type": "IItemData[]",
        "description": "菜单项列表的数据",
        "description_zh": "菜单项列表的数据"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "下拉弹框的类名，用于自定义样式",
        "description_zh": "下拉弹框的类名，用于自定义样式"
      },
      "show-icon": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示下拉触发源图标",
        "description_zh": "是否显示下拉触发源图标"
      },
      "spacing": {
        "default": "'5px'",
        "value": "",
        "type": "string | number",
        "description": "菜单按钮之间的间距",
        "description_zh": "菜单按钮之间的间距"
      },
      "suffix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "下拉触发源图标",
        "description_zh": "下拉触发源图标"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "菜单按钮文本的键值",
        "description_zh": "菜单按钮文本的键值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/action-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/action-menu",
    "typeDetail": {
      "IItemData": "interface IItemData {\n  label?: string           // 菜单项文本\n  disabled?: boolean       // 是否禁用\n  divided?: boolean        // 是否显示分割线\n  children?: IItemData[]   // 菜单项子集\n  icon?: Component      // 菜单项图标\n}",
      "IItemClickParams": "interface IItemClickParams {\n  itemData: IItemData     // 菜单项配置\n  vm: {                   // 菜单项实例\n    selected: boolean\n    textField: string\n    tipPosition: string\n    $el: HTMLElement\n  }       \n}"
    },
    "events": [
      {
        "name": "item-click",
        "description": "监听菜单项的点击事件",
        "description_zh": "监听菜单项的点击事件",
        "params": "(data:IItemClickParams) => void"
      },
      {
        "name": "more-click",
        "description": "监听下拉按钮的点击事件。trigger 为 click 时生效",
        "description_zh": "监听下拉按钮的点击事件。trigger 为 click 时生效",
        "params": "() => void"
      },
      {
        "name": "visible-change",
        "description": "监听下拉弹框的显示或隐藏状态变化",
        "description_zh": "监听下拉弹框的显示或隐藏状态变化",
        "params": "(status: boolean) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "item",
        "description": "菜单选项插槽",
        "description_zh": "菜单选项插槽"
      }
    ],
    "filename": "ActionMenu"
  },
  {
    "name": "TinyAnchor",
    "props": {
      "container-id": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "用于单页面 hash 路由模式时指定滚动容器的 id 值，id 为空时则滚动容器默认为 HTML 文档的根节点 body 元素",
        "description_zh": "用于单页面 hash 路由模式时指定滚动容器的 id 值，id 为空时则滚动容器默认为 HTML 文档的根节点 body 元素"
      },
      "is-affix": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "固定模式",
        "description_zh": "固定模式"
      },
      "links": {
        "default": "--",
        "value": "",
        "type": "ILink[]",
        "description": "导航数据配置项，可通过 children 嵌套",
        "description_zh": "导航数据配置项，可通过 children 嵌套"
      },
      "mark-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "自定义滚动的目标元素类名",
        "description_zh": "自定义滚动的目标元素类名"
      },
      "type": {
        "default": "'line'",
        "value": "",
        "type": "'line' | 'dot'",
        "description": "锚点类型",
        "description_zh": "锚点类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/anchor",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/anchor",
    "typeDetail": {
      "ILink": "interface ILink {\n  key: string // 锚点的key值\n  link: string // 导航的hash值\n  title: string // 锚点标题\n  children: ILink[] // 子锚点\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "锚点链接改变事件",
        "description_zh": "锚点链接改变事件",
        "params": "(hash: string) => void"
      },
      {
        "name": "link-click",
        "description": "锚点点击事件",
        "description_zh": "锚点点击事件",
        "params": "(event: Event, currentLink: {link: string, title: string}) => void"
      },
      {
        "name": "on-change",
        "description": "使用 change 代替；[deprecated v3.12.0 废弃，v3.17.0 移除；移除原因：命名规范]",
        "description_zh": "使用 change 代替；[deprecated v3.12.0 废弃，v3.17.0 移除；移除原因：命名规范]",
        "params": "(hash: string) => void"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "Anchor"
  },
  {
    "name": "TinyBreadcrumb",
    "props": {
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "定义面包屑的显示文本",
        "description_zh": "定义面包屑的显示文本"
      },
      "replace": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "在使用 to 进行路由跳转时，启用 replace 将不会向 浏览器历史记录 history 里添加新记录",
        "description_zh": "在使用 to 进行路由跳转时，启用 replace 将不会向 浏览器历史记录 history 里添加新记录"
      },
      "size": {
        "default": "'medium'",
        "value": "",
        "type": "string",
        "description": "设置面包屑尺寸大小",
        "description_zh": "设置面包屑尺寸大小"
      },
      "to": {
        "default": "--",
        "value": "",
        "type": "string | IOptionsItemTo",
        "description": "路由跳转对象，同 vue-router 的 to",
        "description_zh": "路由跳转对象，同 vue-router 的 to"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/breadcrumb",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/breadcrumb",
    "typeDetail": {
      "IOptionsItemTo": "interface IOptionsItemTo {\n  path: string\n}",
      "IOptionsItem": "interface IOptionsItem {\n  label?: string\n  to?: IOptionsItemTo\n  replace?: boolean\n  [customProp: string]: string\n}",
      "ISelectValue": "interface ISelectValue {\n  event: Event\n  link: HTMLElement\n  option: IOptionsItem\n  replace: boolean\n  to?: IOptionsItemTo\n}"
    },
    "events": [
      {
        "name": "select",
        "description": "点击 BreadcrumbItem 时触发",
        "description_zh": "点击 BreadcrumbItem 时触发",
        "params": "(value: ISelectValue) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "Breadcrumb"
  },
  {
    "name": "TinyDropdown",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "divided": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示分割线",
        "description_zh": "是否显示分割线"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "内嵌图标",
        "description_zh": "内嵌图标"
      },
      "item-data": {
        "default": "--",
        "value": "",
        "type": "IItemData",
        "description": "菜单项的配置信息",
        "description_zh": "菜单项的配置信息"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "菜单项的文本",
        "description_zh": "菜单项的文本"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "events": [
      {
        "name": "button-click",
        "description": "监听左侧按钮点击事件，仅 split-button 为 true 时生效",
        "description_zh": "监听左侧按钮点击事件，仅 split-button 为 true 时生效",
        "params": "() => void"
      },
      {
        "name": "item-click",
        "description": "监听点击菜单项事件",
        "description_zh": "监听点击菜单项事件",
        "params": "(data:IItemClickParam) => void"
      },
      {
        "name": "visible-change",
        "description": "监听下拉框的显示或隐藏状态",
        "description_zh": "监听下拉框的显示或隐藏状态",
        "params": "(status:boolean) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "菜单项文本区域",
        "description_zh": "菜单项文本区域"
      }
    ],
    "typeDetail": {
      "IMenuOption": "interface IMenuOption {\n  options: IItemData[]\n  textField?: string\n  popperClass?: string\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'\n}",
      "IItemClickParam": "interface IItemClickParam {\n  itemData: IItemData\n  // dropdownItem 组件的实例\n  vm: {\n    selected: boolean\n    textField: string\n    tipPosition: string\n    $el: HTMLElement\n  }\n}",
      "IItemData": "interface IItemData {\n  label?: string\n  disabled?: boolean\n  divided?: boolean\n}",
      "IButtonType": "type IButtonType =  'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'",
      "IPlacementType": "type IPlacementType =  'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'"
    },
    "filename": "Dropdown"
  },
  {
    "name": "TinyDropdownMenu",
    "props": {
      "options": {
        "default": "[]",
        "value": "",
        "type": "IItemData []",
        "description": "通过配置式设置菜单项的属性",
        "description_zh": "通过配置式设置菜单项的属性"
      },
      "placement": {
        "default": "'bottom-end'",
        "value": "",
        "type": "IPlacementType",
        "description": "菜单弹出位置",
        "description_zh": "菜单弹出位置"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "下拉弹框的类名，用于自定义样式",
        "description_zh": "下拉弹框的类名，用于自定义样式"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "菜单项文本的字段,结合 options 属性使用",
        "description_zh": "菜单项文本的字段,结合 options 属性使用"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "下拉弹框区域，通常使用 tiny-dropdown-item 组件",
        "description_zh": "下拉弹框区域，通常使用 tiny-dropdown-item 组件"
      }
    ],
    "typeDetail": {
      "IMenuOption": "interface IMenuOption {\n  options: IItemData[]\n  textField?: string\n  popperClass?: string\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'\n}",
      "IItemClickParam": "interface IItemClickParam {\n  itemData: IItemData\n  // dropdownItem 组件的实例\n  vm: {\n    selected: boolean\n    textField: string\n    tipPosition: string\n    $el: HTMLElement\n  }\n}",
      "IItemData": "interface IItemData {\n  label?: string\n  disabled?: boolean\n  divided?: boolean\n}",
      "IButtonType": "type IButtonType =  'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'",
      "IPlacementType": "type IPlacementType =  'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'"
    },
    "filename": "DropdownMenu"
  },
  {
    "name": "TinyDropdownItem",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "divided": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示分割线",
        "description_zh": "是否显示分割线"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "内嵌图标",
        "description_zh": "内嵌图标"
      },
      "item-data": {
        "default": "--",
        "value": "",
        "type": "IItemData",
        "description": "菜单项的配置信息",
        "description_zh": "菜单项的配置信息"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "菜单项的文本",
        "description_zh": "菜单项的文本"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "methods": [],
    "typeDetail": {
      "IMenuOption": "interface IMenuOption {\n  options: IItemData[]\n  textField?: string\n  popperClass?: string\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'\n}",
      "IItemClickParam": "interface IItemClickParam {\n  itemData: IItemData\n  // dropdownItem 组件的实例\n  vm: {\n    selected: boolean\n    textField: string\n    tipPosition: string\n    $el: HTMLElement\n  }\n}",
      "IItemData": "interface IItemData {\n  label?: string\n  disabled?: boolean\n  divided?: boolean\n}",
      "IButtonType": "type IButtonType =  'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'",
      "IPlacementType": "type IPlacementType =  'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'"
    },
    "slots": [
      {
        "name": "default",
        "description": "菜单项文本区域",
        "description_zh": "菜单项文本区域"
      }
    ],
    "filename": "DropdownItem"
  },
  {
    "name": "TinyFallMenu",
    "props": {
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "设置瀑布菜单的数据",
        "description_zh": "设置瀑布菜单的数据"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/fall-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/fall-menu",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "left",
        "description": "自定义左侧切换图标",
        "description_zh": "自定义左侧切换图标"
      },
      {
        "name": "level1",
        "description": "自定义一级菜单",
        "description_zh": "自定义一级菜单"
      },
      {
        "name": "level2",
        "description": "自定义二级菜单",
        "description_zh": "自定义二级菜单"
      },
      {
        "name": "level3",
        "description": "自定义三级菜单",
        "description_zh": "自定义三级菜单"
      },
      {
        "name": "right",
        "description": "自定义右侧切换图标",
        "description_zh": "自定义右侧切换图标"
      }
    ],
    "filename": "FallMenu"
  },
  {
    "name": "TinyLinkMenu",
    "props": {
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "设置收藏夹菜单的数据",
        "description_zh": "设置收藏夹菜单的数据"
      },
      "default-expand-all": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置打开菜单弹窗时默认是否展开所有节点，默认为 true",
        "description_zh": "设置打开菜单弹窗时默认是否展开所有节点，默认为 true"
      },
      "ellipsis": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "菜单内容超长时省略显示，默认为 true",
        "description_zh": "菜单内容超长时省略显示，默认为 true"
      },
      "get-menu-data-sync": {
        "default": "--",
        "value": "",
        "type": "Function",
        "description": "自定义菜单数据服务，直接返回数据",
        "description_zh": "自定义菜单数据服务，直接返回数据"
      },
      ":icon": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "自定义节点展开折叠的图标",
        "description_zh": "自定义节点展开折叠的图标"
      },
      "keep-selected-nodes": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "树节点勾选内容后，点击取消按钮，再次打开弹窗是否保留取消前勾选的内容的状态，默认为 true",
        "description_zh": "树节点勾选内容后，点击取消按钮，再次打开弹窗是否保留取消前勾选的内容的状态，默认为 true"
      },
      ":max-item": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "设置可收藏的栏目的最大数量",
        "description_zh": "设置可收藏的栏目的最大数量"
      },
      ":search-icon": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "自定义搜索图标",
        "description_zh": "自定义搜索图标"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置收藏夹菜单的标题，默认为空",
        "description_zh": "设置收藏夹菜单的标题，默认为空"
      },
      "wrap": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "菜单内容超长时换行显示，默认为 false",
        "description_zh": "菜单内容超长时换行显示，默认为 false"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/link-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/link-menu",
    "typeDetail": {},
    "events": [],
    "methods": [
      {
        "name": "hideDialog",
        "description": "",
        "params": "关闭菜单弹窗",
        "description_zh": ""
      },
      {
        "name": "sureNodevalue",
        "description": "",
        "params": "获取选中的菜单节点并关闭菜单弹窗，同时展示选中的菜单",
        "description_zh": ""
      }
    ],
    "slots": [
      {
        "name": "foot",
        "description": "菜单弹窗底部插槽",
        "description_zh": "菜单弹窗底部插槽"
      }
    ],
    "filename": "LinkMenu"
  },
  {
    "name": "TinyNavMenu",
    "props": {
      "before-skip": {
        "default": "--",
        "value": "",
        "type": "(item: IMenuItem) => boolean",
        "description": "点击菜单跳转前的钩子函数，返回 false 将无法跳转",
        "description_zh": "点击菜单跳转前的钩子函数，返回 false 将无法跳转"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "IDataItem[]",
        "description": "设置导航菜单的数据",
        "description_zh": "设置导航菜单的数据"
      },
      "fetch-menu-data": {
        "default": "--",
        "value": "",
        "type": "() => IDataItem[]",
        "description": "自定义菜单数据加载服务，返回一个Promise对象",
        "description_zh": "自定义菜单数据加载服务，返回一个Promise对象"
      },
      "fields": {
        "default": "{ textField: \"title\", urlField: \"url\", key: \"id\" }",
        "value": "",
        "type": "IFields",
        "description": "自定义菜单数据的映射",
        "description_zh": "自定义菜单数据的映射"
      },
      "overflow": {
        "default": "auto",
        "value": "",
        "type": "IOverflow",
        "description": "设置一级菜单无法在当前菜单容器里显示完全时的展示方式",
        "description_zh": "设置一级菜单无法在当前菜单容器里显示完全时的展示方式"
      },
      "prevent": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "若使用组件的默认服务获取菜单数据，并且要阻止默认的跳转行为，需要 before-skip 和此属性一起使用",
        "description_zh": "若使用组件的默认服务获取菜单数据，并且要阻止默认的跳转行为，需要 before-skip 和此属性一起使用"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/nav-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/nav-menu",
    "typeDetail": {
      "IMenuItem": "interface IMenuItem {\n  id: string\n  isFullUrl: boolean\n  pid: string\n  route: string\n  target: string\n  title: string\n  url: string\n}",
      "IDataItem": "interface IDataItem {\n  title: string\n  url: string\n  children?: IDataItem[]\n}",
      "IFields": "interface IFields {\n  textField: string\n  urlField: string\n  key?: string\n}",
      "IOverflow": "type IOverflow = 'auto' | 'retract' | 'fixed' | 'hidden'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "logo",
        "description": "菜单栏 Logo 插槽",
        "description_zh": "菜单栏 Logo 插槽"
      },
      {
        "name": "toolbar",
        "description": "自定义右上角部分 toolbar 插槽",
        "description_zh": "自定义右上角部分 toolbar 插槽"
      }
    ],
    "filename": "NavMenu"
  },
  {
    "name": "TinyPager",
    "props": {
      "align": {
        "default": "'left'",
        "value": "",
        "type": "'left' | 'center' | 'right'",
        "description": "分页对齐方式，Aurora、SMB主题默认值为 right",
        "description_zh": "分页对齐方式，Aurora、SMB主题默认值为 right"
      },
      ":current-page": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "当前所在页",
        "description_zh": "当前所在页"
      },
      "custom-total": {
        "default": "false",
        "value": "",
        "type": "boolean | string",
        "description": "自定义总条数，传值为 true 时，显示10万+、100万+，传值为字符串则显示传入的字符串",
        "description_zh": "自定义总条数，传值为 true 时，显示10万+、100万+，传值为字符串则显示传入的字符串"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用分页",
        "description_zh": "是否禁用分页"
      },
      "hide-on-single-page": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "只有一页时是否隐藏",
        "description_zh": "只有一页时是否隐藏"
      },
      "is-before-page-change": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启前置处理特性，开启后，翻页或者改变页大小不会立即生效，由用户处理业务逻辑",
        "description_zh": "是否开启前置处理特性，开启后，翻页或者改变页大小不会立即生效，由用户处理业务逻辑"
      },
      "layout": {
        "default": "'total, prev, pager, next, jumper'",
        "value": "",
        "type": "string",
        "description": "组件布局，子组件名用英文逗号分隔，子组件类型有 sizes、 prev、 pager、 next、 jumper、 current、 total、 slot",
        "description_zh": "组件布局，子组件名用英文逗号分隔，子组件类型有 sizes、 prev、 pager、 next、 jumper、 current、 total、 slot"
      },
      "mode": {
        "default": "--",
        "value": "",
        "type": "'number' | 'simple' | 'complete' | 'fixed'",
        "description": "设置分页组件显示模式，此属性优先级大于 layout",
        "description_zh": "设置分页组件显示模式，此属性优先级大于 layout"
      },
      "next-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "替代图标显示的下一页文字",
        "description_zh": "替代图标显示的下一页文字"
      },
      ":page-count": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "总页数，total 和 page-count 设置任意一个就可以达到显示页码的功能，如果要支持 page-sizes 的更改，则需要使用 total 属性",
        "description_zh": "总页数，total 和 page-count 设置任意一个就可以达到显示页码的功能，如果要支持 page-sizes 的更改，则需要使用 total 属性"
      },
      ":page-size/v-model:page-size": {
        "default": "10",
        "value": "",
        "type": "number",
        "description": "每页显示条目数",
        "description_zh": "每页显示条目数"
      },
      "page-sizes": {
        "default": "[10, 20, 30, 40, 50, 100]",
        "value": "",
        "type": "number[]",
        "description": "设置指定可选择的每页显示条数，每页显示个数选择器的选项设置",
        "description_zh": "设置指定可选择的每页显示条数，每页显示个数选择器的选项设置"
      },
      ":pager-count": {
        "default": "7",
        "value": "",
        "type": "number",
        "description": "设置页码按钮需要显示的最多个数，当总页数超过该值时会折叠，该属性的合法值为大于等于 5 且小于等于 21 的奇数",
        "description_zh": "设置页码按钮需要显示的最多个数，当总页数超过该值时会折叠，该属性的合法值为大于等于 5 且小于等于 21 的奇数"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否将弹出框插入至 body 元素，可将该属性设置为 false（可参考 select 组件）",
        "description_zh": "是否将弹出框插入至 body 元素，可将该属性设置为 false（可参考 select 组件）"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为 popper 添加类名（可参考 popover 组件）",
        "description_zh": "为 popper 添加类名（可参考 popover 组件）"
      },
      "prev-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "替代图标显示的上一页文字",
        "description_zh": "替代图标显示的上一页文字"
      },
      "show-total-loading": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示总条数加载中",
        "description_zh": "是否显示总条数加载中"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'mini'",
        "description": "定义分页尺寸",
        "description_zh": "定义分页尺寸"
      },
      ":total": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "总条目数",
        "description_zh": "总条目数"
      },
      "total-fixed-left": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "总条目数是否固定在左侧，Aurora、SMB主题默认值为 true",
        "description_zh": "总条目数是否固定在左侧，Aurora、SMB主题默认值为 true"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/pager",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/pager",
    "typeDetail": {
      "IBeforeChangeEvent": "// 函数接受一个参数\ninterface IBeforeChangeEvent {\n  (param: IBeforeChangeParam): void\n}\ninterface IBeforeChangeParam {\n  callback: () => void   // 回调函数，调用则继续本次变更\n  rollback: () => void   // 回滚函数，调用则阻止本次变更\n  newPage: number // 变更后所在页\n  newPageSize: number // 变更后分页大小\n  currentPage: number // 当前所在页\n  currentPageSize: number // 当前分页大小\n}"
    },
    "events": [
      {
        "name": "before-page-change",
        "description": "当 is-before-page-change 设置为 true 后，翻页或改变页大小前会触发此事件，用户可以在参数中获取相应事件和分页相关信息控制后续逻辑",
        "description_zh": "当 is-before-page-change 设置为 true 后，翻页或改变页大小前会触发此事件，用户可以在参数中获取相应事件和分页相关信息控制后续逻辑",
        "params": "IBeforeChangeEvent"
      },
      {
        "name": "current-change",
        "description": "当前所在页改变时会触发",
        "description_zh": "当前所在页改变时会触发",
        "params": "(currentPage: number) => void"
      },
      {
        "name": "next-click",
        "description": "点击下一页按钮改变当前页后触发",
        "description_zh": "点击下一页按钮改变当前页后触发",
        "params": "(currentPage: number) => void"
      },
      {
        "name": "prev-click",
        "description": "点击上一页按钮改变当前页后触发",
        "description_zh": "点击上一页按钮改变当前页后触发",
        "params": "(currentPage: number) => void"
      },
      {
        "name": "size-change",
        "description": "每页显示条目数改变后会触发",
        "description_zh": "每页显示条目数改变后会触发",
        "params": "(pageSize: number) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "自定义内容，需要在 layout 中列出 slot",
        "description_zh": "自定义内容，需要在 layout 中列出 slot"
      }
    ],
    "filename": "Pager"
  },
  {
    "name": "TinySteps",
    "props": {
      ":active": {
        "default": "-1",
        "value": "",
        "type": "number",
        "description": "当前步骤索引，从0开始计数",
        "description_zh": "当前步骤索引，从0开始计数"
      },
      "count-field": {
        "default": "'count'",
        "value": "",
        "type": "string",
        "description": "条形步骤条里徽标计数对应的字段名",
        "description_zh": "条形步骤条里徽标计数对应的字段名"
      },
      "data": {
        "default": "[]",
        "value": "",
        "type": "IStepsItem[]",
        "description": "步骤条的数据",
        "description_zh": "步骤条的数据"
      },
      ":duration": {
        "default": "300",
        "value": "",
        "type": "number",
        "description": "节点滚动的持续时间（单位 ms），仅高级向导模式有效",
        "description_zh": "节点滚动的持续时间（单位 ms），仅高级向导模式有效"
      },
      "flex": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "节点是否自适应宽度",
        "description_zh": "节点是否自适应宽度"
      },
      "name-field": {
        "default": "'name'",
        "value": "",
        "type": "string",
        "description": "节点名称对应的字段名",
        "description_zh": "节点名称对应的字段名"
      },
      "space": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "节点宽度, 可取值数字、带长度单位数值与百分比，传数字则默认以 px 为长度单位",
        "description_zh": "节点宽度, 可取值数字、带长度单位数值与百分比，传数字则默认以 px 为长度单位"
      },
      "status-field": {
        "default": "'status'",
        "value": "",
        "type": "string",
        "description": "数据状态对应的字段名，用于条形步骤条",
        "description_zh": "数据状态对应的字段名，用于条形步骤条"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/steps",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/steps",
    "typeDetail": {
      "IStepsItem": "interface IStepsItem {\n  // 节点数据\n  name: string, // 节点名称\n  status?: IStepsStatus, // 节点状态，取值见下面IStepsStatus类型说明\n  description?: string, // 描述，仅用于单链型步骤条\n  count?: number // 节点右上角徽标计数，仅用于默认条形步骤条\n}",
      "IStepsStatus": "type IStepsStatus = 'doing' | 'done' | 'disabled' | 'error' | ''"
    },
    "events": [
      {
        "name": "click",
        "description": "节点点击事件，参数：index: 点击节点的索引node：点击节点的数据",
        "description_zh": "节点点击事件，参数：index: 点击节点的索引node：点击节点的数据",
        "params": "(index: number, node: IStepsItem) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "item",
        "description": "步骤条数据项插槽，用于条形步骤条",
        "description_zh": "步骤条数据项插槽，用于条形步骤条"
      }
    ],
    "filename": "Steps"
  },
  {
    "name": "TinyTabs",
    "props": {
      "active-name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置初始选中的页签项",
        "description_zh": "设置初始选中的页签项"
      },
      "before-close": {
        "default": "--",
        "value": "",
        "type": "(name: string)=> boolean | Promise",
        "description": "关闭页签前的回调函数，入参为页签名。如果函数返回false 或 拒绝的Promise，则不关闭页签",
        "description_zh": "关闭页签前的回调函数，入参为页签名。如果函数返回false 或 拒绝的Promise，则不关闭页签"
      },
      "before-leave": {
        "default": "--",
        "value": "",
        "type": "(activeName: string, oldActiveName: string) => boolean | Promise",
        "description": "切换页签项之前的钩子，若返回 false 或返回 Promise 且被 reject，则阻止切换； activeName: 即将切换的页签项名称, oldActiveName: 当前页签项名称",
        "description_zh": "切换页签项之前的钩子，若返回 false 或返回 Promise 且被 reject，则阻止切换； activeName: 即将切换的页签项名称, oldActiveName: 当前页签项名称"
      },
      "drop-config": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "启用页签拖拽功能，配置第三方排序插件，对页签项进行重新排序；需注意：不是通过 v-for 渲染的 tab-item，在拖拽排序后，无法在 tab-drag-end 事件中对其顺序进行保存",
        "description_zh": "启用页签拖拽功能，配置第三方排序插件，对页签项进行重新排序；需注意：不是通过 v-for 渲染的 tab-item，在拖拽排序后，无法在 tab-drag-end 事件中对其顺序进行保存"
      },
      "editable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否同时显示添加和删除按钮，与 edit 事件搭配使用",
        "description_zh": "是否同时显示添加和删除按钮，与 edit 事件搭配使用"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "绑定选中值，选中项的 name",
        "description_zh": "绑定选中值，选中项的 name"
      },
      "more-show-all": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "'更多'按钮触发的下拉面板是否展示全部页签项，适用于超大数据量的情况",
        "description_zh": "'更多'按钮触发的下拉面板是否展示全部页签项，适用于超大数据量的情况"
      },
      "overflow-title": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "页签是否在超过 title-width 省略显示，优先级低于 tooltip-config",
        "description_zh": "页签是否在超过 title-width 省略显示，优先级低于 tooltip-config"
      },
      "panel-max-height": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "'更多'按钮触发的下拉面板最大高度，超出则显示滚动条，适用于超大数据量的情况",
        "description_zh": "'更多'按钮触发的下拉面板最大高度，超出则显示滚动条，适用于超大数据量的情况"
      },
      "panel-width": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "'更多'按钮触发的下拉面板的宽度",
        "description_zh": "'更多'按钮触发的下拉面板的宽度"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为\"更多\"下拉页签框添加类名，可用于自定义下拉选项的样式",
        "description_zh": "为\"更多\"下拉页签框添加类名，可用于自定义下拉选项的样式"
      },
      "position": {
        "default": "'top'",
        "value": "",
        "type": "IPosition",
        "description": "设置页签栏所在位置; 默认为 top",
        "description_zh": "设置页签栏所在位置; 默认为 top"
      },
      "separator": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置分隔符样式",
        "description_zh": "设置分隔符样式"
      },
      "show-more-tabs": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置当页签栏超过一定宽度时是否显示\"更多\"按钮，若为 true，则当鼠标悬停到按钮上时，将出现下拉框展示超出宽度的页签项",
        "description_zh": "设置当页签栏超过一定宽度时是否显示\"更多\"按钮，若为 true，则当鼠标悬停到按钮上时，将出现下拉框展示超出宽度的页签项"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'small' | 'large'",
        "description": "设置 tabs 页签尺寸,该属性可选值为 large 或 small，其中 small 在 tabStyle 为 card 或者 border-card 时生效",
        "description_zh": "设置 tabs 页签尺寸,该属性可选值为 large 或 small，其中 small 在 tabStyle 为 card 或者 border-card 时生效"
      },
      "stretch": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "页签项的宽度是否自动撑开",
        "description_zh": "页签项的宽度是否自动撑开"
      },
      "tab-style": {
        "default": "--",
        "value": "",
        "type": "ITabStyle",
        "description": "页签的类型；默认为空字符串",
        "description_zh": "页签的类型；默认为空字符串"
      },
      "title-width": {
        "default": "256px",
        "value": "",
        "type": "string",
        "description": "当 overflow-title 为 true 时，指定页签标题的最大宽度",
        "description_zh": "当 overflow-title 为 true 时，指定页签标题的最大宽度"
      },
      "tooltip-config": {
        "default": "--",
        "value": "",
        "type": "ITooltipProps | \"title\"",
        "description": "设置文字超出提示, object 类型的值参考 tooltip 组件的 Props 配置，如果想使用默认的 title 属性，可设置为 string 类型，值为 title，【3.8.0版本新增】",
        "description_zh": "设置文字超出提示, object 类型的值参考 tooltip 组件的 Props 配置，如果想使用默认的 title 属性，可设置为 string 类型，值为 title，【3.8.0版本新增】"
      },
      "with-add": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示添加按钮，用来添加页签项",
        "description_zh": "是否显示添加按钮，用来添加页签项"
      },
      "with-close": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示页签项的关闭按钮，用来删除页签项",
        "description_zh": "是否显示页签项的关闭按钮，用来删除页签项"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tabs",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tabs",
    "typeDetail": {
      "IPosition": "type IPosition = 'top' | 'right' | 'bottom' | 'left'",
      "ITabStyle": "type ITabStyle = 'card' | 'border-card' | 'button-card' | ''",
      "ITooltipProps": "interface ITooltipProps { // 参照tooltip的props进行配置\n  effect?: string\n  placement?: string\n  visible?: string\n  [propName: string]: any\n}"
    },
    "events": [
      {
        "name": "add",
        "description": "点击\"添加\"按钮后触发，用于编写增加页签项的逻辑",
        "description_zh": "点击\"添加\"按钮后触发，用于编写增加页签项的逻辑",
        "params": "() => void"
      },
      {
        "name": "click",
        "description": "点击页签项时触发，tab 被选中时触发； TabItem: 点中页签项的vueComponent对象信息",
        "description_zh": "点击页签项时触发，tab 被选中时触发； TabItem: 点中页签项的vueComponent对象信息",
        "params": "(TabItem: Component, event: Event) => void"
      },
      {
        "name": "close",
        "description": "点击页签项关闭按钮后触发，用于编写删除页签项的逻辑； name: 要删除的页签项name值",
        "description_zh": "点击页签项关闭按钮后触发，用于编写删除页签项的逻辑； name: 要删除的页签项name值",
        "params": "(name: string) => void"
      },
      {
        "name": "edit",
        "description": "点击\"添加\"或\"关闭\"按钮触发； name：null或删除的tab名称, type：添加或删除字段",
        "description_zh": "点击\"添加\"或\"关闭\"按钮触发； name：null或删除的tab名称, type：添加或删除字段",
        "params": "(name: string, type: \"add\" | \"remove\") => void"
      },
      {
        "name": "tab-drag-end",
        "description": "拖动结束后的事件",
        "description_zh": "拖动结束后的事件",
        "params": "(event: DragEvent) => void"
      },
      {
        "name": "tab-drag-over",
        "description": "拖动中的事件",
        "description_zh": "拖动中的事件",
        "params": "(event: DragEvent) => void"
      },
      {
        "name": "tab-drag-start",
        "description": "拖动开始时的事件",
        "description_zh": "拖动开始时的事件",
        "params": "(event: DragEvent) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "moreIcon",
        "description": "更多按钮插槽",
        "description_zh": "更多按钮插槽"
      },
      {
        "name": "title",
        "description": "页签项标题插槽",
        "description_zh": "页签项标题插槽"
      }
    ],
    "filename": "Tabs"
  },
  {
    "name": "TinyTabItem",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置页签项禁用，设置为 true 则无法点击",
        "description_zh": "设置页签项禁用，设置为 true 则无法点击"
      },
      "lazy": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置本页签项内容是否为懒加载，默认为否",
        "description_zh": "设置本页签项内容是否为懒加载，默认为否"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "页签项的值",
        "description_zh": "页签项的值"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "页签项标题",
        "description_zh": "页签项标题"
      },
      "with-close": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "页签项是否展示删除按钮，与 Tabs 的 with-close 取或，只要有一个为true，则此项展示删除按钮",
        "description_zh": "页签项是否展示删除按钮，与 Tabs 的 with-close 取或，只要有一个为true，则此项展示删除按钮"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tabs",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tabs",
    "typeDetail": {
      "IPosition": "type IPosition = 'top' | 'right' | 'bottom' | 'left'",
      "ITabStyle": "type ITabStyle = 'card' | 'border-card' | 'button-card' | ''",
      "ITooltipProps": "interface ITooltipProps { // 参照tooltip的props进行配置\n  effect?: string\n  placement?: string\n  visible?: string\n  [propName: string]: any\n}"
    },
    "events": [
      {
        "name": "tab-nav-update",
        "description": "当页签项的 title 值发生变化时触发",
        "description_zh": "当页签项的 title 值发生变化时触发",
        "params": "() => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "页签项对应内容部分的默认插槽，用来自定义页签项对应的页面内容",
        "description_zh": "页签项对应内容部分的默认插槽，用来自定义页签项对应的页面内容"
      }
    ],
    "filename": "TabItem"
  },
  {
    "name": "TinyToggleMenu",
    "props": {
      "automatic-filtering": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "输入框输入内容时是否自动过滤内容，默认是 true",
        "description_zh": "输入框输入内容时是否自动过滤内容，默认是 true"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "设置收缩菜单的数据",
        "description_zh": "设置收缩菜单的数据"
      },
      "default-expand-all": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置菜单默认是否展开所有节点，默认为 false",
        "description_zh": "设置菜单默认是否展开所有节点，默认为 false"
      },
      "draggable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置是否开启拖拽节点的功能，默认值为false",
        "description_zh": "设置是否开启拖拽节点的功能，默认值为false"
      },
      "ellipsis": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "菜单内容超长时省略显示，默认为 false",
        "description_zh": "菜单内容超长时省略显示，默认为 false"
      },
      "expand-on-click-node": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置是否可以通过点击节点展开/收起菜单，默认为 false",
        "description_zh": "设置是否可以通过点击节点展开/收起菜单，默认为 false"
      },
      "get-menu-data-async": {
        "default": "--",
        "value": "",
        "type": "Function",
        "description": "自定义菜单数据服务,返回异步数据,需返回Promise对象",
        "description_zh": "自定义菜单数据服务,返回异步数据,需返回Promise对象"
      },
      "get-menu-data-sync": {
        "default": "--",
        "value": "",
        "type": "Function",
        "description": "自定义菜单数据服务,直接返回数据（deprecated v3.4.0废弃, v3.16.0移除；移除原因：如果是同步数据则和:data功能重复）",
        "description_zh": "自定义菜单数据服务,直接返回数据（deprecated v3.4.0废弃, v3.16.0移除；移除原因：如果是同步数据则和:data功能重复）"
      },
      ":icon": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "自定义菜单左侧图标",
        "description_zh": "自定义菜单左侧图标"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "输入框占位符",
        "description_zh": "输入框占位符"
      },
      ":props": {
        "default": "该属性的默认值为 {children: 'children',label: 'label',disabled: 'disabled'}",
        "value": "",
        "type": "object",
        "description": "配置数据选项的映射字段名称",
        "description_zh": "配置数据选项的映射字段名称"
      },
      "show-filter": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置是否展示过滤搜索框，默认为 `true`",
        "description_zh": "设置是否展示过滤搜索框，默认为 `true`"
      },
      "wrap": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "菜单内容超长时换行显示，默认为 false",
        "description_zh": "菜单内容超长时换行显示，默认为 false"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/toggle-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/toggle-menu",
    "typeDetail": {},
    "events": [
      {
        "name": "node-click",
        "description": "点击节点后的事件。;点击节点后触发的回调函数;//参数arg1:{children: 点击节点的子节点, id: 点击节点的id ,label: 点击节点的title} //参数arg2: object 当前点击节点的数据信息对象",
        "description_zh": "点击节点后的事件。;点击节点后触发的回调函数;//参数arg1:{children: 点击节点的子节点, id: 点击节点的id ,label: 点击节点的title} //参数arg2: object 当前点击节点的数据信息对象",
        "params": "Function(arg1,arg2)"
      },
      {
        "name": "node-collapse",
        "description": "收缩节点后的事件。;节点被关闭时触发的事件;//参数arg1:object {children: 点击节点的子节点,id: 点击节点的id,label: 点击节点的title}//参数arg2:object 当前点击节点的数据信息对象",
        "description_zh": "收缩节点后的事件。;节点被关闭时触发的事件;//参数arg1:object {children: 点击节点的子节点,id: 点击节点的id,label: 点击节点的title}//参数arg2:object 当前点击节点的数据信息对象",
        "params": "Function(arg1,arg2)"
      },
      {
        "name": "node-drag-end",
        "description": "拖拽结束时（r可能未成功）触发的事件;拖拽成功完成时触发的事件;//参数arg1: object当前拖拽节点的数据信息对象arg2: object当前点击节点拖拽后位置的节点数据信息对象arg3: 拖拽的类型，如：'inner'arg4:event",
        "description_zh": "拖拽结束时（r可能未成功）触发的事件;拖拽成功完成时触发的事件;//参数arg1: object当前拖拽节点的数据信息对象arg2: object当前点击节点拖拽后位置的节点数据信息对象arg3: 拖拽的类型，如：'inner'arg4:event",
        "params": "Function(arg1,arg2,arg3,arg4)"
      },
      {
        "name": "node-drag-enter",
        "description": "拖拽进入其他节点时触发的事件;拖拽进入其他节点时触发的事件;//参数arg1:object 当前拖拽节点的数据信息对象arg2: object 当前点击节点拖拽后位置的节点数据信息对象",
        "description_zh": "拖拽进入其他节点时触发的事件;拖拽进入其他节点时触发的事件;//参数arg1:object 当前拖拽节点的数据信息对象arg2: object 当前点击节点拖拽后位置的节点数据信息对象",
        "params": "Function(arg1,arg2)"
      },
      {
        "name": "node-drag-leave",
        "description": "拖拽离开某个节点时触发的事件;拖拽离开某个节点时触发的事件;//参数arg1:object 当前拖拽节点的数据信息对象arg2: object 当前拖出后节点的数据信息对象",
        "description_zh": "拖拽离开某个节点时触发的事件;拖拽离开某个节点时触发的事件;//参数arg1:object 当前拖拽节点的数据信息对象arg2: object 当前拖出后节点的数据信息对象",
        "params": "Function(arg1,arg2)"
      },
      {
        "name": "node-drag-over",
        "description": "在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）;在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）;//参数arg1:object 当前拖拽节点的数据信息对象arg2:object 当前拖拽节点拖拽时节点的数据信息对象 arg3:event",
        "description_zh": "在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）;在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）;//参数arg1:object 当前拖拽节点的数据信息对象arg2:object 当前拖拽节点拖拽时节点的数据信息对象 arg3:event",
        "params": "Function(arg1,arg2,arg3)"
      },
      {
        "name": "node-drag-start",
        "description": "节点开始拖拽时触发的事件。;节点开始拖拽时触发的事件。;//参数: arg1:object 当前拖拽节点的数据信息对象arg2:event",
        "description_zh": "节点开始拖拽时触发的事件。;节点开始拖拽时触发的事件。;//参数: arg1:object 当前拖拽节点的数据信息对象arg2:event",
        "params": "Function(arg1,arg2)"
      },
      {
        "name": "node-drop",
        "description": "拖放节点后的事件。开启 draggable 属性为 true 有效。;拖放节点后的事件。开启 draggable 属性为 true 有效。;//参数arg1:object 当前拖拽节点的数据信息对象 arg2:object 当前点击节点拖拽后的位置节点的数据信息对象arg3: 拖拽的类型arg4:event",
        "description_zh": "拖放节点后的事件。开启 draggable 属性为 true 有效。;拖放节点后的事件。开启 draggable 属性为 true 有效。;//参数arg1:object 当前拖拽节点的数据信息对象 arg2:object 当前点击节点拖拽后的位置节点的数据信息对象arg3: 拖拽的类型arg4:event",
        "params": "Function(arg1,arg2)"
      },
      {
        "name": "node-expand",
        "description": "展开节点后的事件。;节点被展开时触发的事件;//参数arg1:{children: 点击节点的子节点, id: 点击节点的id, label: 点击节点的title}//参数arg2:Component 点击节点的componet对象信息//参数arg3:{ children: 点击节点的子节点id: 点击节点的id, label: 点击节点的title}",
        "description_zh": "展开节点后的事件。;节点被展开时触发的事件;//参数arg1:{children: 点击节点的子节点, id: 点击节点的id, label: 点击节点的title}//参数arg2:Component 点击节点的componet对象信息//参数arg3:{ children: 点击节点的子节点id: 点击节点的id, label: 点击节点的title}",
        "params": "Function(arg1,arg2,arg3)"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "node",
        "description": "自定义插槽",
        "description_zh": "自定义插槽"
      }
    ],
    "filename": "ToggleMenu"
  },
  {
    "name": "TinyTreeMenu",
    "props": {
      "accordion": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否设置为手风琴效果（只能展开一个同级别的节点）",
        "description_zh": "是否设置为手风琴效果（只能展开一个同级别的节点）"
      },
      "allow-drag": {
        "default": "--",
        "value": "",
        "type": "(vm:ITreeNodeVm) => boolean",
        "description": "拖拽开始前的回调事件，定义节点是否允许拖拽的规则，返回 true 则允许拖拽，配合 draggable 属性使用",
        "description_zh": "拖拽开始前的回调事件，定义节点是否允许拖拽的规则，返回 true 则允许拖拽，配合 draggable 属性使用"
      },
      "allow-drop": {
        "default": "--",
        "value": "",
        "type": "(draggingNode: ITreeNodeVm, targetNode: ITreeNodeVm,type: \"prev\"|\"next\"|\"inner\") => boolean",
        "description": "拖拽结束前的回调事件，定义节点是否允许放置到模板节点的规则，返回 true 则允许放置，配合 draggable 属性使用",
        "description_zh": "拖拽结束前的回调事件，定义节点是否允许放置到模板节点的规则，返回 true 则允许放置，配合 draggable 属性使用"
      },
      "check-strictly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否遵循父级和子级严格不相关联的做法，配合 show-checkbox 属性使用",
        "description_zh": "是否遵循父级和子级严格不相关联的做法，配合 show-checkbox 属性使用"
      },
      "collapsible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否允许展开后的菜单收起，未和 show-number 配套使用时，仍可以点击图标收起",
        "description_zh": "是否允许展开后的菜单收起，未和 show-number 配套使用时，仍可以点击图标收起"
      },
      "customIcon": {
        "default": "--",
        "value": "",
        "type": "VueComponent",
        "description": "设置带图标树形菜单",
        "description_zh": "设置带图标树形菜单"
      },
      "data": {
        "default": "[]",
        "value": "",
        "type": "ITreeNodeData[]",
        "description": "静态数据源",
        "description_zh": "静态数据源"
      },
      "default-checked-keys": {
        "default": "[]",
        "value": "",
        "type": "Array",
        "description": "默认勾选节点的 key 的数组",
        "description_zh": "默认勾选节点的 key 的数组"
      },
      "default-expand-all": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认展开所有子节点",
        "description_zh": "是否默认展开所有子节点"
      },
      "default-expanded-keys": {
        "default": "[]",
        "value": "",
        "type": "Array",
        "description": "默认展开节点的 key 的数组",
        "description_zh": "默认展开节点的 key 的数组"
      },
      "default-expanded-keys-highlight": {
        "default": "--",
        "value": "",
        "type": "number|string",
        "description": "设置默认展开节点中的某个节点高亮，配合 default-expanded-keys 属性使用",
        "description_zh": "设置默认展开节点中的某个节点高亮，配合 default-expanded-keys 属性使用"
      },
      "draggable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否可拖动菜单节点",
        "description_zh": "是否可拖动菜单节点"
      },
      "ellipsis": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否文字超长省略显示。优先级高于 wrap",
        "description_zh": "是否文字超长省略显示。优先级高于 wrap"
      },
      "empty-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "内容为空时展示的文本",
        "description_zh": "内容为空时展示的文本"
      },
      "expand-on-click-node": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否能点击节点即展开/收起。配置为 fasle 则只能点击下拉图标展开/收起",
        "description_zh": "是否能点击节点即展开/收起。配置为 fasle 则只能点击下拉图标展开/收起"
      },
      "filter-node-method": {
        "default": "--",
        "value": "",
        "type": "(query:string, data:ITreeNodeData, node:ITreeNodeVm) => boolean",
        "description": "自定义树节点过滤的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏",
        "description_zh": "自定义树节点过滤的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏"
      },
      "get-menu-data-sync": {
        "default": "--",
        "value": "",
        "type": "() => ITreeNodeData[]",
        "description": "自定义获取服务端数据源的方法，返回一个 Promise 对象",
        "description_zh": "自定义获取服务端数据源的方法，返回一个 Promise 对象"
      },
      ":indent": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "子级相对于父级节点的水平缩进距离，单位 px",
        "description_zh": "子级相对于父级节点的水平缩进距离，单位 px"
      },
      "lazy": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否懒加载子节点，配合 load 属性使用",
        "description_zh": "是否懒加载子节点，配合 load 属性使用"
      },
      "load": {
        "default": "--",
        "value": "",
        "type": "(node:ITreeNodeVm, resolve:IResolveType) => IResolveType",
        "description": "加载子树数据的方法，仅当 lazy 属性为 true 时生效",
        "description_zh": "加载子树数据的方法，仅当 lazy 属性为 true 时生效"
      },
      "menu-collapsible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示侧边折叠与展开按钮",
        "description_zh": "是否显示侧边折叠与展开按钮"
      },
      ":node-height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "节点高度",
        "description_zh": "节点高度"
      },
      "node-key": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置每个树节点唯一标识（key）的属性，在整棵树中都是唯一的",
        "description_zh": "设置每个树节点唯一标识（key）的属性，在整棵树中都是唯一的"
      },
      "only-check-children": {
        "default": "false",
        "value": "",
        "type": "",
        "description": "父级是否不可选，只能展开不能跳转",
        "description_zh": "父级是否不可选，只能展开不能跳转"
      },
      "prefix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "自定义前置图标",
        "description_zh": "自定义前置图标"
      },
      "props": {
        "default": "{\n  children: 'children'\n  label: 'label'\n  disabled: 'disabled'\n  isLeaf: 'isLeaf'\n} \n",
        "value": "",
        "type": "IProps",
        "description": "映射字段",
        "description_zh": "映射字段"
      },
      "search-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "自定义搜索图标",
        "description_zh": "自定义搜索图标"
      },
      "show-checkbox": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "节点是否可被选择",
        "description_zh": "节点是否可被选择"
      },
      "show-expand": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否启用一键展开/收起功能。点击左下角图标可展开/收起菜单注意：配合 customIcon 属性使用，纯文本菜单不支持此功能",
        "description_zh": "是否启用一键展开/收起功能。点击左下角图标可展开/收起菜单注意：配合 customIcon 属性使用，纯文本菜单不支持此功能"
      },
      "show-filter": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示搜索框，可搜索过滤节点",
        "description_zh": "是否显示搜索框，可搜索过滤节点"
      },
      "show-number": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "右侧下拉图标区域是否显示为 number 属性定义的数字内容，建议不超过 4 个字符",
        "description_zh": "右侧下拉图标区域是否显示为 number 属性定义的数字内容，建议不超过 4 个字符"
      },
      "show-title": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示节点的 title 提示，鼠标悬浮节点之上触发",
        "description_zh": "是否显示节点的 title 提示，鼠标悬浮节点之上触发"
      },
      "suffix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "自定义后置图标",
        "description_zh": "自定义后置图标"
      },
      "wrap": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否换行显示",
        "description_zh": "是否换行显示"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tree-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tree-menu",
    "typeDetail": {
      "ITreeNodeVm": "interface ITreeNodeVm {\n  // 是否已勾选\n  \"checked\": boolean\n  // 子节点\n  \"childNodes\": ITreeNodeVm[]\n  // 节点数据\n  \"data\":  ITreeNodeData\n  // 是否展开\n  \"expanded\": boolean\n  // 唯一标识\n  \"id\": string | number\n  // 是否半选\n  \"indeterminate\": boolean\n  // 是否当前节点\n  \"isCurrent\": boolean\n  // 是否叶子节点\n  \"isLeaf\": boolean\n  // 层级\n  \"level\": number\n  // 是否已加载\n  \"loaded\": boolean\n  // 是否加载中\n  \"loading\": boolean\n  // 是否可见\n  \"visible\": boolean\n  // 是否禁用\n  \"disabled\": boolean\n  // 节点显示文本\n  \"label\": string\n}",
      "ITreeNodeData": "interface ITreeNodeData {\n  // node-key='id' 设置节点的唯一标识\n  \"id\": number | string\n  // 节点显示文本\n  \"label\": string\n  // 子节点\n  \"children\"?: ITreeNodeData[]\n  // 链接\n  \"url\"?: string,\n  // show-number 时展示的字段\n  \"number\"?: number | string\n  // 自定义每个节点的图标\n  \"customIcon\": Component \n}",
      "IProps": "interface IProps {\n  \"label\"?: string\n  \"children\"?: string\n  \"disabled\": string\n  \"isLeaf\": string\n}",
      "IResolveType": "// Promise 的 resolve 回调函数\ntype IResolveType = (data:ITreeNodeData) => void",
      "IDropType": "// 拖拽节点相对目标节点的位置\ntype IDropType = before | after | inner | none"
    },
    "events": [
      {
        "name": "check-change",
        "description": "监听可勾选节点的勾选状态发生变化时的事件",
        "description_zh": "监听可勾选节点的勾选状态发生变化时的事件",
        "params": "(node:ITreeNodeVm, checked:boolean, indeterminate:boolean) => void"
      },
      {
        "name": "current-change",
        "description": "监听当前选中节点发生变化时的事件",
        "description_zh": "监听当前选中节点发生变化时的事件",
        "params": "(nodeData:ITreeNodeData, node:ITreeNodeVm) => void"
      },
      {
        "name": "node-click",
        "description": "监听节点被点击时的事件",
        "description_zh": "监听节点被点击时的事件",
        "params": "(nodeData:ITreeNodeData, node:ITreeNodeVm) => void"
      },
      {
        "name": "node-collapse",
        "description": "监听节点被点击收起时的事件;",
        "description_zh": "监听节点被点击收起时的事件;",
        "params": "(nodeData:ITreeNodeData, node:ITreeNodeVm) => void"
      },
      {
        "name": "node-drag-end",
        "description": "监听节点拖拽结束（可能未成功）的事件",
        "description_zh": "监听节点拖拽结束（可能未成功）的事件",
        "params": "(draggingNode:ITreeNodeVm, targetNode:ITreeNodeVm, dropType:IDropType, event:DragEvent) => void"
      },
      {
        "name": "node-drag-start",
        "description": "监听节点开始拖拽的事件",
        "description_zh": "监听节点开始拖拽的事件",
        "params": "(node:ITreeNodeVm, event:DragEvent) => void"
      },
      {
        "name": "node-expand",
        "description": "监听节点被点击展开时的事件;",
        "description_zh": "监听节点被点击展开时的事件;",
        "params": "(nodeData:ITreeNodeData, node:ITreeNodeVm) => void"
      }
    ],
    "methods": [
      {
        "name": "getCurrentKey",
        "description": "获取当前选中节点的 key ，注意：配合 node-key 属性设置每个节点 key 值的字段,仅适用单选",
        "params": "() => string | number | null",
        "description_zh": "获取当前选中节点的 key ，注意：配合 node-key 属性设置每个节点 key 值的字段,仅适用单选"
      },
      {
        "name": "getCurrentNode",
        "description": "获得当前选中节点的数据,注意：配合 node-key 属性设置每个节点 key 值的字段,仅适用单选",
        "params": "() => ITreeNodeData|null",
        "description_zh": "获得当前选中节点的数据,注意：配合 node-key 属性设置每个节点 key 值的字段,仅适用单选"
      },
      {
        "name": "setCurrentKey",
        "description": "通过 key 设置某个节点为当前选中的节点，注意：配合 node-key 属性设置每个节点 key 值的字段",
        "params": "(key:string|number) => void",
        "description_zh": "通过 key 设置某个节点为当前选中的节点，注意：配合 node-key 属性设置每个节点 key 值的字段"
      },
      {
        "name": "setCurrentNode",
        "description": "通过 nodeData 设置某个节点为当前选中的节点，注意：配合 node-key 属性设置每个节点 key 值的字段",
        "params": "(nodeData:ITreeNodeData) => void",
        "description_zh": "通过 nodeData 设置某个节点为当前选中的节点，注意：配合 node-key 属性设置每个节点 key 值的字段"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "自定义树节点的内容，参数为 { node, data }",
        "description_zh": "自定义树节点的内容，参数为 { node, data }"
      }
    ],
    "filename": "TreeMenu"
  },
  {
    "name": "TinyAutoComplete",
    "props": {
      "clearable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否可清空",
        "description_zh": "是否可清空"
      },
      ":debounce": {
        "default": "300",
        "value": "",
        "type": "number",
        "description": "获取输入建议的去抖延时",
        "description_zh": "获取输入建议的去抖延时"
      },
      "disabled": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "display-only": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置只读",
        "description_zh": "设置只读"
      },
      "fetch-suggestions": {
        "default": "--",
        "value": "",
        "type": "IAutocompleteFetchSuggestions",
        "description": "返回输入建议的方法，仅当你的输入建议数据 resolve 时，通过调用 callback 来返回它",
        "description_zh": "返回输入建议的方法，仅当你的输入建议数据 resolve 时，通过调用 callback 来返回它"
      },
      "hide-loading": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否隐藏远程加载时的加载图标",
        "description_zh": "是否隐藏远程加载时的加载图标"
      },
      "highlight-first-item": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认突出显示远程搜索建议中的第一项",
        "description_zh": "是否默认突出显示远程搜索建议中的第一项"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "等价于原生 input aria-label 属性",
        "description_zh": "等价于原生 input aria-label 属性"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "input 元素的原生属性",
        "description_zh": "input 元素的原生属性"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "输入框占位文本",
        "description_zh": "输入框占位文本"
      },
      "placement": {
        "default": "'bottom-start'",
        "value": "",
        "type": "IAutocompletePlacement",
        "description": "菜单弹出位置",
        "description_zh": "菜单弹出位置"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否将下拉列表插入至 body 元素。在下拉列表的定位出现问题时，可将该属性设置为 false",
        "description_zh": "是否将下拉列表插入至 body 元素。在下拉列表的定位出现问题时，可将该属性设置为 false"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "下拉列表的类名",
        "description_zh": "下拉列表的类名"
      },
      "prefix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "输入框头部图标",
        "description_zh": "输入框头部图标"
      },
      "select-when-unmatched": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "在输入没有任何匹配建议的情况下，按下回车是否触发 select 事件",
        "description_zh": "在输入没有任何匹配建议的情况下，按下回车是否触发 select 事件"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "设置组件大小",
        "description_zh": "设置组件大小"
      },
      "suffix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "输入框尾部图标",
        "description_zh": "输入框尾部图标"
      },
      "trigger-on-focus": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否在输入框 focus 时显示建议列表",
        "description_zh": "是否在输入框 focus 时显示建议列表"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "必填值，输入绑定值",
        "description_zh": "必填值，输入绑定值"
      },
      "value-key": {
        "default": "'value'",
        "value": "",
        "type": "string",
        "description": "在输入建议对象中，用于显示和匹配输入的键名",
        "description_zh": "在输入建议对象中，用于显示和匹配输入的键名"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/autocomplete",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/autocomplete",
    "typeDetail": {
      "IAutocompleteSuggestionItem": "interface IAutocompleteSuggestionItem {\n  [key: string]: string | undefined\n  value?: string\n}",
      "IAutocompletePlacement": "type IAutocompletePlacement = \"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\"",
      "IAutocompleteFetchSuggestions": "type IAutocompleteFetchSuggestions = (queryString: string, callback: (suggestions: IAutocompleteSuggestionItem[]) => void) => void"
    },
    "events": [
      {
        "name": "select",
        "description": "点击选中建议项时触发，回调参数为 fetch-suggestions 中传入的项",
        "description_zh": "点击选中建议项时触发，回调参数为 fetch-suggestions 中传入的项",
        "params": "(selection: IAutocompleteSuggestionItem) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "append",
        "description": "输入框后置内容",
        "description_zh": "输入框后置内容"
      },
      {
        "name": "default",
        "description": "下拉列表项插槽，插槽参数: arg: { slotScope: IAutocompleteSuggestionItem }, 其中 slotScope 是 fetch-suggestions 中传入的项",
        "description_zh": "下拉列表项插槽，插槽参数: arg: { slotScope: IAutocompleteSuggestionItem }, 其中 slotScope 是 fetch-suggestions 中传入的项"
      },
      {
        "name": "prefix",
        "description": "输入框头部内容",
        "description_zh": "输入框头部内容"
      },
      {
        "name": "prepend",
        "description": "输入框前置内容",
        "description_zh": "输入框前置内容"
      },
      {
        "name": "suffix",
        "description": "输入框尾部内容",
        "description_zh": "输入框尾部内容"
      }
    ],
    "filename": "AutoComplete"
  },
  {
    "name": "TinyCascader",
    "props": {
      "before-filter": {
        "default": "--",
        "value": "",
        "type": "(value: string) => boolean | Promise",
        "description": "筛选之前的钩子，参数为输入的值，若返回 false 或者返回 Promise 且被 reject，则停止筛选",
        "description_zh": "筛选之前的钩子，参数为输入的值，若返回 false 或者返回 Promise 且被 reject，则停止筛选"
      },
      "blank": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "shape='filter' 时生效，设置过滤器模式背景为透明",
        "description_zh": "shape='filter' 时生效，设置过滤器模式背景为透明"
      },
      "clearable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否支持清空选项",
        "description_zh": "是否支持清空选项"
      },
      "collapse-tags": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "多选模式下是否折叠 Tag",
        "description_zh": "多选模式下是否折叠 Tag"
      },
      ":debounce": {
        "default": "300",
        "value": "",
        "type": "number",
        "description": "搜索关键词输入的去抖延迟，单位毫秒",
        "description_zh": "搜索关键词输入的去抖延迟，单位毫秒"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "filter-method": {
        "default": "--",
        "value": "",
        "type": "(node: ICascaderPanelNode, keyword: string) => boolean",
        "description": "自定义搜索逻辑，第一个参数是节点 node，第二个参数是搜索关键词 keyword，通过返回布尔值表示是否命中",
        "description_zh": "自定义搜索逻辑，第一个参数是节点 node，第二个参数是搜索关键词 keyword，通过返回布尔值表示是否命中"
      },
      "filterable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否可搜索选项",
        "description_zh": "是否可搜索选项"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "shape='filter' 时生效，可传入 label 显示标题",
        "description_zh": "shape='filter' 时生效，可传入 label 显示标题"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelNodePropValue",
        "description": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定",
        "description_zh": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelData[]",
        "description": "可选项数据源，键名可通过 Props 属性配置",
        "description_zh": "可选项数据源，键名可通过 Props 属性配置"
      },
      "placeholder": {
        "default": "'请选择'",
        "value": "",
        "type": "string",
        "description": "输入框占位文本",
        "description_zh": "输入框占位文本"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)",
        "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为 popper 添加类名(可参考 popover 组件)",
        "description_zh": "为 popper 添加类名(可参考 popover 组件)"
      },
      "props": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelConfig",
        "description": "配置选项，具体见 ICascaderPanelConfig 表",
        "description_zh": "配置选项，具体见 ICascaderPanelConfig 表"
      },
      "separator": {
        "default": "'/'",
        "value": "",
        "type": "string",
        "description": "选项分隔符",
        "description_zh": "选项分隔符"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "'filter'",
        "description": "通过 shape='filter' 属性切换至过滤器模式",
        "description_zh": "通过 shape='filter' 属性切换至过滤器模式"
      },
      "show-all-levels": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "输入框中是否显示选中值的完整路径",
        "description_zh": "输入框中是否显示选中值的完整路径"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "尺寸",
        "description_zh": "尺寸"
      },
      "tip": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "shape='filter' 时生效，可传入 tip 显示提示信息",
        "description_zh": "shape='filter' 时生效，可传入 tip 显示提示信息"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader",
    "typeDetail": {
      "ICascaderPanelNodeValue": "type ICascaderPanelNodeValue = string | number",
      "ICascaderPanelNodePropValue": "type ICascaderPanelNodePropValue =\n  | ICascaderPanelNodeValue\n  | ICascaderPanelNodeValue[]\n  | ICascaderPanelNodeValue[][]",
      "ICascaderPanelData": "type ICascaderPanelData = {\n  value?: ICascaderPanelNodeValue\n  label?: string\n  children?: ICascaderPanelData[]\n  disabled?: boolean\n  leaf?: boolean\n  [key: string]: ICascaderPanelNodeValue | ICascaderPanelData[] | string | boolean | undefined\n}",
      "ICascaderPanelConfig": "interface ICascaderPanelConfig {\n  emitPath: boolean\n  expandTrigger: 'click' | 'hover'\n  hoverThreshold: number\n  checkStrictly?: boolean\n  multiple?: boolean\n  lazy: boolean\n  lazyLoad: (\n    node: ICascaderPanelNode,\n    resolve: (dataList: ICascaderPanelData[]) => void\n  ) => void\n  value: string\n  label: string\n  children: string\n  disabled: string\n  leaf: string\n}",
      "ICascaderPanelNode": "type ICascaderPanelNode = {\n  parent: ICascaderPanelNode | null\n  level: number\n  data: ICascaderPanelData\n  config: ICascaderPanelConfig\n  uid: number\n  value: ICascaderPanelNodeValue\n  label: string\n  pathNodes: Node[]\n  path: ICascaderPanelNodeValue[]\n  pathLabels: string[]\n  loaded: boolean\n  loading: boolean\n  hasChildren: boolean\n  children: Node[]\n  checked?: boolean\n  indeterminate?: boolean\n  root?: boolean\n}",
      "ICascaderPanelLazyLoad": "type ICascaderPanelLazyLoad = (node: ICascaderPanelNode, resolve: (dataList: ICascaderPanelData[]) => void) => void"
    },
    "events": [
      {
        "name": "blur",
        "description": "当失去焦点时触发",
        "description_zh": "当失去焦点时触发",
        "params": "(event: FocusEvent) => void"
      },
      {
        "name": "change",
        "description": "当选中节点变化时触发",
        "description_zh": "当选中节点变化时触发",
        "params": "(value: ICascaderPanelNodePropValue) => void"
      },
      {
        "name": "expand-change",
        "description": "当展开节点发生变化时触发",
        "description_zh": "当展开节点发生变化时触发",
        "params": "(value: ICascaderPanelNodeValue[]) => void"
      },
      {
        "name": "focus",
        "description": "当获得焦点时触发",
        "description_zh": "当获得焦点时触发",
        "params": "(event: FocusEvent) => void"
      },
      {
        "name": "remove-tag",
        "description": "在多选模式下，移除Tag时触发",
        "description_zh": "在多选模式下，移除Tag时触发",
        "params": "(removeValue: ICascaderPanelNodeValue[]) => void"
      },
      {
        "name": "visible-change",
        "description": "下拉框出现/隐藏时触发",
        "description_zh": "下拉框出现/隐藏时触发",
        "params": "(visible: boolean) => void"
      }
    ],
    "methods": [
      {
        "name": "getCheckedNodes",
        "description": "获取选中的节点",
        "params": "(leafOnly: boolean = false) => ICascaderPanelNode[]",
        "description_zh": "获取选中的节点"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "自定义备选项的节点内容，参数为 { node: ICascaderPanelNode, data: ICascaderPanelData }，分别为当前节点的 Node 对象和数据",
        "description_zh": "自定义备选项的节点内容，参数为 { node: ICascaderPanelNode, data: ICascaderPanelData }，分别为当前节点的 Node 对象和数据"
      },
      {
        "name": "empty",
        "description": "无匹配选项时的内容",
        "description_zh": "无匹配选项时的内容"
      },
      {
        "name": "no-data",
        "description": "通过 no-data 插槽设置没有数据时显示的内容",
        "description_zh": "通过 no-data 插槽设置没有数据时显示的内容"
      }
    ],
    "filename": "Cascader"
  },
  {
    "name": "TinyCascaderPanel",
    "props": {
      "v-model": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelNodePropValue",
        "description": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定",
        "description_zh": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelData[]",
        "description": "可选项数据源，键名可通过 Props 属性配置",
        "description_zh": "可选项数据源，键名可通过 Props 属性配置"
      },
      "props": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelConfig",
        "description": "配置选项，具体见 ICascaderPanelConfig 表 ",
        "description_zh": "配置选项，具体见 ICascaderPanelConfig 表 "
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader-panel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader-panel",
    "typeDetail": {
      "ICascaderPanelNodeValue": "type ICascaderPanelNodeValue = string | number",
      "ICascaderPanelNodePropValue": "type ICascaderPanelNodePropValue =\n  | ICascaderPanelNodeValue\n  | ICascaderPanelNodeValue[]\n  | ICascaderPanelNodeValue[][]",
      "ICascaderPanelData": "type ICascaderPanelData = {\n  value?: ICascaderPanelNodeValue\n  label?: string\n  children?: ICascaderPanelData[]\n  disabled?: boolean\n  leaf?: boolean\n  [key: string]: ICascaderPanelNodeValue | ICascaderPanelData[] | string | boolean | undefined\n}",
      "ICascaderPanelConfig": "interface ICascaderPanelConfig {\n  emitPath: boolean\n  expandTrigger: 'click' | 'hover'\n  hoverThreshold: number\n  checkStrictly?: boolean\n  multiple?: boolean\n  lazy: boolean\n  lazyLoad: (\n    node: ICascaderPanelNode,\n    resolve: (dataList: ICascaderPanelData[]) => void\n  ) => void\n  value: string\n  label: string\n  children: string\n  disabled: string\n  leaf: string\n}",
      "ICascaderPanelNode": "type ICascaderPanelNode = {\n  parent: ICascaderPanelNode | null\n  level: number\n  data: ICascaderPanelData\n  config: ICascaderPanelConfig\n  uid: number\n  value: ICascaderPanelNodeValue\n  label: string\n  pathNodes: Node[]\n  path: ICascaderPanelNodeValue[]\n  pathLabels: string[]\n  loaded: boolean\n  loading: boolean\n  hasChildren: boolean\n  children: Node[]\n  checked?: boolean\n  indeterminate?: boolean\n  root?: boolean\n}",
      "ICascaderPanelLazyLoad": "type ICascaderPanelLazyLoad = (node: ICascaderPanelNode, resolve: (dataList: ICascaderPanelData[]) => void) => void"
    },
    "events": [
      {
        "name": "change",
        "description": "当选中节点变化时触发; 回调参数为 选中节点的值",
        "description_zh": "当选中节点变化时触发; 回调参数为 选中节点的值",
        "params": "(value: ICascaderPanelNodePropValue) => void"
      },
      {
        "name": "expand-change",
        "description": "当展开节点发生变化时触发; 回调参数为 各父级选项值组成的数组 (Array 类型)",
        "description_zh": "当展开节点发生变化时触发; 回调参数为 各父级选项值组成的数组 (Array 类型)",
        "params": "(value: ICascaderPanelNodeValue[]) => void"
      }
    ],
    "methods": [
      {
        "name": "clearCheckedNodes",
        "description": "清空选中的节点",
        "params": "() => void",
        "description_zh": "清空选中的节点"
      },
      {
        "name": "getCheckedNodes",
        "description": "获取选中的节点;参数为 (leafOnly) 是否只是获取子节点，默认值为 false",
        "params": "(leafOnly: boolean = false) => ICascaderPanelNode[]",
        "description_zh": "获取选中的节点;参数为 (leafOnly) 是否只是获取子节点，默认值为 false"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "自定义备选项的节点内容，参数为 { node: ICascaderPanelNode, data: ICascaderPanelData }，分别为当前节点的 Node 对象和数据",
        "description_zh": "自定义备选项的节点内容，参数为 { node: ICascaderPanelNode, data: ICascaderPanelData }，分别为当前节点的 Node 对象和数据"
      }
    ],
    "filename": "CascaderPanel"
  },
  {
    "name": "TinyCheckbox",
    "props": {
      "border": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示边框",
        "description_zh": "是否显示边框"
      },
      "checked": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认勾选",
        "description_zh": "是否默认勾选"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "false-label": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "没有选中时的值",
        "description_zh": "没有选中时的值"
      },
      "indeterminate": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置 indeterminate 状态，只负责样式控制",
        "description_zh": "设置 indeterminate 状态，只负责样式控制"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string | number | boolean",
        "description": "选中状态的值（只有在 checkbox-group 中或者绑定对象类型为 array 时有效）",
        "description_zh": "选中状态的值（只有在 checkbox-group 中或者绑定对象类型为 array 时有效）"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number | boolean",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生 name 属性",
        "description_zh": "原生 name 属性"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "'filter'",
        "description": "过滤器模式",
        "description_zh": "过滤器模式"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "checkbox 的尺寸，仅在 border 为真时有效",
        "description_zh": "checkbox 的尺寸，仅在 border 为真时有效"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "复选框显示的文本",
        "description_zh": "复选框显示的文本"
      },
      "true-label": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "选中时的值",
        "description_zh": "选中时的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "typeDetail": {
      "ICheckboxGroupOptions": "interface ICheckboxGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  disabled?: boolean // 是否禁用\n  checked?: boolean // 是否默认选中\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "当绑定值变化时触发的事件",
        "description_zh": "当绑定值变化时触发的事件",
        "params": "(value: string | number | boolean) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "checkbox 的内容",
        "description_zh": "checkbox 的内容"
      }
    ],
    "filename": "Checkbox"
  },
  {
    "name": "TinyCheckboxGroup",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "fill": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "按钮形式的 checkbox 激活时的填充色和边框色",
        "description_zh": "按钮形式的 checkbox 激活时的填充色和边框色"
      },
      ":max": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "可被勾选的 checkbox 的最大数量",
        "description_zh": "可被勾选的 checkbox 的最大数量"
      },
      ":min": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "可被勾选的 checkbox 的最小数量",
        "description_zh": "可被勾选的 checkbox 的最小数量"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string[] | number[]",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "ICheckboxGroupOptions[]",
        "description": "checkbox-group 子项配置列表",
        "description_zh": "checkbox-group 子项配置列表"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "'filter'",
        "description": "过滤器模式",
        "description_zh": "过滤器模式"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "多选框组尺寸，仅对按钮形式的 checkbox 或带有边框的 checkbox 有效",
        "description_zh": "多选框组尺寸，仅对按钮形式的 checkbox 或带有边框的 checkbox 有效"
      },
      "text-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "按钮形式的 checkbox 激活时的文本颜色",
        "description_zh": "按钮形式的 checkbox 激活时的文本颜色"
      },
      "type": {
        "default": "'checkbox'",
        "value": "",
        "type": "'button' | 'checkbox'",
        "description": " 复选框组子项组件类型，需配合 options 属性使用",
        "description_zh": " 复选框组子项组件类型，需配合 options 属性使用"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置组件排列方式，设置复选框是否垂直排列",
        "description_zh": "设置组件排列方式，设置复选框是否垂直排列"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "typeDetail": {
      "ICheckboxGroupOptions": "interface ICheckboxGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  disabled?: boolean // 是否禁用\n  checked?: boolean // 是否默认选中\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "当绑定值变化时触发的事件",
        "description_zh": "当绑定值变化时触发的事件",
        "params": "(value: string[] |number[]) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "checkbox-group 的内容",
        "description_zh": "checkbox-group 的内容"
      }
    ],
    "filename": "CheckboxGroup"
  },
  {
    "name": "TinyCheckboxButton",
    "props": {
      "checked": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认勾选",
        "description_zh": "是否默认勾选"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "events": {
        "default": "--",
        "value": "",
        "type": "ICheckboxGroupOptions.events",
        "description": "原生事件",
        "description_zh": "原生事件"
      },
      "false-label": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "没有选中时的值",
        "description_zh": "没有选中时的值"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string | number | boolean",
        "description": "选中状态的值（只有在 checkbox-group 中或者绑定对象类型为array时有效）",
        "description_zh": "选中状态的值（只有在 checkbox-group 中或者绑定对象类型为array时有效）"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number | boolean",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生 name 属性",
        "description_zh": "原生 name 属性"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "复选框文本",
        "description_zh": "复选框文本"
      },
      "true-label": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "选中时的值",
        "description_zh": "选中时的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "typeDetail": {
      "ICheckboxGroupOptions": "interface ICheckboxGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  disabled?: boolean // 是否禁用\n  checked?: boolean // 是否默认选中\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "checkbox-button 的内容",
        "description_zh": "checkbox-button 的内容"
      }
    ],
    "filename": "CheckboxButton"
  },
  {
    "name": "TinyColorPicker",
    "props": {
      "alpha": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否启用alpha选择",
        "description_zh": "是否启用alpha选择"
      },
      "history": {
        "default": "undefined",
        "value": "",
        "type": "string[] | undefined",
        "description": "启用历史记录",
        "description_zh": "启用历史记录"
      },
      "predefine": {
        "default": "undefined",
        "value": "",
        "type": "string[] | undefined",
        "description": "启用预定义颜色",
        "description_zh": "启用预定义颜色"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "定义color-picker尺寸;该属性的可选值为 large / medium / small / mini",
        "description_zh": "定义color-picker尺寸;该属性的可选值为 large / medium / small / mini"
      },
      "visible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认显示color-select",
        "description_zh": "是否默认显示color-select"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color-picker",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color-picker",
    "typeDetail": {},
    "events": [
      {
        "name": "cancel",
        "description": "按下取消或点击外部的时触发该事件",
        "description_zh": "按下取消或点击外部的时触发该事件",
        "params": "()=>void"
      },
      {
        "name": "confirm",
        "description": "按下确认时触发该事件",
        "description_zh": "按下确认时触发该事件",
        "params": "(hex:string) => void"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "ColorPicker"
  },
  {
    "name": "TinyColorSelectPanel",
    "props": {
      "alpha": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否启用alpha选择",
        "description_zh": "是否启用alpha选择"
      },
      "history": {
        "default": "undefined",
        "value": "",
        "type": "string[] | undefined",
        "description": "时候启用历史记录",
        "description_zh": "时候启用历史记录"
      },
      "predefine": {
        "default": "undefined",
        "value": "",
        "type": "string[] | undefined",
        "description": "时候启用历史记录",
        "description_zh": "时候启用历史记录"
      },
      "visible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认显示color select panel",
        "description_zh": "是否默认显示color select panel"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color-select-panel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color-select-panel",
    "typeDetail": {},
    "events": [
      {
        "name": "cancel",
        "description": "按下取消或点击外部的时触发该事件",
        "description_zh": "按下取消或点击外部的时触发该事件",
        "params": "()=>void"
      },
      {
        "name": "color-update",
        "description": "",
        "description_zh": "",
        "params": "(color:Color) => void"
      },
      {
        "name": "confirm",
        "description": "按下确认时触发该事件",
        "description_zh": "按下确认时触发该事件",
        "params": "(hex:string) => void"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "ColorSelectPanel"
  },
  {
    "name": "TinyDatePicker",
    "props": {
      "align": {
        "default": "'left'",
        "value": "",
        "type": "'left' | 'center' | 'right'",
        "description": "日期选择面板和输入框的对齐方式",
        "description_zh": "日期选择面板和输入框的对齐方式"
      },
      "clear-icon": {
        "default": "IconOperationfaild",
        "value": "",
        "type": "Component",
        "description": "自定义清空图标",
        "description_zh": "自定义清空图标"
      },
      "clearable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示清除按钮",
        "description_zh": "是否显示清除按钮"
      },
      "default-time": {
        "default": "'00:00:00' | ['00:00:00', '00:00:00']",
        "value": "",
        "type": "string | string[]",
        "description": "type=\"datetime\" 时，default-time 是一个字符串，用于设置选择一个日期后，时间输入框中的默认值；type=\"datetimerange\" 时，default-time 是一个字符串数组，用于设置选择一个日期范围后，开始和结束时间输入框中的默认值",
        "description_zh": "type=\"datetime\" 时，default-time 是一个字符串，用于设置选择一个日期后，时间输入框中的默认值；type=\"datetimerange\" 时，default-time 是一个字符串数组，用于设置选择一个日期范围后，开始和结束时间输入框中的默认值"
      },
      "default-value": {
        "default": "new Date()",
        "value": "",
        "type": "string | Date",
        "description": "当选中的日期值为空时，选择器面板打开时默认显示的时间，可以是日期格式或者能被 new Date() 解析的字符串",
        "description_zh": "当选中的日期值为空时，选择器面板打开时默认显示的时间，可以是日期格式或者能被 new Date() 解析的字符串"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "禁用",
        "description_zh": "禁用"
      },
      "editable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "文本框可输入",
        "description_zh": "文本框可输入"
      },
      "end-placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "范围选择时结束日期的占位内容",
        "description_zh": "范围选择时结束日期的占位内容"
      },
      "format": {
        "default": "'yyyy-MM-dd'",
        "value": "",
        "type": "string",
        "description": "显示在输入框中的格式",
        "description_zh": "显示在输入框中的格式"
      },
      "format-weeks": {
        "default": "--",
        "value": "",
        "type": "(customWeeks: number, weekFirstDays: string[]) => string",
        "description": "格式化周次序号，该回调函数有两个参数，customWeeks 用来获取自定义周次的序号，weekFirstDays 用来获取每周次中的首个日期",
        "description_zh": "格式化周次序号，该回调函数有两个参数，customWeeks 用来获取自定义周次的序号，weekFirstDays 用来获取每周次中的首个日期"
      },
      "isutc8": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "默认值为 false，设置为 true 时切换系统默认时区，时间依然显示为东八区时间，适用场景为海外地区显示东八区时间",
        "description_zh": "默认值为 false，设置为 true 时切换系统默认时区，时间依然显示为东八区时间，适用场景为海外地区显示东八区时间"
      },
      "label": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "设置 shape=\"filter\" 属性之后，代表过滤器模式下显示的标题，单独设置 label 属性可以使 label 放置在组件的开始位置",
        "description_zh": "设置 shape=\"filter\" 属性之后，代表过滤器模式下显示的标题，单独设置 label 属性可以使 label 放置在组件的开始位置"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "Date | string | number | Array",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "name": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "原生属性",
        "description_zh": "原生属性"
      },
      "picker-options": {
        "default": "--",
        "value": "",
        "type": "IPickerOptions",
        "description": "配置部分禁用、快捷选项等，包含 firstDayOfWeek / disabledDate / onPick / shortcuts 属性，详细用法可参考 IPickerOptions 类型声明",
        "description_zh": "配置部分禁用、快捷选项等，包含 firstDayOfWeek / disabledDate / onPick / shortcuts 属性，详细用法可参考 IPickerOptions 类型声明"
      },
      "placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "非范围选择时的占位内容",
        "description_zh": "非范围选择时的占位内容"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否将弹出框插入至 body 元素，在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)",
        "description_zh": "是否将弹出框插入至 body 元素，在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为 DatePicker 下拉弹框添加的 class 类名",
        "description_zh": "为 DatePicker 下拉弹框添加的 class 类名"
      },
      "range-separator": {
        "default": "'-'",
        "value": "",
        "type": "string",
        "description": "选择范围时的分隔符",
        "description_zh": "选择范围时的分隔符"
      },
      "readonly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置日历组件是否只读",
        "description_zh": "设置日历组件是否只读"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "通过 shape=\"filter\" 属性切换至过滤器模式",
        "description_zh": "通过 shape=\"filter\" 属性切换至过滤器模式"
      },
      "show-timezone": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启设置日期选择面板时区选择",
        "description_zh": "是否开启设置日期选择面板时区选择"
      },
      "show-week-number": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否展示周次序号",
        "description_zh": "是否展示周次序号"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "输入框尺寸",
        "description_zh": "输入框尺寸"
      },
      "start-placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "范围选择时开始日期的占位内容",
        "description_zh": "范围选择时开始日期的占位内容"
      },
      "step": {
        "default": "--",
        "value": "",
        "type": "IStep",
        "description": "设置 type=\"datetime\" 或者 type=\"datetimerange\" 属性之后，可以通过 step 配置时间的步长，step 是一个对象，包含三个属性：hour、minute、second，分别用来配置时、分、秒的步长",
        "description_zh": "设置 type=\"datetime\" 或者 type=\"datetimerange\" 属性之后，可以通过 step 配置时间的步长，step 是一个对象，包含三个属性：hour、minute、second，分别用来配置时、分、秒的步长"
      },
      "suffix-icon": {
        "default": "IconCalendar",
        "value": "",
        "type": "Component",
        "description": "自定义选择器的后置图标",
        "description_zh": "自定义选择器的后置图标"
      },
      "time-arrow-control": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "通过箭头按钮控制时间选择，当 type 为 datetime、datetimerange 时使用，默认为 通过鼠标滚轮滚动选择时间",
        "description_zh": "通过箭头按钮控制时间选择，当 type 为 datetime、datetimerange 时使用，默认为 通过鼠标滚轮滚动选择时间"
      },
      "time-format": {
        "default": "'HH:mm:ss'",
        "value": "",
        "type": "string",
        "description": "当自定义的 format 格式无法自动区分时间与日期时，可配置该选项用来辅助确定格式",
        "description_zh": "当自定义的 format 格式无法自动区分时间与日期时，可配置该选项用来辅助确定格式"
      },
      "tip": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "过滤器模式下显示的提示信息",
        "description_zh": "过滤器模式下显示的提示信息"
      },
      "type": {
        "default": "'date'",
        "value": "",
        "type": "IType",
        "description": "显示类型，该属性的可选值可参考 IType 类型声明",
        "description_zh": "显示类型，该属性的可选值可参考 IType 类型声明"
      },
      "unlink-panels": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "在范围选择器里取消两个日期面板之间的联动",
        "description_zh": "在范围选择器里取消两个日期面板之间的联动"
      },
      "validate-event": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置日期选择器在输入时是否会触发表单校验",
        "description_zh": "设置日期选择器在输入时是否会触发表单校验"
      },
      "value-format": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "指定绑定值的格式，不指定则绑定值为 Date 对象",
        "description_zh": "指定绑定值的格式，不指定则绑定值为 Date 对象"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/date-picker",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/date-picker",
    "typeDetail": {
      "IPickerOptions": "interface IPickerOptions {\n  // 每周的第一天是星期几，默认值是7，也就是星期天\n  firstDayOfWeek: number\n  // 实现部分禁用，此时只能选择一部分日期\n  disabledDate: (time: Date) => boolean\n  // 选中日期后执行的回调，需要与 daterange 或 datetimerange 类型配合使用才生效\n  onPick: (range: { minDate: Date, maxDate: Date }) => void\n  // 快捷选项\n  shortcuts: {\n    text: string\n    onClick: (picker: { $emit: (type: string, date: Date) => void }) => void\n    type: 'startFrom' | 'EndAt'\n    startDate: Date\n    endDate: Date\n  }[]\n}",
      "IType": "type IType = 'date' | 'dates' | 'daterange' | 'datetime' | 'datetimerange' | 'week' | 'month' | 'monthrange' | 'quarter' | 'year' | 'years' | 'yearrange'"
    },
    "events": [
      {
        "name": "blur",
        "description": "当 input 失去焦点时触发",
        "description_zh": "当 input 失去焦点时触发",
        "params": "() => void"
      },
      {
        "name": "change",
        "description": "用户确认选定的值时触发",
        "description_zh": "用户确认选定的值时触发",
        "params": "(value: Date) => void"
      },
      {
        "name": "focus",
        "description": "当 input 获得焦点时触发",
        "description_zh": "当 input 获得焦点时触发",
        "params": "() => void"
      }
    ],
    "methods": [
      {
        "name": "abort",
        "description": "取消上传请求",
        "params": "() => void",
        "description_zh": "取消上传请求"
      },
      {
        "name": "clearFiles",
        "description": "清空已上传的文件列表（该方法不支持在 before-upload 中调用）",
        "params": "() => void",
        "description_zh": "清空已上传的文件列表（该方法不支持在 before-upload 中调用）"
      },
      {
        "name": "submit",
        "description": "手动上传文件列表",
        "params": "() => void",
        "description_zh": "手动上传文件列表"
      }
    ],
    "slots": [],
    "filename": "DatePicker"
  },
  {
    "name": "TinyDropTimes",
    "props": {
      "disabled": {
        "default": " false",
        "value": "",
        "type": "boolean",
        "description": "禁用状态",
        "description_zh": "禁用状态"
      },
      ":end": {
        "default": " 1440",
        "value": "",
        "type": "number",
        "description": "结束时间，以分钟计算",
        "description_zh": "结束时间，以分钟计算"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置输入框内的提示占位文本",
        "description_zh": "设置输入框内的提示占位文本"
      },
      "popper-append-to-body": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)",
        "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为 DropTimes 下拉弹框添加的 class 类名",
        "description_zh": "为 DropTimes 下拉弹框添加的 class 类名"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "输入框尺寸",
        "description_zh": "输入框尺寸"
      },
      ":start": {
        "default": " 0",
        "value": "",
        "type": "number",
        "description": "开始时间，以分钟计算",
        "description_zh": "开始时间，以分钟计算"
      },
      ":step": {
        "default": " 15",
        "value": "",
        "type": "number",
        "description": "间隔时间，以分钟计算",
        "description_zh": "间隔时间，以分钟计算"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/drop-times",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/drop-times",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "下拉切换当前时间后触发该事件",
        "description_zh": "下拉切换当前时间后触发该事件",
        "params": "(value: string) => void"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "DropTimes"
  },
  {
    "name": "TinyFileUpload",
    "props": {
      "accept": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "限制文件类型（thumbnail-mode 模式下此参数无效）",
        "description_zh": "限制文件类型（thumbnail-mode 模式下此参数无效）"
      },
      "action": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "上传的地址，必填参数",
        "description_zh": "上传的地址，必填参数"
      },
      "auto-upload": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否在选取文件后立即进行上传",
        "description_zh": "是否在选取文件后立即进行上传"
      },
      "before-add-file": {
        "default": "--",
        "value": "",
        "type": "(callback: () => void) => void",
        "description": "文件选择之前的钩子，若返回 false 或者返回 Promise 且被 reject，则停止添加文件。如果不用以上 2 种方式，也可以通过执行参数中的回调函数继续进行上传【3.13.0版本新增】",
        "description_zh": "文件选择之前的钩子，若返回 false 或者返回 Promise 且被 reject，则停止添加文件。如果不用以上 2 种方式，也可以通过执行参数中的回调函数继续进行上传【3.13.0版本新增】"
      },
      "before-remove": {
        "default": "--",
        "value": "",
        "type": "(file: IFile, fileList: IFile[]) => boolean | Promise",
        "description": "删除文件前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除",
        "description_zh": "删除文件前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除"
      },
      "before-upload": {
        "default": "--",
        "value": "",
        "type": "(file: IFile) => boolean | Promise",
        "description": "上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传",
        "description_zh": "上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "IData",
        "description": "上传时附带的额外参数，参数自定义",
        "description_zh": "上传时附带的额外参数，参数自定义"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "drag": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否启用拖拽上传",
        "description_zh": "是否启用拖拽上传"
      },
      "encrypt-config": {
        "default": "--",
        "value": "",
        "type": "IEncryptConfig",
        "description": "设置水印和加密弹窗",
        "description_zh": "设置水印和加密弹窗"
      },
      "file-list": {
        "default": "--",
        "value": "",
        "type": "IFileListItem[]",
        "description": "上传的文件列表",
        "description_zh": "上传的文件列表"
      },
      "headers": {
        "default": "--",
        "value": "",
        "type": "IHeaders",
        "description": "设置上传的请求头部;通过设置 headers 为头部请求信息",
        "description_zh": "设置上传的请求头部;通过设置 headers 为头部请求信息"
      },
      "http-request": {
        "default": "--",
        "value": "",
        "type": "(file: IFile) => Promise",
        "description": "覆盖默认的上传行为，可以自定义上传的实现; 由于 TinyVue 官网为 Mock 上传不能执行上传",
        "description_zh": "覆盖默认的上传行为，可以自定义上传的实现; 由于 TinyVue 官网为 Mock 上传不能执行上传"
      },
      "is-hidden": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "达到最大上传个数时，是否隐藏上传按钮，默认不隐藏",
        "description_zh": "达到最大上传个数时，是否隐藏上传按钮，默认不隐藏"
      },
      ":limit": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "最大允许上传个数",
        "description_zh": "最大允许上传个数"
      },
      "list-type": {
        "default": "'text'",
        "value": "",
        "type": "IListType",
        "description": "文件列表的类型",
        "description_zh": "文件列表的类型"
      },
      ":max-name-length": {
        "default": "20",
        "value": "",
        "type": "number",
        "description": "列表项的文件名最大字符数，默认超出20个字符隐藏",
        "description_zh": "列表项的文件名最大字符数，默认超出20个字符隐藏"
      },
      "merge-service": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "配置 merge-service 为 true 且开启多文件上传走默认服务会将多个上传服务合并为一个服务上传",
        "description_zh": "配置 merge-service 为 true 且开启多文件上传走默认服务会将多个上传服务合并为一个服务上传"
      },
      "multiple": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否支持多选文件",
        "description_zh": "是否支持多选文件"
      },
      "name": {
        "default": "'file'",
        "value": "",
        "type": "string",
        "description": "上传的文件字段名",
        "description_zh": "上传的文件字段名"
      },
      "open-download-file": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启点击下载文件，默认不开启",
        "description_zh": "是否开启点击下载文件，默认不开启"
      },
      "paste-upload": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否启用粘贴键快捷上传功能【3.11.0版本新增】",
        "description_zh": "是否启用粘贴键快捷上传功能【3.11.0版本新增】"
      },
      "re-upload-tip": {
        "default": "--",
        "value": "",
        "type": "(count: number) => string",
        "description": "自定义重新上传的左侧提示文字，需要与 re-uploadable 搭配使用【3.12.0版本新增】",
        "description_zh": "自定义重新上传的左侧提示文字，需要与 re-uploadable 搭配使用【3.12.0版本新增】"
      },
      "re-uploadable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否启用重新上传功能【3.12.0版本新增】",
        "description_zh": "是否启用重新上传功能【3.12.0版本新增】"
      },
      "show-file-list": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示已上传文件列表",
        "description_zh": "是否显示已上传文件列表"
      },
      "thumb-option": {
        "default": "--",
        "value": "",
        "type": "IThumbOption",
        "description": "文件列表的显示类型为 thumb 时的相关配置",
        "description_zh": "文件列表的显示类型为 thumb 时的相关配置"
      },
      "with-credentials": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "支持发送 cookie 凭证信息",
        "description_zh": "支持发送 cookie 凭证信息"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/file-upload",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/file-upload",
    "typeDetail": {
      "IData": "interface IData {\n  [propsName?: any]: any // 上传参数可自定义\n}",
      "IFile": "interface IFile {\n  name: string // 上传文件名\n  percentage: string // 上传进度百分比\n  raw: File // 原始文件信息\n  size: number // 文件大小\n  status: string // 上传状态\n  uid: string // uid \n}",
      "IEncryptConfig": "interface IEncryptConfig {\n  enabled: boolean // 是否开启设置，默认关闭\n  encrypt: boolean // 是否加密，默认否\n  watermark: string // 水印文字，默认为空\n}",
      "IFileListItem": "interface IFileListItem {\n  name: string // 文件名\n  url: string // 文件url 例如：'https://xxx.cdn.com/xxx.jpg'\n}",
      "IHeaders": "interface IHeaders {\n  'Accept-Language'?: string // 比如等于：'en,zh'\n  Authorization?: string // 比如等于：'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\n  [props: string]: any // headers的属性和属性值自定义\n}",
      "IListType": "type IListType = 'text' | 'picture' | 'picture-card' | 'thumb' | 'saas' // saas为3.14.0版本新增",
      "IThumbOption": "interface IThumbOption {\n  width: number // 弹窗宽度，默认270\n  showDownload: boolean // 是否显示下载按钮，默认false\n  showDel: boolean // 是否显示删除按钮，布尔false\n  showTooltip: boolean // 文件名超出隐藏显示时是否启用tip，默认false\n  popperClass: string // 弹窗列表自定义类名\n  downloadFile: (file) => void // 点击下载按钮执行函数\n  icon: string | Component // 列表结果前 icon ，默认为 'icon-attachment'\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "文件状态改变时触发的事件，添加文件、上传成功和上传失败时都会被触发",
        "description_zh": "文件状态改变时触发的事件，添加文件、上传成功和上传失败时都会被触发",
        "params": "(file: IFile, fileList: IFile[]) => void"
      },
      {
        "name": "drop-error",
        "description": "拖拽文件失败时触发的事件，开启拖拽时有效； file 为上传失败文件信息",
        "description_zh": "拖拽文件失败时触发的事件，开启拖拽时有效； file 为上传失败文件信息",
        "params": "(file: IFile) => void"
      },
      {
        "name": "error",
        "description": "文件上传失败时触发的事件； message 为错误信息事件对象，file 为当前上传失败文件信息，fileList 为上传成功 file 数组",
        "description_zh": "文件上传失败时触发的事件； message 为错误信息事件对象，file 为当前上传失败文件信息，fileList 为上传成功 file 数组",
        "params": "(message: ProgressEvent, file: IFile, fileList: IFile[]) => void"
      },
      {
        "name": "exceed",
        "description": "文件超出个数限制时触发的事件； files 为上传的文件",
        "description_zh": "文件超出个数限制时触发的事件； files 为上传的文件",
        "params": "(files: File | File[], fileList: IFile[]) => void"
      },
      {
        "name": "hash-progress",
        "description": "文件上传生成 hash 值触发的事件； percentage 为生成的进度值",
        "description_zh": "文件上传生成 hash 值触发的事件； percentage 为生成的进度值",
        "params": "(percentage: number) => void"
      },
      {
        "name": "preview",
        "description": "点击文件列表中已上传的文件时触发的事件",
        "description_zh": "点击文件列表中已上传的文件时触发的事件",
        "params": "(file: IFile) => void"
      },
      {
        "name": "progress",
        "description": "文件上传时触发的事件； message 为进度条事件对象",
        "description_zh": "文件上传时触发的事件； message 为进度条事件对象",
        "params": "(message: ProgressEvent, file: IFile) => void"
      },
      {
        "name": "remove",
        "description": "从文件列表移除文件时触发的事件； file 为当前移除的文件信息",
        "description_zh": "从文件列表移除文件时触发的事件； file 为当前移除的文件信息",
        "params": "(file: IFile) => void"
      },
      {
        "name": "success",
        "description": "文件上传成功时触发的事件； res 为上传成功后的响应信息事件对象，file 为当前上传的文件，fileList 为所有上传文件数组",
        "description_zh": "文件上传成功时触发的事件； res 为上传成功后的响应信息事件对象，file 为当前上传的文件，fileList 为所有上传文件数组",
        "params": "(res: ProgressEvent, file: IFile, fileList: IFile[]) => void"
      }
    ],
    "methods": [
      {
        "name": "abort",
        "description": "取消上传请求",
        "params": "() => void",
        "description_zh": "取消上传请求"
      },
      {
        "name": "clearFiles",
        "description": "清空已上传的文件列表（该方法不支持在 before-upload 中调用）",
        "params": "() => void",
        "description_zh": "清空已上传的文件列表（该方法不支持在 before-upload 中调用）"
      },
      {
        "name": "submit",
        "description": "手动上传文件列表",
        "params": "() => void",
        "description_zh": "手动上传文件列表"
      }
    ],
    "slots": [
      {
        "name": "file",
        "description": "定义文件显示内容",
        "description_zh": "定义文件显示内容"
      },
      {
        "name": "tip",
        "description": "提示说明文字",
        "description_zh": "提示说明文字"
      },
      {
        "name": "trigger",
        "description": "触发文件选择框的内容",
        "description_zh": "触发文件选择框的内容"
      }
    ],
    "filename": "FileUpload"
  },
  {
    "name": "TinyForm",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用该表单内的所有表单组件，若设置为 true，则表单内组件上的 disabled 属性不再生效",
        "description_zh": "是否禁用该表单内的所有表单组件，若设置为 true，则表单内组件上的 disabled 属性不再生效"
      },
      "display-only": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启仅展示模式",
        "description_zh": "是否开启仅展示模式"
      },
      "hide-required-asterisk": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否隐藏必填字段的标签旁边的红色星号，SMB 主题下默认值为true",
        "description_zh": "是否隐藏必填字段的标签旁边的红色星号，SMB 主题下默认值为true"
      },
      "inline": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "行内布局模式",
        "description_zh": "行内布局模式"
      },
      "inline-message": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "当 validate-type 设置为 text 时，是否以行内形式展示校验信息(推荐使用 message-type 设置)",
        "description_zh": "当 validate-type 设置为 text 时，是否以行内形式展示校验信息(推荐使用 message-type 设置)"
      },
      "label-align": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "当出现必填星号时，标签文本是否对齐，当 label-position 为 'right' 时有效",
        "description_zh": "当出现必填星号时，标签文本是否对齐，当 label-position 为 'right' 时有效"
      },
      "label-position": {
        "default": "'right'",
        "value": "",
        "type": "'right' | 'left' | 'top'",
        "description": "表单中标签的布局位置",
        "description_zh": "表单中标签的布局位置"
      },
      "label-suffix": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "表单中标签后缀",
        "description_zh": "表单中标签后缀"
      },
      "label-width": {
        "default": "'80px'",
        "value": "",
        "type": "string",
        "description": "表单中标签占位宽度",
        "description_zh": "表单中标签占位宽度"
      },
      "message-type": {
        "default": "--",
        "value": "",
        "type": "'inline' | 'block'",
        "description": "当 validate-type 设置为 text 时，配置文本类型错误类型，可配置行内或者块级，不设置则为 absolute 定位",
        "description_zh": "当 validate-type 设置为 text 时，配置文本类型错误类型，可配置行内或者块级，不设置则为 absolute 定位"
      },
      "model": {
        "default": "--",
        "value": "",
        "type": "{ [prop: string]: any }",
        "description": "表单数据对象",
        "description_zh": "表单数据对象"
      },
      "overflow-title": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "标签超长是否显示提示",
        "description_zh": "标签超长是否显示提示"
      },
      "popper-options": {
        "default": "--",
        "value": "",
        "type": "Popover.IPopperOption",
        "description": "校验错误提示配置，透传至 Popover 组件",
        "description_zh": "校验错误提示配置，透传至 Popover 组件"
      },
      "rules": {
        "default": "--",
        "value": "",
        "type": "{ [prop: string]: IFormRules | IFormRules[]  }",
        "description": "表单验证规则",
        "description_zh": "表单验证规则"
      },
      "show-message": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示校验错误信息",
        "description_zh": "是否显示校验错误信息"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "表单内组件的尺寸，不设置则为默认尺寸",
        "description_zh": "表单内组件的尺寸，不设置则为默认尺寸"
      },
      "validate-on-rule-change": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否在 rules 属性改变后立即触发一次验证",
        "description_zh": "是否在 rules 属性改变后立即触发一次验证"
      },
      "validate-position": {
        "default": "'right'",
        "value": "",
        "type": "IFormPosition",
        "description": "指定校验提示框显示的位置",
        "description_zh": "指定校验提示框显示的位置"
      },
      "validate-type": {
        "default": "'tip'",
        "value": "",
        "type": "'tip' | 'text'",
        "description": "校验类型",
        "description_zh": "校验类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/form",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/form",
    "typeDetail": {
      "IFormPosition": "type IFormPosition = 'top-start' | 'top' | 'top-end' | 'left-start' | 'left' | 'left-end' | 'right-start' | 'right' | 'right-end' | 'bottom-start' | 'bottom' | 'bottom-end'",
      "IFormRules": "// 表单项检验触发时机\ntype IFormTrigger = 'change' | 'blur'\n\ninterface IFormRules {\n  required?: boolean // 是否必填\n  message?: number // 校验错误的提示\n  // 内置的类型校验\n  type?: 'date' | 'dateTime' | 'float' | 'array' | 'string' | 'number' | 'url' | 'time' | 'email' | 'object' | 'boolean' | 'enum'\n  // 校验触发时机， 默认为 ['change', 'blur'] 两种场景都触发，如果仅在主动调用校验方式时触发，可设置为空数组 []。\n  trigger?: IFormTrigger | IFormTrigger[] \n  // 同步检验函数，调用回调传递错误信息。\n  validator?: (\n    rule: IFormInnerRule, // from内部处理后的rule\n    value: any, // 表单model对应的值，根据表单项prop获取\n    callback: (e: Error) => void\n    data: object, // prop和value构造的对象\n    options: object // 检验配置，一般不需要用到\n  ) => void\n  // 异步校验函数，resolve则表示校验成功，reject表示校验失败。\n  asyncValidator?: (\n    rule: IFormInnerRule,\n    value: any,\n    callback: (e: Error) => void\n    data: object,\n    options: object\n  ) => Promise<any>\n}\n\ninterface IFormInnerRule {\n  field: string // 表单项prop\n  fullField: string // 表单项完整prop（嵌套检验时有用）\n  type: string // 内部使用\n}",
      "IFormError": "// 校验错误返回对象\ninterface IFormError {\n  [prop: string]: IFormErrorField[]\n}\ninterface IFormErrorField {\n  message: string // 校验错误提示\n  field: string // 校验失败的prop\n}",
      "IFormValidateMethod": "function IFormValidateMethod(callback: (isValid: boolean, fields: IFormError) => void ): Promise<boolean>",
      "IFormValidateFieldMethod": "function IFormValidateFieldMethod(\n  prop: string | string[],\n  callback: (msg: string, field: IFormError) => void\n): void"
    },
    "events": [
      {
        "name": "validate",
        "description": "任一表单项被校验后触发",
        "description_zh": "任一表单项被校验后触发",
        "params": "(prop: string, isValid: boolean, message: string) => void"
      }
    ],
    "methods": [
      {
        "name": "clearValidate",
        "description": "移除表单项的校验结果，可传入待移除的表单项的 prop ，或者 prop 组成的数组，如不传则移除整个表单的校验结果",
        "params": "(prop: string | string[]) => void",
        "description_zh": "移除表单项的校验结果，可传入待移除的表单项的 prop ，或者 prop 组成的数组，如不传则移除整个表单的校验结果"
      },
      {
        "name": "resetFields",
        "description": "对整个表单进行重置，将所有字段值重置为初始值并移除校验结果",
        "params": "() => void",
        "description_zh": "对整个表单进行重置，将所有字段值重置为初始值并移除校验结果"
      },
      {
        "name": "validate",
        "description": "对整个表单进行校验的方法，参数为一个回调函数（该回调函数会在校验结束后被调用，并传入两个参数：1、是否校验成功 2、未通过校验的字段）返回一个 promise",
        "params": "IFormValidateMethod",
        "description_zh": "对整个表单进行校验的方法，参数为一个回调函数（该回调函数会在校验结束后被调用，并传入两个参数：1、是否校验成功 2、未通过校验的字段）返回一个 promise"
      },
      {
        "name": "validateField",
        "description": "对部分表单字段进行校验的方法, 第一个参数为单个 prop 或者 prop 数组，第二个参数是回调函数，每个表单项检验完后会依次调用该回调",
        "params": "IFormValidateFieldMethod",
        "description_zh": "对部分表单字段进行校验的方法, 第一个参数为单个 prop 或者 prop 数组，第二个参数是回调函数，每个表单项检验完后会依次调用该回调"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽，自定义表单内容",
        "description_zh": "默认插槽，自定义表单内容"
      }
    ],
    "filename": "Form"
  },
  {
    "name": "TinyFormItem",
    "props": {
      "error": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "表单项错误文本，设置该值会使表单验证状态变为 error",
        "description_zh": "表单项错误文本，设置该值会使表单验证状态变为 error"
      },
      "extra": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "表单项额外提示",
        "description_zh": "表单项额外提示"
      },
      "inline-message": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否以行内形式展示校验信息(推荐使用 message-type 设置)",
        "description_zh": "是否以行内形式展示校验信息(推荐使用 message-type 设置)"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "标签文本",
        "description_zh": "标签文本"
      },
      "label-width": {
        "default": "'80px'",
        "value": "",
        "type": "string",
        "description": "表单域标签的的宽度",
        "description_zh": "表单域标签的的宽度"
      },
      "message-type": {
        "default": "--",
        "value": "",
        "type": "'inline' | 'block'",
        "description": "配置文本类型错误类型，可配置行内或者块级，不配置则为 absolute 定位",
        "description_zh": "配置文本类型错误类型，可配置行内或者块级，不配置则为 absolute 定位"
      },
      "prop": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "对应表单域 model 字段，如需使用表单校验，该属性是必填的",
        "description_zh": "对应表单域 model 字段，如需使用表单校验，该属性是必填的"
      },
      "required": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否必填，如不设置，则会根据校验规则自动生成",
        "description_zh": "是否必填，如不设置，则会根据校验规则自动生成"
      },
      "rules": {
        "default": "--",
        "value": "",
        "type": "IFormRules",
        "description": "表单项验证规则",
        "description_zh": "表单项验证规则"
      },
      "show-message": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示校验错误信息",
        "description_zh": "是否显示校验错误信息"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "用于控制该表单域下组件的尺寸，不设置则为默认尺寸",
        "description_zh": "用于控制该表单域下组件的尺寸，不设置则为默认尺寸"
      },
      "validate-debounce": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启校验防抖，在连续输入的情况下，会在最后一次输入结束时才开始校验",
        "description_zh": "是否开启校验防抖，在连续输入的情况下，会在最后一次输入结束时才开始校验"
      },
      "validate-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "校验提示框的图标，类型为组件",
        "description_zh": "校验提示框的图标，类型为组件"
      },
      "validate-position": {
        "default": "'top-end'",
        "value": "",
        "type": "IFormPosition",
        "description": "指定校验提示框显示的位置",
        "description_zh": "指定校验提示框显示的位置"
      },
      "validate-type": {
        "default": "'tip'",
        "value": "",
        "type": "'text' | 'tip'",
        "description": "校验提示显示类型",
        "description_zh": "校验提示显示类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/form",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/form",
    "typeDetail": {
      "IFormPosition": "type IFormPosition = 'top-start' | 'top' | 'top-end' | 'left-start' | 'left' | 'left-end' | 'right-start' | 'right' | 'right-end' | 'bottom-start' | 'bottom' | 'bottom-end'",
      "IFormRules": "// 表单项检验触发时机\ntype IFormTrigger = 'change' | 'blur'\n\ninterface IFormRules {\n  required?: boolean // 是否必填\n  message?: number // 校验错误的提示\n  // 内置的类型校验\n  type?: 'date' | 'dateTime' | 'float' | 'array' | 'string' | 'number' | 'url' | 'time' | 'email' | 'object' | 'boolean' | 'enum'\n  // 校验触发时机， 默认为 ['change', 'blur'] 两种场景都触发，如果仅在主动调用校验方式时触发，可设置为空数组 []。\n  trigger?: IFormTrigger | IFormTrigger[] \n  // 同步检验函数，调用回调传递错误信息。\n  validator?: (\n    rule: IFormInnerRule, // from内部处理后的rule\n    value: any, // 表单model对应的值，根据表单项prop获取\n    callback: (e: Error) => void\n    data: object, // prop和value构造的对象\n    options: object // 检验配置，一般不需要用到\n  ) => void\n  // 异步校验函数，resolve则表示校验成功，reject表示校验失败。\n  asyncValidator?: (\n    rule: IFormInnerRule,\n    value: any,\n    callback: (e: Error) => void\n    data: object,\n    options: object\n  ) => Promise<any>\n}\n\ninterface IFormInnerRule {\n  field: string // 表单项prop\n  fullField: string // 表单项完整prop（嵌套检验时有用）\n  type: string // 内部使用\n}",
      "IFormError": "// 校验错误返回对象\ninterface IFormError {\n  [prop: string]: IFormErrorField[]\n}\ninterface IFormErrorField {\n  message: string // 校验错误提示\n  field: string // 校验失败的prop\n}",
      "IFormValidateMethod": "function IFormValidateMethod(callback: (isValid: boolean, fields: IFormError) => void ): Promise<boolean>",
      "IFormValidateFieldMethod": "function IFormValidateFieldMethod(\n  prop: string | string[],\n  callback: (msg: string, field: IFormError) => void\n): void"
    },
    "events": [
      {
        "name": "validate",
        "description": "任一表单项被校验后触发",
        "description_zh": "任一表单项被校验后触发",
        "params": "(prop: string, isValid: boolean, message: string) => void"
      }
    ],
    "methods": [
      {
        "name": "clearValidate",
        "description": "移除该表单项的校验结果",
        "params": "() => void",
        "description_zh": "移除该表单项的校验结果"
      },
      {
        "name": "resetField",
        "description": "对该表单项进行重置，将其值重置为初始值并移除校验结果",
        "params": "() => void",
        "description_zh": "对该表单项进行重置，将其值重置为初始值并移除校验结果"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      },
      {
        "name": "error",
        "description": "错误提示内容",
        "description_zh": "错误提示内容"
      },
      {
        "name": "label",
        "description": "标签文本的内容",
        "description_zh": "标签文本的内容"
      }
    ],
    "filename": "FormItem"
  },
  {
    "name": "TinyInput",
    "props": {
      "autocomplete": {
        "default": "'off'",
        "value": "",
        "type": "string",
        "description": "原生 autocomplete 属性",
        "description_zh": "原生 autocomplete 属性"
      },
      "autofocus": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "原生属性，页面加载时，自动获取焦点",
        "description_zh": "原生属性，页面加载时，自动获取焦点"
      },
      "autosize": {
        "default": "false",
        "value": "",
        "type": "boolean | { minRows: number, maxRows: number }",
        "description": "自适应内容高度，只对 type=\"textarea\" 有效。可传入对象，如，{ minRows: 2, maxRows: 6 }",
        "description_zh": "自适应内容高度，只对 type=\"textarea\" 有效。可传入对象，如，{ minRows: 2, maxRows: 6 }"
      },
      "clearable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否显示清除按钮，该属性不适用于 type=\"textarea\"",
        "description_zh": "是否显示清除按钮，该属性不适用于 type=\"textarea\""
      },
      "cols": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生属性，设置宽度，在 type =\"textarea\" 时有效",
        "description_zh": "原生属性，设置宽度，在 type =\"textarea\" 时有效"
      },
      "counter": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示字数统计，只在 type = \"text\" 或 type = \"textarea\" 时有效",
        "description_zh": "是否显示字数统计，只在 type = \"text\" 或 type = \"textarea\" 时有效"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "display-only": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置文本只读态",
        "description_zh": "设置文本只读态"
      },
      "display-only-content": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置只读态时的文本内容区，如果没有则会使用 modelVale 的值作为只读文本",
        "description_zh": "设置只读态时的文本内容区，如果没有则会使用 modelVale 的值作为只读文本"
      },
      "form": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生属性",
        "description_zh": "原生属性"
      },
      "hover-expand": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置文本域鼠标悬浮展开/收起，只对 `type=textarea` 有效，最好搭配 autosize 一起使用",
        "description_zh": "设置文本域鼠标悬浮展开/收起，只对 `type=textarea` 有效，最好搭配 autosize 一起使用"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "等价于原生 input aria-label 属性",
        "description_zh": "等价于原生 input aria-label 属性"
      },
      "mask": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "启用掩码功能，只在 disabled 和 display-only 状态下生效",
        "description_zh": "启用掩码功能，只在 disabled 和 display-only 状态下生效"
      },
      ":max": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "原生属性，设置最大值",
        "description_zh": "原生属性，设置最大值"
      },
      ":maxlength": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "原生属性，最大输入长度",
        "description_zh": "原生属性，最大输入长度"
      },
      ":memory-space": {
        "default": "5",
        "value": "",
        "type": "number",
        "description": "设置 addMemory 方法中，最大能保存条目的数量",
        "description_zh": "设置 addMemory 方法中，最大能保存条目的数量"
      },
      ":min": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "原生属性，设置最小值",
        "description_zh": "原生属性，设置最小值"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "设置文本的绑定值",
        "description_zh": "设置文本的绑定值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生 input name 属性",
        "description_zh": "原生 input name 属性"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "输入框占位文本",
        "description_zh": "输入框占位文本"
      },
      "prefix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "输入框头部图标",
        "description_zh": "输入框头部图标"
      },
      "readonly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "原生属性，是否只读",
        "description_zh": "原生属性，是否只读"
      },
      "resize": {
        "default": "--",
        "value": "",
        "type": "'both' | 'horizontal' | 'vertical' | 'none'",
        "description": "控制是否能被用户缩放",
        "description_zh": "控制是否能被用户缩放"
      },
      ":rows": {
        "default": "2",
        "value": "",
        "type": "number",
        "description": "输入框行数，只对 type=\"textarea\" 有效",
        "description_zh": "输入框行数，只对 type=\"textarea\" 有效"
      },
      "show-password": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示切换密码图标",
        "description_zh": "是否显示切换密码图标"
      },
      "show-word-limit": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示输入字数统计，只在 type = \"text\" 或 type = \"textarea\" 时有效",
        "description_zh": "是否显示输入字数统计，只在 type = \"text\" 或 type = \"textarea\" 时有效"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "输入框尺寸，只在 type!=\"textarea\" 时有效",
        "description_zh": "输入框尺寸，只在 type!=\"textarea\" 时有效"
      },
      ":step": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "原生属性，设置输入字段的合法数字间隔",
        "description_zh": "原生属性，设置输入字段的合法数字间隔"
      },
      "suffix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "输入框尾部图标",
        "description_zh": "输入框尾部图标"
      },
      "tabindex": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生属性，输入框的 tabindex",
        "description_zh": "原生属性，输入框的 tabindex"
      },
      "type": {
        "default": "'text'",
        "value": "",
        "type": "'text' | 'textarea' | 'password' | InputHTMLAttributes.type",
        "description": "设置 input 框的 type 属性，默认为 \"text\",可选值 \"text\"，\"textarea\" 和其他 原生 input 的 type 值",
        "description_zh": "设置 input 框的 type 属性，默认为 \"text\",可选值 \"text\"，\"textarea\" 和其他 原生 input 的 type 值"
      },
      "validate-event": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "输入时是否触发表单的校验",
        "description_zh": "输入时是否触发表单的校验"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/input",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/input",
    "typeDetail": {},
    "events": [
      {
        "name": "blur",
        "description": "在 Input 失去焦点时触发",
        "description_zh": "在 Input 失去焦点时触发",
        "params": "(event: FocusEvent) => void"
      },
      {
        "name": "change",
        "description": "在 Input 值改变时触发",
        "description_zh": "在 Input 值改变时触发",
        "params": "(value: string | number) => void"
      },
      {
        "name": "clear",
        "description": "在点击由 clearable 属性生成的清空按钮时触发",
        "description_zh": "在点击由 clearable 属性生成的清空按钮时触发",
        "params": "() => void"
      },
      {
        "name": "focus",
        "description": "在 Input 获得焦点时触发",
        "description_zh": "在 Input 获得焦点时触发",
        "params": "(event: FocusEvent) => void"
      },
      {
        "name": "input",
        "description": "输入值时触发事件",
        "description_zh": "输入值时触发事件",
        "params": "(event: InputEvent) => void"
      }
    ],
    "methods": [
      {
        "name": "addMemory",
        "description": "历史输入内容的记忆方法",
        "params": "(value: string) => void",
        "description_zh": "历史输入内容的记忆方法"
      },
      {
        "name": "blur",
        "description": "使 input 失去焦点",
        "params": "() => void",
        "description_zh": "使 input 失去焦点"
      },
      {
        "name": "focus",
        "description": "使 input 获取焦点",
        "params": "() => void",
        "description_zh": "使 input 获取焦点"
      },
      {
        "name": "select",
        "description": "选中 input 中的文字",
        "params": "() => void",
        "description_zh": "选中 input 中的文字"
      }
    ],
    "slots": [
      {
        "name": "append",
        "description": "输入框后置内容，只对 type=\"text\" 有效",
        "description_zh": "输入框后置内容，只对 type=\"text\" 有效"
      },
      {
        "name": "prefix",
        "description": "输入框头部内容，只对 type=\"text\" 有效",
        "description_zh": "输入框头部内容，只对 type=\"text\" 有效"
      },
      {
        "name": "prepend",
        "description": "输入框前置内容，只对 type=\"text\" 有效",
        "description_zh": "输入框前置内容，只对 type=\"text\" 有效"
      },
      {
        "name": "suffix",
        "description": "输入框尾部内容，只对 type=\"text\" 有效",
        "description_zh": "输入框尾部内容，只对 type=\"text\" 有效"
      }
    ],
    "filename": "Input"
  },
  {
    "name": "TinyIpAddress",
    "props": {
      "delimiter": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "设置 ip 段之间的分隔符，默认图标为 IconDotIpv4 ",
        "description_zh": "设置 ip 段之间的分隔符，默认图标为 IconDotIpv4 "
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置文本的禁用属性",
        "description_zh": "设置文本的禁用属性"
      },
      "readonly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置文本的只读属性",
        "description_zh": "设置文本的只读属性"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "地址输入框大小",
        "description_zh": "地址输入框大小"
      },
      "type": {
        "default": "'IPv4'",
        "value": "",
        "type": "'IPv4' | 'IPv6'",
        "description": "设置 ip 地址输入框的类型",
        "description_zh": "设置 ip 地址输入框的类型"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置地址输入框的绑定值",
        "description_zh": "设置地址输入框的绑定值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/ip-address",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/ip-address",
    "typeDetail": {},
    "events": [
      {
        "name": "blur",
        "description": "文本框失去焦点时触发事件",
        "description_zh": "文本框失去焦点时触发事件",
        "params": "(value: string, index: number) => void"
      },
      {
        "name": "change",
        "description": "文本框内容改变后事件",
        "description_zh": "文本框内容改变后事件",
        "params": "(value: string) => void"
      },
      {
        "name": "focus",
        "description": "文本框获取焦点时触发事件",
        "description_zh": "文本框获取焦点时触发事件",
        "params": "(value: string, index: number) => void"
      },
      {
        "name": "input",
        "description": "文本框内容输入时触发事件",
        "description_zh": "文本框内容输入时触发事件",
        "params": "(event: InputEvent) => void"
      },
      {
        "name": "select",
        "description": "文本框内容选中时触发事件",
        "description_zh": "文本框内容选中时触发事件",
        "params": "(value: string, index: number) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽，自定义 ip 段之间的分隔符",
        "description_zh": "默认插槽，自定义 ip 段之间的分隔符"
      }
    ],
    "filename": "IpAddress"
  },
  {
    "name": "TinyNumeric",
    "props": {
      "allow-empty": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "内容可清空",
        "description_zh": "内容可清空"
      },
      "blank": {
        "default": "true",
        "value": "",
        "type": "string",
        "description": "过滤器背景设置为透明，默认值为true",
        "description_zh": "过滤器背景设置为透明，默认值为true"
      },
      "change-compat": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置除加减按钮及直接输入数值之外，值改变后是否触发change事件",
        "description_zh": "设置除加减按钮及直接输入数值之外，值改变后是否触发change事件"
      },
      "circulate": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "向上到达最大值后，是否从最小值开始，或反过来",
        "description_zh": "向上到达最大值后，是否从最小值开始，或反过来"
      },
      "controls": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否使用加减按钮",
        "description_zh": "是否使用加减按钮"
      },
      "controls-position": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "加减按钮位置，可选值为 right，表示加减按钮均位于最右侧",
        "description_zh": "加减按钮位置，可选值为 right，表示加减按钮均位于最右侧"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "禁用",
        "description_zh": "禁用"
      },
      "empty-value": {
        "default": "undefined",
        "value": "",
        "type": "any",
        "description": "设置计数器在可清空下，清空后组件的绑定值",
        "description_zh": "设置计数器在可清空下，清空后组件的绑定值"
      },
      "format": {
        "default": "--",
        "value": "",
        "type": "INumericFormat",
        "description": "数字格式化置项",
        "description_zh": "数字格式化置项"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "组件arial-label属性取值",
        "description_zh": "组件arial-label属性取值"
      },
      ":max": {
        "default": "Infinity",
        "value": "",
        "type": "number",
        "description": "规定组件可输入的最大数值，指定合法值的范围，支持整数和小数",
        "description_zh": "规定组件可输入的最大数值，指定合法值的范围，支持整数和小数"
      },
      ":min": {
        "default": "-Infinity",
        "value": "",
        "type": "number",
        "description": "规定组件可输入的最小数值，指定合法值的范围，支持整数和小数",
        "description_zh": "规定组件可输入的最小数值，指定合法值的范围，支持整数和小数"
      },
      "mouse-wheel": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "鼠标滚动滑轮是否改变数值",
        "description_zh": "鼠标滚动滑轮是否改变数值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生属性",
        "description_zh": "原生属性"
      },
      "placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "输入框内的提示占位文本",
        "description_zh": "输入框内的提示占位文本"
      },
      ":precision": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "数值精度",
        "description_zh": "数值精度"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置输入的shape='filter,切换至过滤器模式'",
        "description_zh": "设置输入的shape='filter,切换至过滤器模式'"
      },
      "show-left": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置左对齐",
        "description_zh": "设置左对齐"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "计数器尺寸，该属性的可选值为 medium | small | mini",
        "description_zh": "计数器尺寸，该属性的可选值为 medium | small | mini"
      },
      ":step": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "步长",
        "description_zh": "步长"
      },
      "step-strictly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否只能输入 step 的倍数",
        "description_zh": "是否只能输入 step 的倍数"
      },
      "string-mode": {
        "default": "--",
        "value": "",
        "type": "Boolean",
        "description": "使用字符串模式，精度超过JS限制时使用",
        "description_zh": "使用字符串模式，精度超过JS限制时使用"
      },
      "unit": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "数值的单位。在设置单位时，加减按钮将不可用",
        "description_zh": "数值的单位。在设置单位时，加减按钮将不可用"
      },
      ":v-model": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "设置输入组件的默认值，默认为 0",
        "description_zh": "设置输入组件的默认值，默认为 0"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/numeric",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/numeric",
    "typeDetail": {
      "INumericFormat": "interface INumericFormat {\n  fraction: 4, // 保留小数位数\n  rounding: 0, // 舍入点，0-9之间的数字，如配置为7时则为6舍7入，默认为5（四舍五入）;配置为0或>9将会进行截取\n  prefix: '$', // 前置标识\n  groupSize: 3, // 整数部分分组间隔，即第一个分组位数\n  secondaryGroupSize: 2, // 整数部分第二级分组间隔，不设置或为0时 自动取groupSize\n  groupSeparator: ',', // 整数部分分组分隔符\n  decimalSeparator: '.', // 小数点符号\n  fractionGroupSize: 0, // 小数部分分组间隔\n  fractionGroupSeparator: '', // 小数分组分隔符\n  suffix: '@' // 后置标识\n}"
    },
    "events": [
      {
        "name": "blur",
        "description": "组件失去焦点时触发的回调函数",
        "description_zh": "组件失去焦点时触发的回调函数",
        "params": "(event: FocusEvent) => void"
      },
      {
        "name": "change",
        "description": "组件的值变化时触发的回调函数",
        "description_zh": "组件的值变化时触发的回调函数",
        "params": "(newVal: number | undefined, oldVal: number | undefined) => void"
      },
      {
        "name": "filter-change",
        "description": "选择过滤器面板值的回调函数",
        "description_zh": "选择过滤器面板值的回调函数",
        "params": "(label) => void"
      },
      {
        "name": "focus",
        "description": "组件获得焦点时触发的回调函数",
        "description_zh": "组件获得焦点时触发的回调函数",
        "params": "(event: FocusEvent) => void"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "Numeric"
  },
  {
    "name": "TinyPopEditor",
    "props": {
      "auto-lookup": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "初始化时是否自动请求数据",
        "description_zh": "初始化时是否自动请求数据"
      },
      "auto-reset": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "筛选后点击关闭是否自动重置筛选条件",
        "description_zh": "筛选后点击关闭是否自动重置筛选条件"
      },
      "before-close": {
        "default": "--",
        "value": "",
        "type": "() => boolean",
        "description": "可以配置一个拦截弹窗关闭的方法。如果方法返回 false 值，则拦截弹窗关闭，否则不拦截",
        "description_zh": "可以配置一个拦截弹窗关闭的方法。如果方法返回 false 值，则拦截弹窗关闭，否则不拦截"
      },
      "before-reset": {
        "default": "--",
        "value": "",
        "type": "() => boolean",
        "description": "重置前的钩子函数",
        "description_zh": "重置前的钩子函数"
      },
      "conditions": {
        "default": "--",
        "value": "",
        "type": "IConditions[]",
        "description": "当弹出面板配置的是表格时，设置弹出面板中的表单查询项",
        "description_zh": "当弹出面板配置的是表格时，设置弹出面板中的表单查询项"
      },
      "dialog-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "自定义配置弹窗类名",
        "description_zh": "自定义配置弹窗类名"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "禁用状态",
        "description_zh": "禁用状态"
      },
      "draggable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置弹出窗口是否可拖动",
        "description_zh": "设置弹出窗口是否可拖动"
      },
      "grid-op": {
        "default": "--",
        "value": "",
        "type": "InstanceType<typeof TinyGrid>['$props']",
        "description": "设置弹出面板中表格组件的配置信息",
        "description_zh": "设置弹出面板中表格组件的配置信息"
      },
      "icon": {
        "default": "IconPopup",
        "value": "",
        "type": "Component",
        "description": "自定义选择框尾部图标",
        "description_zh": "自定义选择框尾部图标"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "multi": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置弹出面板中的数据是否可多选",
        "description_zh": "设置弹出面板中的数据是否可多选"
      },
      "pager-op": {
        "default": "--",
        "value": "",
        "type": "InstanceType<typeof TinyPager>['$props']",
        "description": "设置分页配置",
        "description_zh": "设置分页配置"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "占位符",
        "description_zh": "占位符"
      },
      "popseletor": {
        "default": "'grid'",
        "value": "",
        "type": "string",
        "description": "设置弹出面板中可显示的树或者表格组件",
        "description_zh": "设置弹出面板中可显示的树或者表格组件"
      },
      "radio-change-close": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "单选选中后是否关闭弹窗",
        "description_zh": "单选选中后是否关闭弹窗"
      },
      "readonly": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置是否只读，【3.0】设置为 false 后点击 Input 框可以弹出选择框",
        "description_zh": "设置是否只读，【3.0】设置为 false 后点击 Input 框可以弹出选择框"
      },
      "remote-search": {
        "default": "--",
        "value": "",
        "type": "IRemoteSearch",
        "description": "配置远程搜索",
        "description_zh": "配置远程搜索"
      },
      "resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示弹框全屏按钮",
        "description_zh": "是否显示弹框全屏按钮"
      },
      "selected-box-op": {
        "default": "--",
        "value": "",
        "type": "ISelectedBoxOption",
        "description": "通过属性 selected-box-op 指定 SelectedBox 组件配置，可以把已选表格显示为已选栏",
        "description_zh": "通过属性 selected-box-op 指定 SelectedBox 组件配置，可以把已选表格显示为已选栏"
      },
      "show-clear-btn": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置输入框中右侧是否显示清除按钮",
        "description_zh": "设置输入框中右侧是否显示清除按钮"
      },
      "show-history": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "当弹出面板配置的是表格时，设置历史记录标签页是否显示表格",
        "description_zh": "当弹出面板配置的是表格时，设置历史记录标签页是否显示表格"
      },
      "show-pager": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "展示分页",
        "description_zh": "展示分页"
      },
      "show-selected-box": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "多选场景，是否将已选表格显示为已选栏",
        "description_zh": "多选场景，是否将已选表格显示为已选栏"
      },
      "size": {
        "default": "''",
        "value": "",
        "type": "'medium' | 'small' | '' | 'mini'",
        "description": "尺寸",
        "description_zh": "尺寸"
      },
      "suggest": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "配置 suggest 开启联想功能，输入框输入后自动触发联想查询，该功能需要联合 remote-search 使用",
        "description_zh": "配置 suggest 开启联想功能，输入框输入后自动触发联想查询，该功能需要联合 remote-search 使用"
      },
      "tabindex": {
        "default": "'1'",
        "value": "",
        "type": "string",
        "description": "设置通过 Tab 键获焦及获焦顺序（readonly 属性设置为 false 时有效）",
        "description_zh": "设置通过 Tab 键获焦及获焦顺序（readonly 属性设置为 false 时有效）"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "设置输入框中显示文本的字段，提交数据时，不提交该显示文本",
        "description_zh": "设置输入框中显示文本的字段，提交数据时，不提交该显示文本"
      },
      "text-split": {
        "default": "'/'",
        "value": "",
        "type": "string",
        "description": "在多选的情况下，设置输入框中要显示多个数据时的分隔符",
        "description_zh": "在多选的情况下，设置输入框中要显示多个数据时的分隔符"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置弹出面板的标题，并且支持国际化",
        "description_zh": "设置弹出面板的标题，并且支持国际化"
      },
      "trigger": {
        "default": "'default'",
        "value": "",
        "type": "'default' | 'cell' | 'row'",
        "description": "弹框表格中为单选时 radio 的选中配置，可配置：default（默认）, cell（点击单元格触发）, row（点击行触发）",
        "description_zh": "弹框表格中为单选时 radio 的选中配置，可配置：default（默认）, cell（点击单元格触发）, row（点击行触发）"
      },
      "value-field": {
        "default": "'id'",
        "value": "",
        "type": "string",
        "description": "设置输入框要提交数据的字段",
        "description_zh": "设置输入框要提交数据的字段"
      },
      "value-split": {
        "default": "';'",
        "value": "",
        "type": "string",
        "description": "在多选的情况下，设置输入框要提交多个数据时的分隔符",
        "description_zh": "在多选的情况下，设置输入框要提交多个数据时的分隔符"
      },
      "width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "设置弹出面板的宽度（单位像素），当组件的 multi = true 时，宽度最小为 900px，否则宽度最小为 600px",
        "description_zh": "设置弹出面板的宽度（单位像素），当组件的 multi = true 时，宽度最小为 900px，否则宽度最小为 600px"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popeditor",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popeditor",
    "typeDetail": {
      "IConditions": "interface IConditions {\n  field: string\n  label: string\n}",
      "IRemoteSearch": "type IRemoteSearch = ({ page: { currentPage: number, pageSize: number }, conditions: { [K in IConditions['field']]: string } }) => void"
    },
    "events": [
      {
        "name": "change",
        "description": "数据发生变化的事件，commitValue 为选中数据的索引（value-field 配置的字段），selectedDatas 为选中的数据项",
        "description_zh": "数据发生变化的事件，commitValue 为选中数据的索引（value-field 配置的字段），selectedDatas 为选中的数据项",
        "params": "(commitValue: number, selectedDatas: Object) => void"
      },
      {
        "name": "close",
        "description": "弹框关闭时触发的事件",
        "description_zh": "弹框关闭时触发的事件",
        "params": "() => void"
      },
      {
        "name": "page-change",
        "description": "表格模式分页切换事件，page 为分页切换页码",
        "description_zh": "表格模式分页切换事件，page 为分页切换页码",
        "params": "(page: number) => void"
      },
      {
        "name": "popup",
        "description": "弹框打开时触发的事件",
        "description_zh": "弹框打开时触发的事件",
        "params": "() => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "footer",
        "description": "底部区域插槽",
        "description_zh": "底部区域插槽"
      },
      {
        "name": "search",
        "description": "查询条件插槽",
        "description_zh": "查询条件插槽"
      }
    ],
    "filename": "PopEditor"
  },
  {
    "name": "TinyPopUpload",
    "props": {
      "accept": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "接受上传的文件类型",
        "description_zh": "接受上传的文件类型"
      },
      "action": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "必选参数，设置上传的地址",
        "description_zh": "必选参数，设置上传的地址"
      },
      "before-remove": {
        "default": "--",
        "value": "",
        "type": "(file: IFile) => void",
        "description": "删除文件之间的钩子函数，若返回 false 或者返回 Promise 且被 reject，则取消删除，反之则执行删除；入参为点击删除的文件信息",
        "description_zh": "删除文件之间的钩子函数，若返回 false 或者返回 Promise 且被 reject，则取消删除，反之则执行删除；入参为点击删除的文件信息"
      },
      "before-upload": {
        "default": "--",
        "value": "",
        "type": "(file: IFile) => void",
        "description": "上传文件之前的钩子，若返回 false 或者返回 Promise 且被 reject，则停止上传，反之则继续上传；入参为上传的文件信息",
        "description_zh": "上传文件之前的钩子，若返回 false 或者返回 Promise 且被 reject，则停止上传，反之则继续上传；入参为上传的文件信息"
      },
      "cancel-button-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置文件上传弹框中取消按钮的文本；默认为 取消",
        "description_zh": "设置文件上传弹框中取消按钮的文本；默认为 取消"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "ICustomObject",
        "description": "上传时附带的额外参数",
        "description_zh": "上传时附带的额外参数"
      },
      "dialog-title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置文件上传弹框的标题;默认为 文件上传",
        "description_zh": "设置文件上传弹框的标题;默认为 文件上传"
      },
      "disabled": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否禁用;默认为 false",
        "description_zh": "是否禁用;默认为 false"
      },
      "headers": {
        "default": "--",
        "value": "",
        "type": "ICustomObject",
        "description": "设置上传的请求头部",
        "description_zh": "设置上传的请求头部"
      },
      "http-request": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "覆盖默认的上传行为，可以自定义上传的实现",
        "description_zh": "覆盖默认的上传行为，可以自定义上传的实现"
      },
      ":limit": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "最大允许上传个数",
        "description_zh": "最大允许上传个数"
      },
      ":max-upload-file-size": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "最大上传文件大小",
        "description_zh": "最大上传文件大小"
      },
      "multiple": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否支持多选文件",
        "description_zh": "是否支持多选文件"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置组件大小",
        "description_zh": "设置组件大小"
      },
      "submit-button-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置文件上传弹框中提交按钮的文本;默认为 开始上传",
        "description_zh": "设置文件上传弹框中提交按钮的文本;默认为 开始上传"
      },
      "upload-button-text": {
        "default": "'选择文件'",
        "value": "",
        "type": "string",
        "description": "打开弹出框的按钮的文本配置属性",
        "description_zh": "打开弹出框的按钮的文本配置属性"
      },
      "upload-file-type": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "对上传文件进行校验的类型，比如 ['.png', '.jpg']",
        "description_zh": "对上传文件进行校验的类型，比如 ['.png', '.jpg']"
      },
      "upload-name": {
        "default": "'file'",
        "value": "",
        "type": "string",
        "description": "上传的文件字段名",
        "description_zh": "上传的文件字段名"
      },
      "with-credentials": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "支持发送 cookie 凭证信息",
        "description_zh": "支持发送 cookie 凭证信息"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/pop-upload",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/pop-upload",
    "typeDetail": {
      "ICustomObject": "interface ICustomObject {\n  [propName: string]: any // 自定义属性\n}"
    },
    "events": [
      {
        "name": "error",
        "description": "文件上传失败时触发的事件； file 为当前上传失败文件信息",
        "description_zh": "文件上传失败时触发的事件； file 为当前上传失败文件信息",
        "params": "(file: IFile) => void"
      },
      {
        "name": "exceed",
        "description": "文件超出个数限制时触发的事件； files 为上传的文件",
        "description_zh": "文件超出个数限制时触发的事件； files 为上传的文件",
        "params": "(files: File | File[], fileList: IFile[]) => void"
      },
      {
        "name": "progress",
        "description": "文件上传时触发的事件",
        "description_zh": "文件上传时触发的事件",
        "params": "(file: IFile) => void"
      },
      {
        "name": "remove",
        "description": "从文件列表移除文件时触发的事件； file 为当前移除的文件信息",
        "description_zh": "从文件列表移除文件时触发的事件； file 为当前移除的文件信息",
        "params": "(file: IFile, fileList: IFile[]) => void"
      },
      {
        "name": "success",
        "description": "文件上传成功时触发的事件； res 为上传成功后的响应信息事件对象，file 为当前上传的文件",
        "description_zh": "文件上传成功时触发的事件； res 为上传成功后的响应信息事件对象，file 为当前上传的文件",
        "params": "(res: ProgressEvent, file: IFile) => void"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "PopUpload"
  },
  {
    "name": "TinyRadio",
    "props": {
      "border": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示边框",
        "description_zh": "是否显示边框"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "display-only": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否只读状态",
        "description_zh": "是否只读状态"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "boolean | number | string",
        "description": "radio 选中时的值",
        "description_zh": "radio 选中时的值"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "boolean | number | string",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生 name 属性",
        "description_zh": "原生 name 属性"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | small' | 'mini'",
        "description": "radio 的尺寸，仅在 border 为真时有效",
        "description_zh": "radio 的尺寸，仅在 border 为真时有效"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "单选框文本内容",
        "description_zh": "单选框文本内容"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "typeDetail": {
      "IRadioGroupOptions": "interface IRadioGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "绑定值变化时触发的事件",
        "description_zh": "绑定值变化时触发的事件",
        "params": "(value: boolean | number | string) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "radio 的默认插槽",
        "description_zh": "radio 的默认插槽"
      }
    ],
    "filename": "Radio"
  },
  {
    "name": "TinyRadioGroup",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用单选组",
        "description_zh": "是否禁用单选组"
      },
      "display-only": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否只读状态",
        "description_zh": "是否只读状态"
      },
      "fill": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "按钮形式单选选中时的背景颜色",
        "description_zh": "按钮形式单选选中时的背景颜色"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string[] | number[]",
        "description": "单选组绑定值",
        "description_zh": "单选组绑定值"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "IRadioGroupOptions[]",
        "description": "配置式单选组设置列表",
        "description_zh": "配置式单选组设置列表"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | small' | 'mini'",
        "description": "单选组尺寸",
        "description_zh": "单选组尺寸"
      },
      "text-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "按钮形式单选激活时的文本颜色",
        "description_zh": "按钮形式单选激活时的文本颜色"
      },
      "type": {
        "default": "'radio'",
        "value": "",
        "type": "'radio' | 'button'",
        "description": "配置式单选组的展示形式",
        "description_zh": "配置式单选组的展示形式"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "垂直显示单选组",
        "description_zh": "垂直显示单选组"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "typeDetail": {
      "IRadioGroupOptions": "interface IRadioGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "绑定值变化时触发的事件",
        "description_zh": "绑定值变化时触发的事件",
        "params": "(value: number[] | string[]) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "radio-group 的默认插槽",
        "description_zh": "radio-group 的默认插槽"
      }
    ],
    "filename": "RadioGroup"
  },
  {
    "name": "TinyRadioButton",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "boolean | number | string",
        "description": "Radio 的 value",
        "description_zh": "Radio 的 value"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生name属性",
        "description_zh": "原生name属性"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "单选框文本内容",
        "description_zh": "单选框文本内容"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "typeDetail": {
      "IRadioGroupOptions": "interface IRadioGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "RadioButton"
  },
  {
    "name": "TinyRate",
    "props": {
      "allow-half": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否允许半选",
        "description_zh": "是否允许半选"
      },
      "colors": {
        "default": "['#FADB14', '#FADB14', '#FADB14']",
        "value": "",
        "type": "[string, string, string]",
        "description": "icon 的颜色数组，为 Threshold 三个分段所对应的颜色",
        "description_zh": "icon 的颜色数组，为 Threshold 三个分段所对应的颜色"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为只读",
        "description_zh": "是否为只读"
      },
      "disabled-void-color": {
        "default": "'#D9D9D9'",
        "value": "",
        "type": "string",
        "description": "禁用状态下未选中 icon 的颜色",
        "description_zh": "禁用状态下未选中 icon 的颜色"
      },
      "disabled-void-icon-class": {
        "default": "'icon-starActive'",
        "value": "",
        "type": "IRateIconName",
        "description": "只读状态下未选中的图标样式名",
        "description_zh": "只读状态下未选中的图标样式名"
      },
      ":high-threshold": {
        "default": "4",
        "value": "",
        "type": "number",
        "description": "高分和中等分数的界限值，值本身被划分在高分中",
        "description_zh": "高分和中等分数的界限值，值本身被划分在高分中"
      },
      "icon-classes": {
        "default": "['icon-starActive', 'icon-starActive', 'icon-starActive']",
        "value": "",
        "type": "[IRateIconName, IRateIconName, IRateIconName]",
        "description": "三个分段对应的图标样式名",
        "description_zh": "三个分段对应的图标样式名"
      },
      ":low-threshold": {
        "default": "2",
        "value": "",
        "type": "number",
        "description": "低分和中等分数的界限值，值本身被划分在低分中",
        "description_zh": "低分和中等分数的界限值，值本身被划分在低分中"
      },
      ":max": {
        "default": "5",
        "value": "",
        "type": "number",
        "description": "最大分值",
        "description_zh": "最大分值"
      },
      ":modelValue / v-model": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "radio": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "评分其他形态单选",
        "description_zh": "评分其他形态单选"
      },
      "score-template": {
        "default": "'{value}'",
        "value": "",
        "type": "string",
        "description": "分数显示模板，用“{value}”代表分数",
        "description_zh": "分数显示模板，用“{value}”代表分数"
      },
      "show-score": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示当前分数，show-score 和 show-text 不能同时为真",
        "description_zh": "是否显示当前分数，show-score 和 show-text 不能同时为真"
      },
      "show-text": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示辅助文字，若为真，则会从 texts 数组中选取当前分数对应的文字内容",
        "description_zh": "是否显示辅助文字，若为真，则会从 texts 数组中选取当前分数对应的文字内容"
      },
      "size": {
        "default": "'18px'",
        "value": "",
        "type": "string",
        "description": "图标字体大小",
        "description_zh": "图标字体大小"
      },
      "space": {
        "default": "'24px'",
        "value": "",
        "type": "string",
        "description": "每个图标所占宽度",
        "description_zh": "每个图标所占宽度"
      },
      "text-color": {
        "default": "'#666666'",
        "value": "",
        "type": "string",
        "description": "辅助文字的颜色",
        "description_zh": "辅助文字的颜色"
      },
      "text-on-bottom": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否在图标下显示对应的文字",
        "description_zh": "是否在图标下显示对应的文字"
      },
      "texts": {
        "default": "['很差', '差', '一般', '好', '很好']",
        "value": "",
        "type": "string[]",
        "description": "辅助文字数组，文字的数量应该与max属性一致",
        "description_zh": "辅助文字数组，文字的数量应该与max属性一致"
      },
      "void-color": {
        "default": "'#BFBFBF'",
        "value": "",
        "type": "string",
        "description": "未选中 icon 的颜色",
        "description_zh": "未选中 icon 的颜色"
      },
      "void-icon-class": {
        "default": "'icon-starDisable'",
        "value": "",
        "type": "IRateIconName",
        "description": "未选中 icon 的图标样式名",
        "description_zh": "未选中 icon 的图标样式名"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/rate",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/rate",
    "typeDetail": {
      "IRateIconName": "type IRateIconName = 'icon-starDisable' | 'icon-starActive' | 'icon-frown' | 'icon-meh' | 'icon-smile'"
    },
    "events": [
      {
        "name": "change",
        "description": "分值改变时触发",
        "description_zh": "分值改变时触发",
        "params": "(value: number) => void"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "Rate"
  },
  {
    "name": "TinyRichTextEditor",
    "props": {
      "customToolBar": {
        "default": "[]",
        "value": "",
        "type": "Array",
        "description": "传入需要展示的工具栏按钮配置，设置时，显示全量的工具栏。可配置的项目有：'bold','italic', 'underline', 'strike', 'quote', 'code', 'codeBlock', 'unorderedlist', 'orderedlist', 'taskList', 'subscript', 'superscript', 'undo', 'redo', 'left', 'center', 'right', 'h-box', 'font-size', 'line-height', 'highlight', 'color', 'backgroundColor', 'formatClear', 'link', 'unlink', 'img', 'table'",
        "description_zh": "传入需要展示的工具栏按钮配置，设置时，显示全量的工具栏。可配置的项目有：'bold','italic', 'underline', 'strike', 'quote', 'code', 'codeBlock', 'unorderedlist', 'orderedlist', 'taskList', 'subscript', 'superscript', 'undo', 'redo', 'left', 'center', 'right', 'h-box', 'font-size', 'line-height', 'highlight', 'color', 'backgroundColor', 'formatClear', 'link', 'unlink', 'img', 'table'"
      },
      "modelValue": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "默认富文本内容",
        "description_zh": "默认富文本内容"
      },
      "options": {
        "default": "{}",
        "value": "",
        "type": "Object",
        "description": "参见tiptap扩展说明，会覆盖useEditor配置项",
        "description_zh": "参见tiptap扩展说明，会覆盖useEditor配置项"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "Stirng",
        "description": "占位符，在v-model为空时展示",
        "description_zh": "占位符，在v-model为空时展示"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/rich-text-editor",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/rich-text-editor",
    "typeDetail": {},
    "events": [
      {
        "name": "beforeCreate",
        "description": "",
        "description_zh": "",
        "params": "当编辑器视图创造之前，将会触发该事件"
      },
      {
        "name": "blur",
        "description": "",
        "description_zh": "",
        "params": "当编辑器失去焦点，将会触发该事件"
      },
      {
        "name": "create",
        "description": "",
        "description_zh": "",
        "params": "当编辑器已经挂载好，将会触发该事件"
      },
      {
        "name": "destroy",
        "description": "",
        "description_zh": "",
        "params": "当编辑器编辑器销毁了，将会触发该事件"
      },
      {
        "name": "focus",
        "description": "",
        "description_zh": "",
        "params": "当编辑器获得焦点，将会触发该事件"
      },
      {
        "name": "selectionUpdate",
        "description": "",
        "description_zh": "",
        "params": "当编辑器选区改变，将会触发该事件"
      },
      {
        "name": "transaction",
        "description": "",
        "description_zh": "",
        "params": "当编辑器状态改变，将会触发该事件。"
      },
      {
        "name": "update",
        "description": "",
        "description_zh": "",
        "params": "当编辑器状态改变完成后，将会触发该事件"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "toolBar",
        "description": "toolBar添加按钮,会传出editor实例，详情见tiptap",
        "description_zh": "toolBar添加按钮,会传出editor实例，详情见tiptap"
      }
    ],
    "filename": "RichTextEditor"
  },
  {
    "name": "TinySearch",
    "props": {
      "clearable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示清空图标按钮",
        "description_zh": "是否显示清空图标按钮"
      },
      "is-enter-search": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否在按下键盘 Enter 键时触发 search 事件",
        "description_zh": "是否在按下键盘 Enter 键时触发 search 事件"
      },
      ":maxlength": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "input 框的原生属性，限制最大输入字符数【3.14.0新增】",
        "description_zh": "input 框的原生属性，限制最大输入字符数【3.14.0新增】"
      },
      "mini": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为迷你模式，配置为 true 时，默认显示为一个带图标的圆形按钮，点击后展开",
        "description_zh": "是否为迷你模式，配置为 true 时，默认显示为一个带图标的圆形按钮，点击后展开"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "搜索输入框内的提示占位文本",
        "description_zh": "搜索输入框内的提示占位文本"
      },
      "search-types": {
        "default": "[]",
        "value": "",
        "type": "ITypeValue[]",
        "description": "搜索类型的选项列表",
        "description_zh": "搜索类型的选项列表"
      },
      "transparent": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为透明模式，此模式一般用在带有背景的场景",
        "description_zh": "是否为透明模式，此模式一般用在带有背景的场景"
      },
      "type-value": {
        "default": "--",
        "value": "",
        "type": "ITypeValue",
        "description": "搜索类型的默认值。默认为搜索类型的第一项【3.11.0新增】",
        "description_zh": "搜索类型的默认值。默认为搜索类型的第一项【3.11.0新增】"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "绑定搜索值",
        "description_zh": "绑定搜索值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/search",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/search",
    "typeDetail": {
      "ITypeValue": "interface ITypeValue {\n  text: string\n  value: number\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "输入完成时触发的回调函数； value 为搜索类型，input 为当前输入值",
        "description_zh": "输入完成时触发的回调函数； value 为搜索类型，input 为当前输入值",
        "params": "(value: ITypeValue, input: string) => void"
      },
      {
        "name": "clear",
        "description": "清空值触发的回调函数",
        "description_zh": "清空值触发的回调函数",
        "params": "() => void"
      },
      {
        "name": "input",
        "description": "输入实时触发的回调函数； input 为当前输入值，value 为搜索类型【3.9.1新增】",
        "description_zh": "输入实时触发的回调函数； input 为当前输入值，value 为搜索类型【3.9.1新增】",
        "params": "(input: string, value: ITypeValue) => void"
      },
      {
        "name": "search",
        "description": "展开模式下，点击搜索按钮时触发的回调函数； value 为搜索类型，input 为当前输入值",
        "description_zh": "展开模式下，点击搜索按钮时触发的回调函数； value 为搜索类型，input 为当前输入值",
        "params": "(value: ITypeValue, input: string) => void"
      },
      {
        "name": "select",
        "description": "切换类型时触发的回调函数； value 为搜索类型",
        "description_zh": "切换类型时触发的回调函数； value 为搜索类型",
        "params": "(value: ITypeValue) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "poplist",
        "description": "搜索的弹出列表插槽",
        "description_zh": "搜索的弹出列表插槽"
      },
      {
        "name": "prefix",
        "description": "左侧插槽",
        "description_zh": "左侧插槽"
      },
      {
        "name": "text",
        "description": "默认搜索类型插槽",
        "description_zh": "默认搜索类型插槽"
      }
    ],
    "filename": "Search"
  },
  {
    "name": "TinySelect",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "选项是否禁用",
        "description_zh": "选项是否禁用"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "自定义选项的图标",
        "description_zh": "自定义选项的图标"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "选项的显示文本",
        "description_zh": "选项的显示文本"
      },
      "required": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "选项是否必选",
        "description_zh": "选项是否必选"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "选项的值",
        "description_zh": "选项的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/select",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/select",
    "typeDetail": {
      "IOption": "interface IOption {\n  value?: string | number\n  label?: string\n  disabled?: boolean\n  icon?: Component\n  required?:boolean\n}",
      "ICacheOp": "interface ICacheItem {\n  frequency: number\n  key: string\n  time: number\n}\n\ninterface ICacheOp {\n  key: string // 本地缓存的唯一 key 值\n  sortBy?: 'frequency' | 'time' // 排序的字段，默认 frequency (频次)\n  sort?: 'desc' | 'asc' // 排序方式，默认 desc (降序)\n  dataKey?: string // 数据中的唯一标识的 key 名称,默认 value\n  highlightClass?: string // 个性化高亮 class 名称，默认：memorize-highlight\n  highlightNum?: number // 高亮个性化的条数,默认：Infinity\n  cacheNum?: number // 存储个性化的条数,默认：Infinity\n  serialize?: ()=> string  // 本地存储序列化方法,默认：JSON.stringify\n  deserialize?: ()=> ICacheItem[] // 本地存储序反列化方法，默认：JSON.parse\n}",
      "IGridOption": "interface IGridOption {\n  data: any[]    // 表格数据，用法同 Grid\n  columns: any[] // 列配置，用法同 Grid\n}",
      "ITreeOption": "interface ITreeNode {\n  label: string         // 默认树节点的文本字段\n  id: number|string     // 树节点唯一标识\n  children: ITreeNode[] // 子节点\n}\n\ninterface ITreeOption {\n  data: ITreeNode[] // 树数据，用法同 Tree\n}",
      "IPlacement": "type IPlacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [
      {
        "name": "blur",
        "description": "监听输入框失去焦点事件",
        "description_zh": "监听输入框失去焦点事件",
        "params": "(event:MouseEvent) => void"
      },
      {
        "name": "change",
        "description": "监听绑定值变更事件",
        "description_zh": "监听绑定值变更事件",
        "params": "(value:string|number|Array, list:Array) => void"
      },
      {
        "name": "clear",
        "description": "监听一键清除事件",
        "description_zh": "监听一键清除事件",
        "params": "() => void"
      },
      {
        "name": "focus",
        "description": "监听输入框获取焦点事件",
        "description_zh": "监听输入框获取焦点事件",
        "params": "(event:MouseEvent) => void"
      },
      {
        "name": "remove-tag",
        "description": "监听多选时移除标签事件",
        "description_zh": "监听多选时移除标签事件",
        "params": "(tag:string|number) => void"
      },
      {
        "name": "top-create-click",
        "description": "监听顶部新增按钮点击事件，同 top-create 属性一起使用",
        "description_zh": "监听顶部新增按钮点击事件，同 top-create 属性一起使用",
        "params": "() => void"
      },
      {
        "name": "visible-change",
        "description": "监听下拉弹框的显示隐藏状态",
        "description_zh": "监听下拉弹框的显示隐藏状态",
        "params": "(status:boolean) => void"
      }
    ],
    "methods": [
      {
        "name": "blur",
        "description": "使输入框失去焦点",
        "params": "() => void",
        "description_zh": "使输入框失去焦点"
      },
      {
        "name": "focus",
        "description": "使输入框获取焦点",
        "params": "() => void",
        "description_zh": "使输入框获取焦点"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "选项默认插槽",
        "description_zh": "选项默认插槽"
      },
      {
        "name": "empty",
        "description": "空数据插槽",
        "description_zh": "空数据插槽"
      },
      {
        "name": "footer",
        "description": "下拉弹框底部插槽",
        "description_zh": "下拉弹框底部插槽"
      },
      {
        "name": "prefix",
        "description": "输入框前缀插槽",
        "description_zh": "输入框前缀插槽"
      },
      {
        "name": "reference",
        "description": "触发源插槽",
        "description_zh": "触发源插槽"
      }
    ],
    "filename": "Select"
  },
  {
    "name": "TinySlider",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "format-tooltip": {
        "default": "--",
        "value": "",
        "type": "(currentValue: number) => string",
        "description": "格式化 tooltip 提示",
        "description_zh": "格式化 tooltip 提示"
      },
      "height": {
        "default": "'300px'",
        "value": "",
        "type": "string",
        "description": "Slider 组件的高度，当 vertical 为 true 时有效",
        "description_zh": "Slider 组件的高度，当 vertical 为 true 时有效"
      },
      "marks": {
        "default": "--",
        "value": "",
        "type": "{ [key:number]: string }",
        "description": "设置滑杆的刻度值",
        "description_zh": "设置滑杆的刻度值"
      },
      ":max": {
        "default": "100",
        "value": "",
        "type": "number",
        "description": "设置最大值，必需是整数，可以负数，必需大于所设置的最小值",
        "description_zh": "设置最大值，必需是整数，可以负数，必需大于所设置的最小值"
      },
      ":min": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "设置最小值",
        "description_zh": "设置最小值"
      },
      ":num-pages": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "设置总步数，即按快捷键 PageDown/PageUp 时，每次移动的距离是 \"⌈(max-min)/num-pages⌉\"",
        "description_zh": "设置总步数，即按快捷键 PageDown/PageUp 时，每次移动的距离是 \"⌈(max-min)/num-pages⌉\""
      },
      "show-input": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示输入框",
        "description_zh": "是否显示输入框"
      },
      "show-tip": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示 tooltip",
        "description_zh": "是否显示 tooltip"
      },
      ":step": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "设置滑块移动时，每步位移距离，必需是大于0的正整数",
        "description_zh": "设置滑块移动时，每步位移距离，必需是大于0的正整数"
      },
      "unit": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "输入框后面显示的单位，仅在输入框模式下有效",
        "description_zh": "输入框后面显示的单位，仅在输入框模式下有效"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "number | [number, number]",
        "description": "设置单滑块的当前值，必需是整数或数组",
        "description_zh": "设置单滑块的当前值，必需是整数或数组"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否竖向模式",
        "description_zh": "是否竖向模式"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/slider",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/slider",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "值改变时触发（使用鼠标拖曳时，只在松开鼠标后触发）",
        "description_zh": "值改变时触发（使用鼠标拖曳时，只在松开鼠标后触发）",
        "params": "(value: number | [number, number]) => void"
      },
      {
        "name": "start",
        "description": "设置滑块滑动开始时，触发该事件",
        "description_zh": "设置滑块滑动开始时，触发该事件",
        "params": "(event: Event, value: number | [number, number]) => void"
      },
      {
        "name": "stop",
        "description": "设置滑块滑动结束时，触发该事件",
        "description_zh": "设置滑块滑动结束时，触发该事件",
        "params": "(value: number | [number, number]) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "显示滑块值的插槽，仅仅 v-model 是单数值时才有效，插槽参数为：slotArg: { slotScope: number }",
        "description_zh": "显示滑块值的插槽，仅仅 v-model 是单数值时才有效，插槽参数为：slotArg: { slotScope: number }"
      }
    ],
    "filename": "Slider"
  },
  {
    "name": "TinySwitch",
    "props": {
      "before-change": {
        "default": "--",
        "value": "",
        "type": "(done: () => void) => void",
        "description": "开关值变化前置处理",
        "description_zh": "开关值变化前置处理"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "false-value": {
        "default": "false",
        "value": "",
        "type": "boolean | string | number",
        "description": "switch 关闭时的值",
        "description_zh": "switch 关闭时的值"
      },
      "mini": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置是否显示为 mini 模式，mini 模式下不会显示 slot 的内容",
        "description_zh": "设置是否显示为 mini 模式，mini 模式下不会显示 slot 的内容"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "boolean | string | number",
        "description": "开关绑定值",
        "description_zh": "开关绑定值"
      },
      "show-text": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "switch 是否显示内容里面的文字",
        "description_zh": "switch 是否显示内容里面的文字"
      },
      "true-value": {
        "default": "true",
        "value": "",
        "type": "boolean | string | number",
        "description": "switch 打开时的值",
        "description_zh": "switch 打开时的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/switch",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/switch",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "switch 状态发生变化时的回调函数",
        "description_zh": "switch 状态发生变化时的回调函数",
        "params": "(value: boolean | string | number) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "close",
        "description": "关闭内容，当 show-text 为 true 时有效",
        "description_zh": "关闭内容，当 show-text 为 true 时有效"
      },
      {
        "name": "open",
        "description": "开启内容，当 show-text 为 true 时有效",
        "description_zh": "开启内容，当 show-text 为 true 时有效"
      }
    ],
    "filename": "Switch"
  },
  {
    "name": "TinyTimePicker",
    "props": {
      "arrow-control": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否使用箭头进行时间选择",
        "description_zh": "是否使用箭头进行时间选择"
      },
      "clear-icon": {
        "default": "IconOperationfaild",
        "value": "",
        "type": "Component",
        "description": "自定义清空图标",
        "description_zh": "自定义清空图标"
      },
      "clearable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示清除按钮",
        "description_zh": "是否显示清除按钮"
      },
      "default-value": {
        "default": "--",
        "value": "",
        "type": "Date | string | number | Array",
        "description": "当选中的日期值为空时，选择器面板打开时默认显示的时间，需设置为可被 new Date() 解析的值",
        "description_zh": "当选中的日期值为空时，选择器面板打开时默认显示的时间，需设置为可被 new Date() 解析的值"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "禁用",
        "description_zh": "禁用"
      },
      "editable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "文本框可输入",
        "description_zh": "文本框可输入"
      },
      "end-placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "范围选择时结束日期的占位内容",
        "description_zh": "范围选择时结束日期的占位内容"
      },
      "is-range": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为时间范围选择",
        "description_zh": "是否为时间范围选择"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "Date | string | number | Array",
        "description": "日期选择器选中的日期值，可设置选择器的初始值",
        "description_zh": "日期选择器选中的日期值，可设置选择器的初始值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生 input name 属性",
        "description_zh": "原生 input name 属性"
      },
      "picker-options": {
        "default": "--",
        "value": "",
        "type": "IPickerOptions",
        "description": "配置可选的时间范围、下拉框中显示的格式",
        "description_zh": "配置可选的时间范围、下拉框中显示的格式"
      },
      "placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "非范围选择时的占位内容",
        "description_zh": "非范围选择时的占位内容"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否将弹出框插入至 body 元素，在弹出框的定位出现问题时，可将该属性设置为 false",
        "description_zh": "是否将弹出框插入至 body 元素，在弹出框的定位出现问题时，可将该属性设置为 false"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "TimePicker 下拉框的 class 类名",
        "description_zh": "TimePicker 下拉框的 class 类名"
      },
      "range-separator": {
        "default": "'-'",
        "value": "",
        "type": "string",
        "description": "选择范围时的分隔符",
        "description_zh": "选择范围时的分隔符"
      },
      "size": {
        "default": "''",
        "value": "",
        "type": "'medium' | 'small' | '' | 'mini'",
        "description": "输入框尺寸",
        "description_zh": "输入框尺寸"
      },
      "start-placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "范围选择时开始日期的占位内容",
        "description_zh": "范围选择时开始日期的占位内容"
      },
      "step": {
        "default": "--",
        "value": "",
        "type": "IStep",
        "description": "自定义时分秒步长",
        "description_zh": "自定义时分秒步长"
      },
      ":suffix-icon": {
        "default": "IconCalendar",
        "value": "",
        "type": "object",
        "description": "自定义头部图标的类名",
        "description_zh": "自定义头部图标的类名"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-picker",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-picker",
    "typeDetail": {
      "IStep": "interface IStep {\n  hour: number\n  minute: number\n  second: number\n}",
      "IPickerOptions": "interface IPickerOptions {\n  // 可选的时间范围\n  selectableRange: string\n  // 下拉框中显示的格式\n  format: string\n}"
    },
    "events": [
      {
        "name": "blur",
        "description": "当 input 失去焦点时触发",
        "description_zh": "当 input 失去焦点时触发",
        "params": "() => void"
      },
      {
        "name": "change",
        "description": "用户确认选定的值时触发",
        "description_zh": "用户确认选定的值时触发",
        "params": "(date: Date | Date[]) => void"
      },
      {
        "name": "focus",
        "description": "当 input 获得焦点时触发",
        "description_zh": "当 input 获得焦点时触发",
        "params": "() => void"
      }
    ],
    "methods": [
      {
        "name": "focus",
        "description": "使 input 获取焦点",
        "params": "() => void",
        "description_zh": "使 input 获取焦点"
      }
    ],
    "slots": [],
    "filename": "TimePicker"
  },
  {
    "name": "TinyTimeSelect",
    "props": {
      "clear-icon": {
        "default": "IconOperationfaild",
        "value": "",
        "type": "string",
        "description": "自定义清空图标",
        "description_zh": "自定义清空图标"
      },
      "clearable": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "清除按钮是否显示",
        "description_zh": "清除按钮是否显示"
      },
      "default-value": {
        "default": "--",
        "value": "",
        "type": "Date",
        "description": "可选，当选中的日期值为空时，选择器面板打开时默认显示的时间，需设置为可被new Date()解析的值",
        "description_zh": "可选，当选中的日期值为空时，选择器面板打开时默认显示的时间，需设置为可被new Date()解析的值"
      },
      "disabled": {
        "default": " false",
        "value": "",
        "type": "boolean",
        "description": "时间选择器是否禁用",
        "description_zh": "时间选择器是否禁用"
      },
      "editable": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "文本框是否可手动输入",
        "description_zh": "文本框是否可手动输入"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "date(DatePicker) / array(DateRangePicker)",
        "description": "日期选择器选中的日期值，可设置选择器的初始值",
        "description_zh": "日期选择器选中的日期值，可设置选择器的初始值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生属性",
        "description_zh": "原生属性"
      },
      ":picker-options": {
        "default": "{}",
        "value": "",
        "type": "object",
        "description": "当前时间日期选择器特有的选项参考下表",
        "description_zh": "当前时间日期选择器特有的选项参考下表"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "输入框的提示占位内容",
        "description_zh": "输入框的提示占位内容"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false",
        "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "TimePicker 下拉框的 class 类名",
        "description_zh": "TimePicker 下拉框的 class 类名"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "输入框尺寸;该属性的可选值为 medium、small、mini",
        "description_zh": "输入框尺寸;该属性的可选值为 medium、small、mini"
      },
      "suffix-icon": {
        "default": "IconCalendar",
        "value": "",
        "type": "string",
        "description": "自定义头部图标",
        "description_zh": "自定义头部图标"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-select",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-select",
    "typeDetail": {},
    "events": [
      {
        "name": "blur",
        "description": "当 input 失去焦点时触发",
        "description_zh": "当 input 失去焦点时触发",
        "params": "( ) => void"
      },
      {
        "name": "change",
        "description": "当 input 绑定的值发生改变时触发",
        "description_zh": "当 input 绑定的值发生改变时触发",
        "params": "(value: string) => void"
      },
      {
        "name": "focus",
        "description": "当 input 获得焦点时触发",
        "description_zh": "当 input 获得焦点时触发",
        "params": "( ) => void"
      }
    ],
    "methods": [
      {
        "name": "focus",
        "description": "使 input 获取焦点",
        "params": "( ) => void",
        "description_zh": "使 input 获取焦点"
      }
    ],
    "slots": [],
    "filename": "TimeSelect"
  },
  {
    "name": "TinyTransfer",
    "props": {
      "button-texts": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "通过传入一个2值的字符串数组，自定义左右穿梭按钮的文案",
        "description_zh": "通过传入一个2值的字符串数组，自定义左右穿梭按钮的文案"
      },
      "columns": {
        "default": "--",
        "value": "",
        "type": "IColumnConfig",
        "description": "在渲染类型为 table 时，设置穿梭框表格的列配置",
        "description_zh": "在渲染类型为 table 时，设置穿梭框表格的列配置"
      },
      "data": {
        "default": "[]",
        "value": "",
        "type": "ITransferData[]",
        "description": "左右列表的全量数据源",
        "description_zh": "左右列表的全量数据源"
      },
      "drop-config": {
        "default": "--",
        "value": "",
        "type": "IDropConfig",
        "description": "设置穿梭框列表项可拖拽的参数，参见sortablejs插件",
        "description_zh": "设置穿梭框列表项可拖拽的参数，参见sortablejs插件"
      },
      "filter-method": {
        "default": "--",
        "value": "",
        "type": "(query:string, item:object) => boolean",
        "description": "\n              设置穿梭框的搜索过滤函数，仅在默认列表和嵌套表时有效\n              嵌套树时，请使用treeConfig进行搜索配置\n            ",
        "description_zh": "\n              设置穿梭框的搜索过滤函数，仅在默认列表和嵌套表时有效\n              嵌套树时，请使用treeConfig进行搜索配置\n            "
      },
      "filter-placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "启用搜索时，搜索框占位文本",
        "description_zh": "启用搜索时，搜索框占位文本"
      },
      "filterable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否启用搜索的功能",
        "description_zh": "是否启用搜索的功能"
      },
      ":format": {
        "default": "{    noChecked:'${checked}/${total}',    hasChecked: '${checked}/${total}' }",
        "value": "",
        "type": "object",
        "description": "列表顶部勾选状态文案",
        "description_zh": "列表顶部勾选状态文案"
      },
      "left-columns": {
        "default": "--",
        "value": "",
        "type": "IColumnConfig",
        "description": "在渲染类型为 table 时，左边表格的列配置,优先级高于 columns",
        "description_zh": "在渲染类型为 table 时，左边表格的列配置,优先级高于 columns"
      },
      "left-default-checked": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "默认左侧列表的已勾选项的 key 数组",
        "description_zh": "默认左侧列表的已勾选项的 key 数组"
      },
      "pager-op": {
        "default": "{ mode: 'fixed',pageVO: {currentPage: 1,pageSize: 10}",
        "value": "",
        "type": "IPagerOp",
        "description": "在渲染类型为 table 时，设置表格的分页配置",
        "description_zh": "在渲染类型为 table 时，设置表格的分页配置"
      },
      "props": {
        "default": "--",
        "value": "",
        "type": "{key:string, label:string, disabled:string}",
        "description": "数据源的字段别名映射配置",
        "description_zh": "数据源的字段别名映射配置"
      },
      "render": {
        "default": "--",
        "value": "",
        "type": "Table | Tree",
        "description": "设置左右区域的渲染类型,Table 和 Tree 对象需要从组件包中引入相应的组件变量。该属性值的plugin设置为Table时设置渲染为表格;该属性值的 plugin 设置为Tree渲染为树",
        "description_zh": "设置左右区域的渲染类型,Table 和 Tree 对象需要从组件包中引入相应的组件变量。该属性值的plugin设置为Table时设置渲染为表格;该属性值的 plugin 设置为Tree渲染为树"
      },
      "render-content": {
        "default": "--",
        "value": "",
        "type": "(h: Vue.h, item: any) => vnode",
        "description": "数据项的自定义渲染函数",
        "description_zh": "数据项的自定义渲染函数"
      },
      "right-columns": {
        "default": "--",
        "value": "",
        "type": "IColumnConfig",
        "description": "在渲染类型为 table 时，右边表格的列配置,优先级高于 columns",
        "description_zh": "在渲染类型为 table 时，右边表格的列配置,优先级高于 columns"
      },
      "right-default-checked": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "默认右侧列表的已勾选项的 key 数组",
        "description_zh": "默认右侧列表的已勾选项的 key 数组"
      },
      "show-all-btn": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示全部移动按钮",
        "description_zh": "是否显示全部移动按钮"
      },
      "show-pager": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "在渲染类型为 table 时，设置表格是否显示分页",
        "description_zh": "在渲染类型为 table 时，设置表格是否显示分页"
      },
      "target-order": {
        "default": "\"original\"",
        "value": "",
        "type": "\"original\" / \"push\" / \"unshift\"",
        "description": " 右侧列表元素的插入排序策略\n                  若为 original，则保持与数据源相同的顺序 \n                  若为 push，则新加入的元素排在最后 \n                  若为 unshift，则新加入的元素排在最前。",
        "description_zh": " 右侧列表元素的插入排序策略\n                  若为 original，则保持与数据源相同的顺序 \n                  若为 push，则新加入的元素排在最后 \n                  若为 unshift，则新加入的元素排在最前。"
      },
      "titles": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "自定义列表的标题；不设置titles时，左右列表的标题默认显示为：  列表 1， 列表 2",
        "description_zh": "自定义列表的标题；不设置titles时，左右列表的标题默认显示为：  列表 1， 列表 2"
      },
      "to-left-disable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "组件初始化状态下未选中时，默认按钮显示禁用状态",
        "description_zh": "组件初始化状态下未选中时，默认按钮显示禁用状态"
      },
      "to-right-disable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "组件初始化状态下未选中时，默认按钮显示禁用状态",
        "description_zh": "组件初始化状态下未选中时，默认按钮显示禁用状态"
      },
      "tree-op": {
        "default": "--",
        "value": "",
        "type": "Tree props",
        "description": "在渲染类型为 tree 时，设置树的相关配置属性",
        "description_zh": "在渲染类型为 tree 时，设置树的相关配置属性"
      },
      "v-model / modelValue": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "移动到右列表的数据项的key的数组值",
        "description_zh": "移动到右列表的数据项的key的数组值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/transfer",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/transfer",
    "typeDetail": {
      "ITransferData": "interface ITransferData {\n  key: string,\n  label: string,\n  disabled: string,\n  [other:string]: any\n}",
      "IDropConfig": "interface IDropConfig {\n  plugin: object // 指定拖放排序的插件Sortable, 该变量通过 import Sortable from 'sortablejs' 导入\n}",
      "IPagerOp": "interface IPagerOp {\n  mode: string  // 通过 mode 设置分页组件组件渲染模式，不同模式是组件内置的 layout 设置， mode 优先级高于 layout\n  pagerCount:number  // 总页数\n  pageVo:{\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    layout: string   // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "右侧列表元素变化时触发的事件;                value: 穿梭框右侧数据值列表                move: 数据移动方向，是left或者right                keyArray: 被移动的数据值列表",
        "description_zh": "右侧列表元素变化时触发的事件;                value: 穿梭框右侧数据值列表                move: 数据移动方向，是left或者right                keyArray: 被移动的数据值列表",
        "params": "(value:string[], move:string, keyArray:string[])=>void"
      },
      {
        "name": "left-check-change",
        "description": "左侧列表元素选择时触发的事件;              checked: 穿梭框左侧被选中的数据值列表              statusChanged: 穿梭框左侧选中状态发生变化的数据值列表",
        "description_zh": "左侧列表元素选择时触发的事件;              checked: 穿梭框左侧被选中的数据值列表              statusChanged: 穿梭框左侧选中状态发生变化的数据值列表",
        "params": "(checked:string[], statusChanged:string[]) => void"
      },
      {
        "name": "right-check-change",
        "description": "右侧列表元素选择时触发的事件;              checked: 穿梭框右侧被选中的数据值列表              statusChanged: 穿梭框右侧选中状态发生变化的数据值列表",
        "description_zh": "右侧列表元素选择时触发的事件;              checked: 穿梭框右侧被选中的数据值列表              statusChanged: 穿梭框右侧选中状态发生变化的数据值列表",
        "params": "(checked:string[], statusChanged:string[]) => void"
      }
    ],
    "methods": [
      {
        "name": "clearQuery",
        "description": "开启过滤功能时，清空左右面板的搜索关键词",
        "params": "(name: string) => void",
        "description_zh": "开启过滤功能时，清空左右面板的搜索关键词"
      }
    ],
    "slots": [
      {
        "name": "button-panel",
        "description": "穿梭按钮插槽",
        "description_zh": "穿梭按钮插槽"
      },
      {
        "name": "default",
        "description": "数据项的内容插槽，插槽数据上下文为： { option }",
        "description_zh": "数据项的内容插槽，插槽数据上下文为： { option }"
      },
      {
        "name": "left-footer",
        "description": "左侧列表底部的内容插槽",
        "description_zh": "左侧列表底部的内容插槽"
      },
      {
        "name": "left-panel",
        "description": "左侧自定义内容插槽",
        "description_zh": "左侧自定义内容插槽"
      },
      {
        "name": "right-footer",
        "description": "右侧列表底部的内容插槽",
        "description_zh": "右侧列表底部的内容插槽"
      },
      {
        "name": "right-panel",
        "description": "右侧自定义内容插槽",
        "description_zh": "右侧自定义内容插槽"
      }
    ],
    "filename": "Transfer"
  },
  {
    "name": "TinyGrid",
    "props": {
      "align": {
        "default": "'left'",
        "value": "",
        "type": "'left' | 'center' | 'right'",
        "description": "所有表格列的对齐方式",
        "description_zh": "所有表格列的对齐方式"
      },
      "auto-load": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否开启自动请求服务，配置 fetch-data 时有效",
        "description_zh": "是否开启自动请求服务，配置 fetch-data 时有效"
      },
      "auto-resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "父元素响应式监听（对于父元素可能存在动态变化的场景可能会用到）",
        "description_zh": "父元素响应式监听（对于父元素可能存在动态变化的场景可能会用到）"
      },
      "border": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否带有纵向边框",
        "description_zh": "是否带有纵向边框"
      },
      "cell-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "给单元格附加 className，也可以是函数",
        "description_zh": "给单元格附加 className，也可以是函数"
      },
      "column-key": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否需要为每一列的 VNode 设置 key 属性（非特殊情况下不需要使用）",
        "description_zh": "是否需要为每一列的 VNode 设置 key 属性（非特殊情况下不需要使用）"
      },
      "column-min-width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "设置可以调整到的最小宽度，不设置时默认为列头 span 的宽度 + 36（头部固定宽度） ；所有最小列宽度；会自动将剩余空间按比例分配；该属性的可选值为 整数, px，%",
        "description_zh": "设置可以调整到的最小宽度，不设置时默认为列头 span 的宽度 + 36（头部固定宽度） ；所有最小列宽度；会自动将剩余空间按比例分配；该属性的可选值为 整数, px，%"
      },
      "column-width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "所有列宽度；该属性的可选值为 整数, px，%",
        "description_zh": "所有列宽度；该属性的可选值为 整数, px，%"
      },
      "columns": {
        "default": "--",
        "value": "",
        "type": "IColumnConfig[]",
        "description": "表格列的配置信息，具体参考列配置项",
        "description_zh": "表格列的配置信息，具体参考列配置项"
      },
      "context-menu": {
        "default": "--",
        "value": "",
        "type": "IContextMenuConfig",
        "description": "快捷菜单配置项",
        "description_zh": "快捷菜单配置项"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "Row[]",
        "description": "设置表格的数据",
        "description_zh": "设置表格的数据"
      },
      "delete-data": {
        "default": "--",
        "value": "",
        "type": "IDataHandler",
        "description": "服务端数据删除方法",
        "description_zh": "服务端数据删除方法"
      },
      "drop-config": {
        "default": "--",
        "value": "",
        "type": "IDropConfig",
        "description": "表格拖拽配置项",
        "description_zh": "表格拖拽配置项"
      },
      "edit-config": {
        "default": "--",
        "value": "",
        "type": "IEditConfig",
        "description": "表格编辑配置项",
        "description_zh": "表格编辑配置项"
      },
      "edit-rules": {
        "default": "--",
        "value": "",
        "type": "IValidRules",
        "description": "校验规则配置项",
        "description_zh": "校验规则配置项"
      },
      "events": {
        "default": "--",
        "value": "",
        "type": "IEventsConfig",
        "description": "事件对象",
        "description_zh": "事件对象"
      },
      "expand-config": {
        "default": "--",
        "value": "",
        "type": "IExpandConfig",
        "description": "展开行配置项",
        "description_zh": "展开行配置项"
      },
      "fetch-data": {
        "default": "--",
        "value": "",
        "type": "IDataHandler",
        "description": "服务端数据查询方法",
        "description_zh": "服务端数据查询方法"
      },
      "fit": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "所有列的宽度是否自撑开",
        "description_zh": "所有列的宽度是否自撑开"
      },
      "footer-align": {
        "default": "'left'",
        "value": "",
        "type": "'left' | 'center' | 'right'",
        "description": "所有的表尾列的对齐方式",
        "description_zh": "所有的表尾列的对齐方式"
      },
      "footer-cell-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "给表尾的单元格附加 className，也可以是函数",
        "description_zh": "给表尾的单元格附加 className，也可以是函数"
      },
      "footer-method": {
        "default": "--",
        "value": "",
        "type": "({columns: IColumnConfig[], data: IRow[]}) => string[][]",
        "description": "表尾合计的计算方法 columns:所有的列配置数据, data： 当前所有的表格数据",
        "description_zh": "表尾合计的计算方法 columns:所有的列配置数据, data： 当前所有的表格数据"
      },
      "footer-row-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "给表尾的行附加 className",
        "description_zh": "给表尾的行附加 className"
      },
      "footer-span-method": {
        "default": "--",
        "value": "",
        "type": "(args: ISpanMethodArgs) => { rowspan: number, colspan: number }",
        "description": "表尾合并行或列，该函数返回计算后的值；通过 footer-method 和 footer-span-method 设置表尾合计行或列逻辑 必须配置 show-footer",
        "description_zh": "表尾合并行或列，该函数返回计算后的值；通过 footer-method 和 footer-span-method 设置表尾合计行或列逻辑 必须配置 show-footer"
      },
      "header-align": {
        "default": "'left'",
        "value": "",
        "type": "'left' | 'center' | 'right'",
        "description": "所有的表头列的对齐方式",
        "description_zh": "所有的表头列的对齐方式"
      },
      "header-cell-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "给表头的单元格附加 className，也可以是函数",
        "description_zh": "给表头的单元格附加 className，也可以是函数"
      },
      "header-row-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "表头的行附加 className，也可以是函数",
        "description_zh": "表头的行附加 className，也可以是函数"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "设置表格内容区域（不含表格头部，底部）的高度。 不设置时，表格内容区域的高度度自适应；表格的高度；支持铺满父容器或者固定宽高；该属性的可选值为 整数, px，%",
        "description_zh": "设置表格内容区域（不含表格头部，底部）的高度。 不设置时，表格内容区域的高度度自适应；表格的高度；支持铺满父容器或者固定宽高；该属性的可选值为 整数, px，%"
      },
      "highlight-cell": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "只对 editConfig 配置时有效，是否在编辑时高亮单元格边框",
        "description_zh": "只对 editConfig 配置时有效，是否在编辑时高亮单元格边框"
      },
      "highlight-current-column": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否要高亮当前列",
        "description_zh": "是否要高亮当前列"
      },
      "highlight-current-row": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否要高亮当前行",
        "description_zh": "是否要高亮当前行"
      },
      "highlight-hover-column": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "鼠标移到列是否要高亮显示",
        "description_zh": "鼠标移到列是否要高亮显示"
      },
      "highlight-hover-row": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "鼠标移到行是否要高亮显示",
        "description_zh": "鼠标移到行是否要高亮显示"
      },
      "is-async-column": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置表格的列是否延迟加载；是否开启异步列功能，配合 scrollLoad 一起使用",
        "description_zh": "设置表格的列是否延迟加载；是否开启异步列功能，配合 scrollLoad 一起使用"
      },
      "is-before-page-change": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否打开页面改变时的前置处理特性。在值为 true 时，翻页操作或者改变页大小操作不会立即生效，留给用户处理业务逻辑，之后通过调用预留的 callback 或者 rollback 使之生效或者失效，详看事件 before-page-change ",
        "description_zh": "是否打开页面改变时的前置处理特性。在值为 true 时，翻页操作或者改变页大小操作不会立即生效，留给用户处理业务逻辑，之后通过调用预留的 callback 或者 rollback 使之生效或者失效，详看事件 before-page-change "
      },
      "keyboard-config": {
        "default": "--",
        "value": "",
        "type": "IKeyboardConfig",
        "description": "按键配置项",
        "description_zh": "按键配置项"
      },
      "loading": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "表格是否显示加载中",
        "description_zh": "表格是否显示加载中"
      },
      "loading-component": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "自定义表格 loading ",
        "description_zh": "自定义表格 loading "
      },
      "max-height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "设置表格内容区域（不含表格头部，底部）的最大高度；该属性的可选值为：整数, px，%",
        "description_zh": "设置表格内容区域（不含表格头部，底部）的最大高度；该属性的可选值为：整数, px，%"
      },
      "min-height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "设置表格内容区域（不含表格头部，底部）的最小高度",
        "description_zh": "设置表格内容区域（不含表格头部，底部）的最小高度"
      },
      "mouse-config": {
        "default": "--",
        "value": "",
        "type": "IMouseConfig",
        "description": "鼠标配置项",
        "description_zh": "鼠标配置项"
      },
      "optimization": {
        "default": "--",
        "value": "",
        "type": "IOptimizationConfig",
        "description": "表格虚拟滚动的优化配置项",
        "description_zh": "表格虚拟滚动的优化配置项"
      },
      "pager": {
        "default": "--",
        "value": "",
        "type": "IPagerConfig",
        "description": "分页配置项",
        "description_zh": "分页配置项"
      },
      "radio-config": {
        "default": "--",
        "value": "",
        "type": "IRadioConfig",
        "description": "单选框配置项",
        "description_zh": "单选框配置项"
      },
      "remote-filter": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "所有列是否使用服务端筛选，如果设置为 true 则不会对数据进行处理",
        "description_zh": "所有列是否使用服务端筛选，如果设置为 true 则不会对数据进行处理"
      },
      "remote-sort": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否将服务端的全部数据进行排序。默认为 false 不进行服务端排序",
        "description_zh": "是否将服务端的全部数据进行排序。默认为 false 不进行服务端排序"
      },
      "render-empty": {
        "default": "--",
        "value": "",
        "type": "()=> string | VNode",
        "description": "空数据渲染",
        "description_zh": "空数据渲染"
      },
      "resizable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置是否允许调整列宽",
        "description_zh": "设置是否允许调整列宽"
      },
      "row-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "自定义表格行类名，用于自定义表格的行样式的场景。可以直接设置字符串类名，也可以是用函数",
        "description_zh": "自定义表格行类名，用于自定义表格的行样式的场景。可以直接设置字符串类名，也可以是用函数"
      },
      "row-group": {
        "default": "--",
        "value": "",
        "type": "IRowGroup",
        "description": "row-group 属性可以配置行分组，行分组会将具有相同值的列进行分组展示",
        "description_zh": "row-group 属性可以配置行分组，行分组会将具有相同值的列进行分组展示"
      },
      "row-id": {
        "default": "'_RID'",
        "value": "",
        "type": "string",
        "description": "自定义行数据唯一主键的字段名（行数据必须要有唯一主键，默认自动生成）",
        "description_zh": "自定义行数据唯一主键的字段名（行数据必须要有唯一主键，默认自动生成）"
      },
      "row-span": {
        "default": "--",
        "value": "",
        "type": "{ field: string }[]",
        "description": "设置行合并,该属性仅适用于普通表格，不可与 tree-config 同时使用",
        "description_zh": "设置行合并,该属性仅适用于普通表格，不可与 tree-config 同时使用"
      },
      "save-data": {
        "default": "--",
        "value": "",
        "type": "IDataHandler",
        "description": "服务端数据保存方法",
        "description_zh": "服务端数据保存方法"
      },
      "select-config": {
        "default": "--",
        "value": "",
        "type": "ISelectConfig",
        "description": "复选框配置项",
        "description_zh": "复选框配置项"
      },
      "seq-serial": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置行序号是否连续，开启分页时有效, seqSerial 当 showSeq 为 true 时有效",
        "description_zh": "设置行序号是否连续，开启分页时有效, seqSerial 当 showSeq 为 true 时有效"
      },
      "show-footer": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示表尾合计",
        "description_zh": "是否显示表尾合计"
      },
      "show-header": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示表头",
        "description_zh": "是否显示表头"
      },
      "show-header-overflow": {
        "default": "--",
        "value": "",
        "type": "boolean | 'ellipsis' | 'tooltip' | 'title'",
        "description": "设置表头所有内容过长时显示为省略号；该属性的可选值为 ellipsis（只显示省略号）,title（并且显示为原生 title）,tooltip（并且显示为 tooltip 提示）",
        "description_zh": "设置表头所有内容过长时显示为省略号；该属性的可选值为 ellipsis（只显示省略号）,title（并且显示为原生 title）,tooltip（并且显示为 tooltip 提示）"
      },
      "show-overflow": {
        "default": "--",
        "value": "",
        "type": "boolean | 'ellipsis' | 'tooltip' | 'title'",
        "description": "设置所有内容过长时显示为省略号（如果是固定列建议设置该值，提升渲染速度）；该属性的可选值为 ellipsis（只显示省略号）,title（并且显示为原生 title）,tooltip（并且显示为 tooltip 提示）",
        "description_zh": "设置所有内容过长时显示为省略号（如果是固定列建议设置该值，提升渲染速度）；该属性的可选值为 ellipsis（只显示省略号）,title（并且显示为原生 title）,tooltip（并且显示为 tooltip 提示）"
      },
      "show-save-msg": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "切换分页时有未保存的数据时是否进行提示",
        "description_zh": "切换分页时有未保存的数据时是否进行提示"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "表格的尺寸",
        "description_zh": "表格的尺寸"
      },
      "sort-config": {
        "default": "--",
        "value": "",
        "type": "ISortConfig",
        "description": "排序配置项",
        "description_zh": "排序配置项"
      },
      "sort-method": {
        "default": "--",
        "value": "",
        "type": "(row1: IRow, row2: IRow)=> boolean",
        "description": "自定义所有列的排序方法，当触发排序时会调用该函数返回排序后的结果；自定义排序方法，类似原生的sort排序",
        "description_zh": "自定义所有列的排序方法，当触发排序时会调用该函数返回排序后的结果；自定义排序方法，类似原生的sort排序"
      },
      "sortable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置是否允许列数据排序。默认为 true 可排序",
        "description_zh": "设置是否允许列数据排序。默认为 true 可排序"
      },
      "span-method": {
        "default": "{ rowspan: 1, colspan: 1 }",
        "value": "",
        "type": "(args: ISpanMethodArgs) => { rowspan: number, colspan: number }",
        "description": "合并行或列，该函数返回计算后的值",
        "description_zh": "合并行或列，该函数返回计算后的值"
      },
      ":start-index": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "只对 type=index 的列有效，动态索引的起始值",
        "description_zh": "只对 type=index 的列有效，动态索引的起始值"
      },
      "stripe": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否带有斑马纹",
        "description_zh": "是否带有斑马纹"
      },
      "summary-config": {
        "default": "--",
        "value": "",
        "type": "ISummaryConfig",
        "description": "表格统计功能配置项",
        "description_zh": "表格统计功能配置项"
      },
      "sync-resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "响应式跟随某个属性（对于通过某个属性来控制显示/隐藏切换的场景可能会用到）",
        "description_zh": "响应式跟随某个属性（对于通过某个属性来控制显示/隐藏切换的场景可能会用到）"
      },
      "toolbar": {
        "default": "--",
        "value": "",
        "type": "IToolbarConfig",
        "description": "工具栏配置",
        "description_zh": "工具栏配置"
      },
      "tooltip-config": {
        "default": "--",
        "value": "",
        "type": "IToolTipConfig",
        "description": "Grid 内置 tooltip 配置项，请参考 Tooltip 组件属性说明",
        "description_zh": "Grid 内置 tooltip 配置项，请参考 Tooltip 组件属性说明"
      },
      "tree-config": {
        "default": "--",
        "value": "",
        "type": "ITreeConfig",
        "description": "树形结构配置项",
        "description_zh": "树形结构配置项"
      },
      "valid-config": {
        "default": "--",
        "value": "",
        "type": "IValidConfig",
        "description": "校验配置项",
        "description_zh": "校验配置项"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "typeDetail": {
      "IRow": "interface IRow {\n  // 表格行数据\n  [filed: string]: any\n}",
      "IColumnConfig": "interface IColumnConfig {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  prop: string\n  rules: IValidRules\n  required: boolean\n  property: string\n  title: string\n  label: string\n  width: string | number\n  minWidth: string | number\n  resizable: boolean\n  fixed: boolean\n  align: 'left' | 'center' | 'right'\n  headerAlign: 'left' | 'center' | 'right'\n  footerAlign: 'left' | 'center' | 'right'\n  showOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showHeaderOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showTip: boolean\n  showHeaderTip: boolean\n  className: string\n  headerClassName: string\n  footerClassName: string\n}",
      "IPagerConfig": "interface IPagerConfig {\n  component?: Component\n  attrs: {\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    total: number\n    // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n    layout: string\n  }\n}",
      "IDataHandler": "interface IDataHandler {\n  api: ()=> Promise\n}",
      "IRowGroup": "interface IRowGroup {\n  // 列标识符，行分组会将具有相同值的列进行分组展示\n  field: string\n}",
      "IToolbarConfig": "interface IToolbarConfig {\n  component: GridToolbar\n  buttons: {\n    code: string\n    name: string\n  }[]\n}",
      "IToolTipConfig": "interface IToolTipConfig {\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'\n  visibleArrow?: boolean\n  enterable?: boolean\n  type?: 'normal' | 'warning' | 'error' | 'info' | 'success'\n  effect?: 'dark' | 'light'\n  // 自定义提示内容\n  contentMethod?: ()=> string | VNode\n}",
      "IContextMenuConfig": "interface IMenuOptions {\n  code: string\n  name: string\n  visible?: boolean\n  disabled?: boolean\n}\n\ninterface IContextMenuConfig {\n  body?: { \n    options: IMenuOptions\n  }\n  footer?: { \n    options: IMenuOptions\n  }\n  visibleMethod?: ()=> boolean\n}",
      "IValidRules": "interface IValidRules {\n [filed:string]: { \n  type?: string\n  required?: boolean\n  validator?: () => boolean\n  message?: string\n  min?: number\n  max?: number\n }\n}[]",
      "IExpandConfig": "interface IExpandConfig {\n  // 默认展开所有行\n  expandAll?: boolean \n  // 触发方式 default（点击按钮触发）,cell（点击单元格触发）,row（点击行触发）\n  trigger?: 'default' | 'row' | cell\n  // 默认展开指定行（需要有 row-id）\n  expandRowKeys?: string[]\n  // 对于同一级的节点，每次只能展开一个\n  accordion?: boolean\n  // 控制是否渲染展开行\n  activeMethod?:({row: IRow})=> boolean\n  // 配置是否显示展开图标\n  showIcon?: boolean \n}",
      "IOptimizationConfig": "interface IOptimizationConfig {\n  animat: boolean\n  delayHover: number\n  scrollX: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 X 虚拟滚动，必须固定所有列宽，否则无法兼容）默认100\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number\n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数\n    vSize?: number\n  }\n  scrollY: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 Y 虚拟滚动，必须固定所有行高，否则无法兼容）默认500\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number \n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数 默认自动计算\n    vSize?: number \n    // 指定行高 默认自动计算\n    rHeight?: number \n    // 自动适配最优的渲染方式 默认true\n    adaptive?: boolean \n  }\n}",
      "IKeyboardConfig": "interface IKeyboardConfig {\n  // 启用方向键功能\n  isArrow?: boolean \n  isDel?: boolean\n  isTab?: boolean \n  isEdit?: boolean\n}",
      "IMouseConfig": "interface IMouseConfig {\n  // 是否开启左键选中单元格功能（只对 editConfig.mode=cell 有效），默认为 false\n  selected: boolean \n}",
      "IRadioConfig": "interface IRadioConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row' \n  // 单选框显示的字段名，可以直接显示在单选框中\n  labelField?: string |\n  // 默认选中指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKey?: string\n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 Radio 是否可以选中\n  checkMethod?: ()=> boolean\n}",
      "ISelectConfig": "interface ISelectConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row'\n  // 复选框显示的字段名，可以直接显示在复选框中\n  labelField?: string\n  // 默认勾选开指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKeys?: string[] \n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 checkbox 是否可以勾选\n  checkMethod?: ()=> boolean \n  // 默认勾选所有（只会在初始化时被触发一次）}\n  checkAll?: boolean\n  // 是否显示全选按钮（如果 checkStrictly=true 则默认为 false）\n  showHeader?: boolean \n  // 是否严格的遵循父子不互相关联的做法\n  checkStrictly?: boolean\n  // 翻页操作是否保留历史选择数据\n  reserve?: boolean\n}",
      "ISortConfig": "interface ISortConfig {\n  // 排序触发方式，可配置为 cell（点击头部单元格触发排序），不配置时默认为点击上下箭头触发排序\n  trigger?: 'cell'\n}",
      "ITreeConfig": "interface ITreeConfig {\n  // 展开子级触发方式：'default'(点击按钮触发)；'cell'(点击单元格触发)；'row'(点击行触发)\n  trigger?: 'default' | 'cell' | 'row'\n  // 子级索引是否按数字递增显示：true(子级索引按数字递增显示，父级1，子级2)；false(子级索引在父级索引基础上增加，父级1，子级1.1)\n  ordered?: boolean\n  // 控制水平缩进距离，默认 16，单位 px\n  indent?: number\n  // 指定子级数据的字段名\n  children?: string\n  // 是否展开所有行\n  expandAll?: boolean\n  // 默认展开所给数组中的指定行，需要有row-id，可以由行的'_RID'属性获取\n  expandRowKeys?: string[]\n  // 对于同一级的多个子节点，是否只能同时展开一个子节点\n  accordion?: boolean\n}",
      "IValidConfig": "interface IValidConfig {\n  // 校验提示类型，'inline'(内置提示)；'tooltip'(tooltip文字提示)\n  message?: 'inline' | 'tooltip'\n}",
      "ISummaryConfig": "interface ISummaryConfig {\n  // 统计字段名 \n  fields: string[]\n  // 小数点后保留的小数位\n  fraction?: boolean\n  // 是否截断，默认为四舍五入，不截断\n  truncate?: boolean\n  // 统计显示的文本\n   text?: string\n}",
      "IScrollLoadConfig": "interface IScrollLoadConfig {\n  // 是否连续\n  isInfinity: boolean\n  // 每次加载多少条\n  pageSize: number\n}",
      "IEventsConfig": "interface IEventsConfig {\n  [field: string]: ()=> void\n}",
      "IDropConfig": "interface IDropConfig {\n  // sortablejs 插件\n  plugin: Sortable\n  // 开启行拖拽\n  row: boolean\n  // 开启列拖拽\n  column: boolean\n  // 拖拽前函数，返回 false 取消拖动\n  onBeforeMove?: ()=> boolean\n  // 拖拽触发源选择器一般是class类名\n  trigger?: string\n  // 根据行的类名来控制是否可以拖动\n  filter?: string\n  // 如果变动了树层级，可以指定是否需要刷新数据\n  refresh?: boolean\n  }",
      "IEditConfig": "interface IEditConfig {\n  // 激活触发方式\n  trigger: 'click' | 'dblclick' | 'manual'\n  // 激活类型单元格激活或者行\n  mode: 'cell' | 'row'\n  // 是否显示状态\n  showStatus?: boolean\n  // 自定义编辑规则，返回true可以编辑返回false则禁止编辑\n  activeMethod?: ({row: IRow, column: IColumnConfig})=> boolean\n}",
      "IRecordset": "interface IRecordset {\n  insertRecords: IRow[]\n  removeRecords: IRow[]\n  updateRecords: IRow[]\n}",
      "IPageChangeArgs": "interface IPageChangeArgs { \n  // table组件vue实例\n  $grid: Component\n  // 当前页码\n  currentPage: number\n  //当前分页组件布局信息 'total, prev, pager, next, jumper, sizes'\n  layout: string\n  // 当前每页显示条数\n  pageSize: number\n  //可切换的每页条数\n  pageSizes: number[] \n  //总数据条数\n  total: number \n}",
      "IBeforePageChangeArgs": "interface IBeforePageChangeArgs { \n  //新页码\n  newPage: number\n  //新的分页大小 \n  newPageSize: number\n  //当前页码\n  currentPage: number\n  //当前的页大小\n  currentPageSize: number\n  //生效回调\n  callback: ()=> void\n  //失效回调\n  rollback: ()=> void\n}",
      "IToolbarButtonClickArgs": "interface IToolbarButtonClickArgs { \n  //表格组件实例对象信息 \n  $grid: Component\n  //按钮信息对象 \n  button: {\n    code: string\n    name: string\n  }[]\n  // 按钮功能类型\n  code: string\n}",
      "ICellClickArgs": "interface ICellClickArgs {\n  // 当前行\n  row: IRow,\n  // 当前行的下标\n  rowIndex: number\n  // 当前列\n  column: IColumnConfig\n  // 当前列的下标\n  columnIndex: number\n}",
      "ICellContextMenuArgs": "interface ICellContextMenuArgs {\n  // 当前行\n  row: IRow\n}",
      "ICellArgs": "interface ICellArgs {\n  //当前行\n  row: IRow\n  //当前行的下标\n  rowIndex: number\n  // 当前列 \n  column: IColumnConfig\n  // 当前列的下标 \n  columnIndex: number\n}",
      "ICurrentChangeArgs": "interface ICurrentChangeArgs {\n  // 当前行\n  row: IRow\n}",
      "IEditActivedArgs": "interface IEditActivedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditClosedArgs": "interface IEditClosedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditDisabledArgs": "interface IEditDisabledArgs {\n  //当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IFilterChangeArgs": "interface IFilterChangeArgs {\n  //表格的信息对象\n  $table: Component\n  //过滤列的过滤数据信息\n  filters: object\n}",
      "IFooterCellClickArgs": "interface IFooterCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点 \n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IContextMenuArgs": "interface IContextMenuArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 配置清除等功能信息\n  options: object[]\n  // 表格区域类型\n  type: 'header' | 'footer' | 'body'\n}",
      "IFooterCellDblClickArgs": "interface IFooterCellDblClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IHeaderCellClickArgs": "interface IHeaderCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 点击表头单元格\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 当前点击节点过滤标识\n  triggerFilter: boolean\n  // 当前点击节点排序标识\n  triggerSort: boolean\n}",
      "IHeaderCellDblClickArgs": "interface IHeaderCellDblClickArgs {\n  // 列数据\n  column: IColumnConfig  \n  // 列索引\n  columnIndex: number\n  // table组件 vue实例 \n  $table: Component\n  // 点击的单元格dom\n  cell: HTMLElement\n}",
      "IResizableChangeArgs": "interface IResizableChangeArgs {\n  // table组件的vue 实例 \n  $table: Component,\n  // 列配置信息 \n  column: IColumnConfig \n  // 拖动列的索引\n  columnIndex: number\n  // 是否固定列\n  fixed: boolean\n}",
      "IScrollArgs": "interface IScrollArgs {\n  // 表格实例对象信息\n  $table: Component\n  fixed: boolean\n  // X轴滚动\n  isX: boolean\n  // Y轴滚动\n  isY: true\n  // X轴滚动距离\n  scrollLeft: number\n  // Y轴滚动距离\n  scrollTop: number\n  type: 'body' | 'header' | 'footer'\n}",
      "ISelectAllArgs": "interface ISelectAllArgs {\n  $columnIndex: number\n  $rowIndex: number\n  $seq: string\n  // 表格实例对象信息\n  $table: Component \n  // 勾选状态\n  checked: boolean\n  // 列信息\n  column: IColumnConfig\n  // 列下标\n  columnIndex: number\n  // 表格数据\n  data: IRow[]\n  fixed: boolean\n  isHidden: boolean\n  level: number\n  // 勾选项的行数据信息\n  row: IRow\n  // 勾选项的行下标\n  rowIndex: number\n  // 选中的数据\n  selection: IRow[]\n  seq: number\n}",
      "IToggleExpandChangeArgs": "interface IToggleExpandChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IToggleTreeChangeArgs": "interface IToggleTreeChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IValidErrorArgs": "interface IValidErrorArgs { \n  // 校验的单元格信息对象\n  cell: Cell\n  //校验单元格所在列的列配置信息对象\n  column: IColumnConfig\n  //校验单元格所在行的信息对象\n  row: IRow\n  // 校验规则信息对象 \n  rule: object\n}",
      "ISortChangeArgs": "interface ISortChangeArgs { \n  // 表格实例对象信息\n  $grid: Component\n  // 列信息\n  column: IColumnConfig\n  // 排序的字段名\n  field: string \n  // 排序类型升序或降序\n  order: 'asc' | 'desc' \n  prop: string\n  property: string\n}",
      "IClassNameArgs": "interface IClassNameArgs {\n  seq: number\n  row: IRow\n  rowIndex: number\n  $rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n  $columnIndex: number\n}",
      "IIndexMethodArgs": "interface IIndexMethodArgs {\n  row: IRow\n  rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IFormatConfig": "interface IFormatConfig {\n  // 列数据源\n  data: IColumnConfig[] \n  // 内置渲染器类型，与 format-text 属性取值相同\n  type: 'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate'\n  // 配置为 true 后，支持动态修改 data 的数据。还可以配置为对象，配置为对象时，对象中可以配置 splitConfig.enabled（是否启用分隔配置）、splitConfig.valueSplit（指定 value 值的分隔符）、splitConfig.textSplit（指定 text 的分隔符）、fetch（列数据异步渲染，请求数据）\n  async: true, \n  // 单元格显示内容的映射\n  label: string\n  // 单元格取值的映射\n  value: string\n}",
      "IButtonClick": "interface IButtonClick { \n  // 表格组件实例对象信息\n  $grid: Component \n  // 按钮列表信息对象   \n  button: {\n    code: string\n    name: string\n  }[]\n   // 按钮类型 \n   code: string\n  }",
      "ISettingConfigs": "interface ISettingConfigs {\n  sortType: 'page' | 'all'\n  pageSize: number\n  columns: {\n    property: string\n    order: 'asc' | 'desc' | null \n    visible: boolean\n    sortable: boolean\n  }[]\n}",
      "ISpanMethodArgs": "interface ISpanMethodArgs {\n  // 行标\n  $rowIndex: number\n  // 列数据  \n  column: IColumnConfig\n  // 列下标 \n  columnIndex: number\n  // 一个数组，保存了当前合并和计算的数据\n  data: (string | number | null)[][]\n}",
      "IExportCsvOptions": "interface IExportCsvOptions {\n  filename: string\n  original: boolean\n  isHeader: boolean\n  data: IRow[]\n}",
      "IEditorConfig": "interface IEditorConfig {\n  // 内置组件名称或者自定义组件实例\n  component: 'input' | 'select' | Component\n  // 传递给组件的事件集合\n  events?: {\n    [event]: ()=> void\n  }\n  // 传递给编辑器组件的属性集合\n  attrs?: {\n    [prop]: any\n  }\n  // select 内置组件独有的下拉数据配置项\n  options?: object[]\n}",
      "IFilterConfig": "interface IFilterConfig {\n  // 设置在显示枚举选项功能是否为多选, 仅在 enumable:true 下有效\n  multi: boolean\n  // 设置在过滤面板中显示枚举选项\n  enumable: boolean\n  // 设置在过滤面板中显示默认的筛选条件\n  defaultFilter: boolean\n  // 设置在过滤面板中显示输入筛选的项\n  inputFilter: boolean\n  // 设置在显示枚举选项功能(enumable)下制定静态数据源，也可以是函数返回一个Promise对象\n  values: {\n    // 设置枚举数据的显示值属性字段， 默认'label'\n    label: string\n    // 设置枚举数据的实际值属性字段， 默认'value'\n    value: string \n  }[] | ()=> Promise\n}",
      "IOPConfig": "interface IOPConfig {\n  editConfig?: IEditConfig\n  pagerConfig?: IPagerConfig\n  columns: IColumnConfig[]\n  data: IRow[]\n}",
      "IFormatText": "'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate' | 'boole' | (params)=> string",
      "IToolbarSetting": "interface IToolbarSetting {\n        remote?: boolean\n        storage?: string\n        sortable?: Sortable \n      }"
    },
    "events": [
      {
        "name": "before-page-change",
        "description": "在打开页面改变时的前置处理特性，并且进行翻页操作或者改变页大小操作时触发",
        "description_zh": "在打开页面改变时的前置处理特性，并且进行翻页操作或者改变页大小操作时触发",
        "params": "(args: IBeforePageChangeArgs)=> void"
      },
      {
        "name": "cancel-page-change",
        "description": "切换分页时有未保存的数据时，提示框确定按钮事件",
        "description_zh": "切换分页时有未保存的数据时，提示框确定按钮事件",
        "params": "($grid: Component)=> void"
      },
      {
        "name": "cell-click",
        "description": "单元格被点击时会触发该事件",
        "description_zh": "单元格被点击时会触发该事件",
        "params": "(args: ICellClickArgs, event: Event)=> void"
      },
      {
        "name": "cell-context-menu",
        "description": "单元格被鼠标右键点击时触发该事件",
        "description_zh": "单元格被鼠标右键点击时触发该事件",
        "params": "(args: ICellContextMenuArgs)=> void"
      },
      {
        "name": "cell-dblclick",
        "description": "单元格被双击时会触发该事件",
        "description_zh": "单元格被双击时会触发该事件",
        "params": "(args: ICellArgs, event: Event)=> void"
      },
      {
        "name": "cell-mouseenter",
        "description": "当单元格 hover 进入时会触发该事件",
        "description_zh": "当单元格 hover 进入时会触发该事件",
        "params": "(args: ICellArgs, event: Event)=> void"
      },
      {
        "name": "cell-mouseleave",
        "description": "当单元格 hover 退出时会触发该事件",
        "description_zh": "当单元格 hover 退出时会触发该事件",
        "params": "(args: ICellArgs, event: Event)=> void"
      },
      {
        "name": "context-menu-click",
        "description": "只对 context-menu 配置时有效，当点击快捷菜单时会触发该事件",
        "description_zh": "只对 context-menu 配置时有效，当点击快捷菜单时会触发该事件",
        "params": "(args: IContextMenuArgs, event: Event)=> void"
      },
      {
        "name": "current-change",
        "description": "只对 highlightCurrentRow 有效，当手动选中行并且值发生改变时触发的事件",
        "description_zh": "只对 highlightCurrentRow 有效，当手动选中行并且值发生改变时触发的事件",
        "params": "(args: ICurrentChangeArgs, event: Event)=> void"
      },
      {
        "name": "edit-actived",
        "description": "单元格被激活编辑时会触发该事件",
        "description_zh": "单元格被激活编辑时会触发该事件",
        "params": "(args: IEditActivedArgs, event: Event)=> void"
      },
      {
        "name": "edit-closed",
        "description": "单元格编辑状态下被关闭时会触发该事件",
        "description_zh": "单元格编辑状态下被关闭时会触发该事件",
        "params": "(args: IEditClosedArgs, event: Event)=> void"
      },
      {
        "name": "edit-disabled",
        "description": "当单元格激活时如果是禁用状态时会触发该事件",
        "description_zh": "当单元格激活时如果是禁用状态时会触发该事件",
        "params": "(args: IEditDisabledArgs, event: Event)=> void"
      },
      {
        "name": "filter-change",
        "description": "当筛选条件发生变化时会触发该事件",
        "description_zh": "当筛选条件发生变化时会触发该事件",
        "params": "(args: IFilterChangeArgs)=> void"
      },
      {
        "name": "footer-cell-click",
        "description": "表尾单元格被点击时会触发该事件",
        "description_zh": "表尾单元格被点击时会触发该事件",
        "params": "(args: IFooterCellClickArgs, event: Event)=> void"
      },
      {
        "name": "footer-cell-context-menu",
        "description": "表尾单元格被鼠标右键点击时触发该事件",
        "description_zh": "表尾单元格被鼠标右键点击时触发该事件",
        "params": "(args: IContextMenuArgs, event: Event)=> void"
      },
      {
        "name": "footer-cell-dblclick",
        "description": "表尾单元格被双击时会触发该事件",
        "description_zh": "表尾单元格被双击时会触发该事件",
        "params": "(args: IFooterCellDblClickArgs, event: Event)=> void"
      },
      {
        "name": "fullscreen",
        "description": "全屏时或关闭全屏时触发的时间",
        "description_zh": "全屏时或关闭全屏时触发的时间",
        "params": "()=> void"
      },
      {
        "name": "header-cell-click",
        "description": "表头单元格被点击时会触发该事件",
        "description_zh": "表头单元格被点击时会触发该事件",
        "params": "(args: IHeaderCellClickArgs, event: Event)=> void"
      },
      {
        "name": "header-cell-context-menu",
        "description": "表头单元格被鼠标右键点击时触发该事件",
        "description_zh": "表头单元格被鼠标右键点击时触发该事件",
        "params": "(args: IContextMenuArgs, event: Event)=> void"
      },
      {
        "name": "header-cell-dblclick",
        "description": "表头单元格被双击时会触发该事件",
        "description_zh": "表头单元格被双击时会触发该事件",
        "params": "(args: IHeaderCellDblClickArgs, event: Event)=> void"
      },
      {
        "name": "page-change",
        "description": "只对 pager-config 配置时有效，分页发生改变时会触发该事件 ",
        "description_zh": "只对 pager-config 配置时有效，分页发生改变时会触发该事件 ",
        "params": "(args: IPageChangeArgs)=> void"
      },
      {
        "name": "radio-change",
        "description": "只对 type=radio 有效，当手动勾选并且值发生改变时触发的事件",
        "description_zh": "只对 type=radio 有效，当手动勾选并且值发生改变时触发的事件",
        "params": "($table: Component, event: Event)=> void"
      },
      {
        "name": "resizable-change",
        "description": "当列宽拖动发生变化时会触发该事件",
        "description_zh": "当列宽拖动发生变化时会触发该事件",
        "params": "(args: IResizableChangeArgs)=> void"
      },
      {
        "name": "scroll",
        "description": "表格滚动时会触发该事件",
        "description_zh": "表格滚动时会触发该事件",
        "params": "(args: IScrollArgs)=> void"
      },
      {
        "name": "select-all",
        "description": "只对 type=selection 有效，当手动勾选全选时触发的事件",
        "description_zh": "只对 type=selection 有效，当手动勾选全选时触发的事件",
        "params": "(args: ISelectAllArgs, event: Event)=> void"
      },
      {
        "name": "select-change",
        "description": "只对 type=selection 有效，当手动勾选并且值发生改变时触发的事件",
        "description_zh": "只对 type=selection 有效，当手动勾选并且值发生改变时触发的事件",
        "params": "(args: ISelectChangeArgs, event: Event)=> void"
      },
      {
        "name": "sort-change",
        "description": "点击列头，执行数据排序前触发的事件",
        "description_zh": "点击列头，执行数据排序前触发的事件",
        "params": "(args: ISortChangeArgs)=> void"
      },
      {
        "name": "toggle-expand-change",
        "description": "当行展开或收起时会触发该事件",
        "description_zh": "当行展开或收起时会触发该事件",
        "params": "(args: IToggleExpandChangeArgs, event: Event)=> void"
      },
      {
        "name": "toggle-tree-change",
        "description": "当树节点展开或收起时会触发该事件",
        "description_zh": "当树节点展开或收起时会触发该事件",
        "params": "(args: IToggleTreeChangeArgs, event: Event)=> void"
      },
      {
        "name": "toolbar-button-click",
        "description": "只对 toolbar.buttons 配置时有效，当工具栏的按钮被点击时会后触发该事件",
        "description_zh": "只对 toolbar.buttons 配置时有效，当工具栏的按钮被点击时会后触发该事件",
        "params": "(args: IToolbarButtonClickArgs, event: Event)=> void"
      },
      {
        "name": "valid-error",
        "description": "当数据校验不通过时会触发该事件",
        "description_zh": "当数据校验不通过时会触发该事件",
        "params": "(args: IValidErrorArgs)=> void"
      }
    ],
    "methods": [
      {
        "name": "default",
        "description": "默认插槽（表格列）",
        "description_zh": "默认插槽（表格列）"
      },
      {
        "name": "empty",
        "description": "空数据时显示的文本内容",
        "description_zh": "空数据时显示的文本内容"
      },
      {
        "name": "toolbar",
        "description": "工具栏，（包含：缩放、个性化、刷新表格、自定义按钮)",
        "description_zh": "工具栏，（包含：缩放、个性化、刷新表格、自定义按钮)"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽（表格列）",
        "description_zh": "默认插槽（表格列）"
      },
      {
        "name": "empty",
        "description": "空数据时显示的文本内容",
        "description_zh": "空数据时显示的文本内容"
      },
      {
        "name": "toolbar",
        "description": "工具栏，（包含：缩放、个性化、刷新表格、自定义按钮)",
        "description_zh": "工具栏，（包含：缩放、个性化、刷新表格、自定义按钮)"
      }
    ],
    "filename": "Grid"
  },
  {
    "name": "TinyGridColumn",
    "props": {
      "align": {
        "default": "'left'",
        "value": "",
        "type": "'left' | 'center' | 'right'",
        "description": "列对齐方式",
        "description_zh": "列对齐方式"
      },
      "class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs)=> string",
        "description": "给单元格附加 className，也可以是函数",
        "description_zh": "给单元格附加 className，也可以是函数"
      },
      "editor": {
        "default": "--",
        "value": "",
        "type": "IEditorConfig | (h, {row:Row, column: IColumnConfig})=> Component",
        "description": "单元格编辑渲染配置项，也可以是函数返回 Vue 组件",
        "description_zh": "单元格编辑渲染配置项，也可以是函数返回 Vue 组件"
      },
      "filter": {
        "default": "false",
        "value": "",
        "type": "boolean | IFilterConfig",
        "description": "设置表格列的筛选配置信息。默认值为 false 不配置筛选信息",
        "description_zh": "设置表格列的筛选配置信息。默认值为 false 不配置筛选信息"
      },
      "fixed": {
        "default": "--",
        "value": "",
        "type": "'left' | 'right'",
        "description": "将列固定在左侧，其中 freezable 可冻结可解冻，在表格个性化面板中可操作，而 frozen 只能冻结不能解冻，在个性化面板中不可操作；将列固定在左侧或者右侧（注意：固定列应该放在左右两侧的位置）",
        "description_zh": "将列固定在左侧，其中 freezable 可冻结可解冻，在表格个性化面板中可操作，而 frozen 只能冻结不能解冻，在个性化面板中不可操作；将列固定在左侧或者右侧（注意：固定列应该放在左右两侧的位置）"
      },
      "footer-align": {
        "default": "'left'",
        "value": "",
        "type": "'left' | 'center' | 'right'",
        "description": "表尾列的对齐方式）",
        "description_zh": "表尾列的对齐方式）"
      },
      "footer-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs)=> string",
        "description": "给表尾的单元格附加 className，也可以是函数",
        "description_zh": "给表尾的单元格附加 className，也可以是函数"
      },
      "format-config": {
        "default": "--",
        "value": "",
        "type": "IFormatConfig",
        "description": "开启该列数据异步渲染",
        "description_zh": "开启该列数据异步渲染"
      },
      "format-text": {
        "default": "--",
        "value": "",
        "type": "IFormatText",
        "description": "设置当前表格列的显示获取编辑类型；设置当前表格列的显示获取编辑类型，也可以是函数",
        "description_zh": "设置当前表格列的显示获取编辑类型；设置当前表格列的显示获取编辑类型，也可以是函数"
      },
      "header-align": {
        "default": "'left'",
        "value": "",
        "type": "'left' | 'center' | 'right'",
        "description": "表头列的对齐方式",
        "description_zh": "表头列的对齐方式"
      },
      "header-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs)=> string",
        "description": "设置列头样式名称；给表头的单元格附加 className，也可以是函数",
        "description_zh": "设置列头样式名称；给表头的单元格附加 className，也可以是函数"
      },
      "index-method": {
        "default": "--",
        "value": "",
        "type": "string | (args: IIndexMethodArgs)=> string",
        "description": "只对 type=index 有效，自定义索引方法",
        "description_zh": "只对 type=index 有效，自定义索引方法"
      },
      "min-width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "最小列宽度；会自动将剩余空间按比例分配；该属性的可选值为 整数, px，%",
        "description_zh": "最小列宽度；会自动将剩余空间按比例分配；该属性的可选值为 整数, px，%"
      },
      "multi": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是 filter 对象内置的属性，筛选是否允许多选；设置选择列是否显示复选框。当 columnType 为 select 时有效",
        "description_zh": "是 filter 对象内置的属性，筛选是否允许多选；设置选择列是否显示复选框。当 columnType 为 select 时有效"
      },
      ":params": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "额外的参数（自定义一些数据参数，对于某些特殊的场景可能会用到）",
        "description_zh": "额外的参数（自定义一些数据参数，对于某些特殊的场景可能会用到）"
      },
      "remote-sort": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否使用服务端排序，如果设置为 true 则不会对数据进行处理",
        "description_zh": "是否使用服务端排序，如果设置为 true 则不会对数据进行处理"
      },
      "renderer": {
        "default": "--",
        "value": "",
        "type": "IEditorConfig | (h, {row: IRow, column: IColumnConfig})=> Component",
        "description": "设置表格列的渲染类型。其优先级高于列的 type 属性配置；单元格渲染配置项，其优先级高于列的 formatText 属性配置",
        "description_zh": "设置表格列的渲染类型。其优先级高于列的 type 属性配置；单元格渲染配置项，其优先级高于列的 formatText 属性配置"
      },
      "required": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否必填，如不设置，则会根据校验规则自动生成",
        "description_zh": "是否必填，如不设置，则会根据校验规则自动生成"
      },
      "resizable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置该列是否可以调整列宽；列是否允许拖动列宽调整大小",
        "description_zh": "设置该列是否可以调整列宽；列是否允许拖动列宽调整大小"
      },
      "rules": {
        "default": "--",
        "value": "",
        "type": "IValidRules",
        "description": "表单的验证功能",
        "description_zh": "表单的验证功能"
      },
      "show-header-overflow": {
        "default": "--",
        "value": "",
        "type": "string | boolean",
        "description": "当表头内容过长时显示为省略号；该属性的可选值为 ellipsis （只显示省略号）， title （并且显示为原生 title ）， tooltip （并且显示为 tooltip 提示）",
        "description_zh": "当表头内容过长时显示为省略号；该属性的可选值为 ellipsis （只显示省略号）， title （并且显示为原生 title ）， tooltip （并且显示为 tooltip 提示）"
      },
      "show-header-tip": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "表格列头是否需要提示",
        "description_zh": "表格列头是否需要提示"
      },
      "show-icon": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示列头编辑图标，在编辑时有效",
        "description_zh": "是否显示列头编辑图标，在编辑时有效"
      },
      "show-overflow": {
        "default": "--",
        "value": "",
        "type": "string | boolean",
        "description": "当内容过长时显示为省略号；该属性的可选值为 ellipsis（只显示省略号）, title（并且显示为原生 title）, tooltip（并且显示为 tooltip 提示）",
        "description_zh": "当内容过长时显示为省略号；该属性的可选值为 ellipsis（只显示省略号）, title（并且显示为原生 title）, tooltip（并且显示为 tooltip 提示）"
      },
      "show-tip": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "表格列单元格是否需要提示",
        "description_zh": "表格列单元格是否需要提示"
      },
      "sort-by": {
        "default": "--",
        "value": "",
        "type": "string | string[]",
        "description": "只对 sortable 有效，自定义排序的属性",
        "description_zh": "只对 sortable 有效，自定义排序的属性"
      },
      "sort-method": {
        "default": "--",
        "value": "",
        "type": "(row1: IRow, row2: IRow)=> boolean",
        "description": "自定义所有列的排序方法，当触发排序时会调用该函数",
        "description_zh": "自定义所有列的排序方法，当触发排序时会调用该函数"
      },
      "sortable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置该列数据是否可以排序",
        "description_zh": "设置该列数据是否可以排序"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string | (h, params)=> string | VNode",
        "description": "列标题（支持开启国际化），可以是函数",
        "description_zh": "列标题（支持开启国际化），可以是函数"
      },
      "tree-node": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "只对 tree-config 配置时有效，指定为树节点",
        "description_zh": "只对 tree-config 配置时有效，指定为树节点"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "'index' | 'selection' | 'radio' | 'expand'",
        "description": "设置内置列的类型",
        "description_zh": "设置内置列的类型"
      },
      "width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "设置列的宽度，可以是像素或者百分比或者 auto ，设置为 auto 时，列宽会自动适应；该属性的可选值为 整数 ， px ，%",
        "description_zh": "设置列的宽度，可以是像素或者百分比或者 auto ，设置为 auto 时，列宽会自动适应；该属性的可选值为 整数 ， px ，%"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "typeDetail": {
      "IRow": "interface IRow {\n  // 表格行数据\n  [filed: string]: any\n}",
      "IColumnConfig": "interface IColumnConfig {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  prop: string\n  rules: IValidRules\n  required: boolean\n  property: string\n  title: string\n  label: string\n  width: string | number\n  minWidth: string | number\n  resizable: boolean\n  fixed: boolean\n  align: 'left' | 'center' | 'right'\n  headerAlign: 'left' | 'center' | 'right'\n  footerAlign: 'left' | 'center' | 'right'\n  showOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showHeaderOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showTip: boolean\n  showHeaderTip: boolean\n  className: string\n  headerClassName: string\n  footerClassName: string\n}",
      "IPagerConfig": "interface IPagerConfig {\n  component?: Component\n  attrs: {\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    total: number\n    // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n    layout: string\n  }\n}",
      "IDataHandler": "interface IDataHandler {\n  api: ()=> Promise\n}",
      "IRowGroup": "interface IRowGroup {\n  // 列标识符，行分组会将具有相同值的列进行分组展示\n  field: string\n}",
      "IToolbarConfig": "interface IToolbarConfig {\n  component: GridToolbar\n  buttons: {\n    code: string\n    name: string\n  }[]\n}",
      "IToolTipConfig": "interface IToolTipConfig {\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'\n  visibleArrow?: boolean\n  enterable?: boolean\n  type?: 'normal' | 'warning' | 'error' | 'info' | 'success'\n  effect?: 'dark' | 'light'\n  // 自定义提示内容\n  contentMethod?: ()=> string | VNode\n}",
      "IContextMenuConfig": "interface IMenuOptions {\n  code: string\n  name: string\n  visible?: boolean\n  disabled?: boolean\n}\n\ninterface IContextMenuConfig {\n  body?: { \n    options: IMenuOptions\n  }\n  footer?: { \n    options: IMenuOptions\n  }\n  visibleMethod?: ()=> boolean\n}",
      "IValidRules": "interface IValidRules {\n [filed:string]: { \n  type?: string\n  required?: boolean\n  validator?: () => boolean\n  message?: string\n  min?: number\n  max?: number\n }\n}[]",
      "IExpandConfig": "interface IExpandConfig {\n  // 默认展开所有行\n  expandAll?: boolean \n  // 触发方式 default（点击按钮触发）,cell（点击单元格触发）,row（点击行触发）\n  trigger?: 'default' | 'row' | cell\n  // 默认展开指定行（需要有 row-id）\n  expandRowKeys?: string[]\n  // 对于同一级的节点，每次只能展开一个\n  accordion?: boolean\n  // 控制是否渲染展开行\n  activeMethod?:({row: IRow})=> boolean\n  // 配置是否显示展开图标\n  showIcon?: boolean \n}",
      "IOptimizationConfig": "interface IOptimizationConfig {\n  animat: boolean\n  delayHover: number\n  scrollX: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 X 虚拟滚动，必须固定所有列宽，否则无法兼容）默认100\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number\n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数\n    vSize?: number\n  }\n  scrollY: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 Y 虚拟滚动，必须固定所有行高，否则无法兼容）默认500\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number \n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数 默认自动计算\n    vSize?: number \n    // 指定行高 默认自动计算\n    rHeight?: number \n    // 自动适配最优的渲染方式 默认true\n    adaptive?: boolean \n  }\n}",
      "IKeyboardConfig": "interface IKeyboardConfig {\n  // 启用方向键功能\n  isArrow?: boolean \n  isDel?: boolean\n  isTab?: boolean \n  isEdit?: boolean\n}",
      "IMouseConfig": "interface IMouseConfig {\n  // 是否开启左键选中单元格功能（只对 editConfig.mode=cell 有效），默认为 false\n  selected: boolean \n}",
      "IRadioConfig": "interface IRadioConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row' \n  // 单选框显示的字段名，可以直接显示在单选框中\n  labelField?: string |\n  // 默认选中指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKey?: string\n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 Radio 是否可以选中\n  checkMethod?: ()=> boolean\n}",
      "ISelectConfig": "interface ISelectConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row'\n  // 复选框显示的字段名，可以直接显示在复选框中\n  labelField?: string\n  // 默认勾选开指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKeys?: string[] \n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 checkbox 是否可以勾选\n  checkMethod?: ()=> boolean \n  // 默认勾选所有（只会在初始化时被触发一次）}\n  checkAll?: boolean\n  // 是否显示全选按钮（如果 checkStrictly=true 则默认为 false）\n  showHeader?: boolean \n  // 是否严格的遵循父子不互相关联的做法\n  checkStrictly?: boolean\n  // 翻页操作是否保留历史选择数据\n  reserve?: boolean\n}",
      "ISortConfig": "interface ISortConfig {\n  // 排序触发方式，可配置为 cell（点击头部单元格触发排序），不配置时默认为点击上下箭头触发排序\n  trigger?: 'cell'\n}",
      "ITreeConfig": "interface ITreeConfig {\n  // 展开子级触发方式：'default'(点击按钮触发)；'cell'(点击单元格触发)；'row'(点击行触发)\n  trigger?: 'default' | 'cell' | 'row'\n  // 子级索引是否按数字递增显示：true(子级索引按数字递增显示，父级1，子级2)；false(子级索引在父级索引基础上增加，父级1，子级1.1)\n  ordered?: boolean\n  // 控制水平缩进距离，默认 16，单位 px\n  indent?: number\n  // 指定子级数据的字段名\n  children?: string\n  // 是否展开所有行\n  expandAll?: boolean\n  // 默认展开所给数组中的指定行，需要有row-id，可以由行的'_RID'属性获取\n  expandRowKeys?: string[]\n  // 对于同一级的多个子节点，是否只能同时展开一个子节点\n  accordion?: boolean\n}",
      "IValidConfig": "interface IValidConfig {\n  // 校验提示类型，'inline'(内置提示)；'tooltip'(tooltip文字提示)\n  message?: 'inline' | 'tooltip'\n}",
      "ISummaryConfig": "interface ISummaryConfig {\n  // 统计字段名 \n  fields: string[]\n  // 小数点后保留的小数位\n  fraction?: boolean\n  // 是否截断，默认为四舍五入，不截断\n  truncate?: boolean\n  // 统计显示的文本\n   text?: string\n}",
      "IScrollLoadConfig": "interface IScrollLoadConfig {\n  // 是否连续\n  isInfinity: boolean\n  // 每次加载多少条\n  pageSize: number\n}",
      "IEventsConfig": "interface IEventsConfig {\n  [field: string]: ()=> void\n}",
      "IDropConfig": "interface IDropConfig {\n  // sortablejs 插件\n  plugin: Sortable\n  // 开启行拖拽\n  row: boolean\n  // 开启列拖拽\n  column: boolean\n  // 拖拽前函数，返回 false 取消拖动\n  onBeforeMove?: ()=> boolean\n  // 拖拽触发源选择器一般是class类名\n  trigger?: string\n  // 根据行的类名来控制是否可以拖动\n  filter?: string\n  // 如果变动了树层级，可以指定是否需要刷新数据\n  refresh?: boolean\n  }",
      "IEditConfig": "interface IEditConfig {\n  // 激活触发方式\n  trigger: 'click' | 'dblclick' | 'manual'\n  // 激活类型单元格激活或者行\n  mode: 'cell' | 'row'\n  // 是否显示状态\n  showStatus?: boolean\n  // 自定义编辑规则，返回true可以编辑返回false则禁止编辑\n  activeMethod?: ({row: IRow, column: IColumnConfig})=> boolean\n}",
      "IRecordset": "interface IRecordset {\n  insertRecords: IRow[]\n  removeRecords: IRow[]\n  updateRecords: IRow[]\n}",
      "IPageChangeArgs": "interface IPageChangeArgs { \n  // table组件vue实例\n  $grid: Component\n  // 当前页码\n  currentPage: number\n  //当前分页组件布局信息 'total, prev, pager, next, jumper, sizes'\n  layout: string\n  // 当前每页显示条数\n  pageSize: number\n  //可切换的每页条数\n  pageSizes: number[] \n  //总数据条数\n  total: number \n}",
      "IBeforePageChangeArgs": "interface IBeforePageChangeArgs { \n  //新页码\n  newPage: number\n  //新的分页大小 \n  newPageSize: number\n  //当前页码\n  currentPage: number\n  //当前的页大小\n  currentPageSize: number\n  //生效回调\n  callback: ()=> void\n  //失效回调\n  rollback: ()=> void\n}",
      "IToolbarButtonClickArgs": "interface IToolbarButtonClickArgs { \n  //表格组件实例对象信息 \n  $grid: Component\n  //按钮信息对象 \n  button: {\n    code: string\n    name: string\n  }[]\n  // 按钮功能类型\n  code: string\n}",
      "ICellClickArgs": "interface ICellClickArgs {\n  // 当前行\n  row: IRow,\n  // 当前行的下标\n  rowIndex: number\n  // 当前列\n  column: IColumnConfig\n  // 当前列的下标\n  columnIndex: number\n}",
      "ICellContextMenuArgs": "interface ICellContextMenuArgs {\n  // 当前行\n  row: IRow\n}",
      "ICellArgs": "interface ICellArgs {\n  //当前行\n  row: IRow\n  //当前行的下标\n  rowIndex: number\n  // 当前列 \n  column: IColumnConfig\n  // 当前列的下标 \n  columnIndex: number\n}",
      "ICurrentChangeArgs": "interface ICurrentChangeArgs {\n  // 当前行\n  row: IRow\n}",
      "IEditActivedArgs": "interface IEditActivedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditClosedArgs": "interface IEditClosedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditDisabledArgs": "interface IEditDisabledArgs {\n  //当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IFilterChangeArgs": "interface IFilterChangeArgs {\n  //表格的信息对象\n  $table: Component\n  //过滤列的过滤数据信息\n  filters: object\n}",
      "IFooterCellClickArgs": "interface IFooterCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点 \n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IContextMenuArgs": "interface IContextMenuArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 配置清除等功能信息\n  options: object[]\n  // 表格区域类型\n  type: 'header' | 'footer' | 'body'\n}",
      "IFooterCellDblClickArgs": "interface IFooterCellDblClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IHeaderCellClickArgs": "interface IHeaderCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 点击表头单元格\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 当前点击节点过滤标识\n  triggerFilter: boolean\n  // 当前点击节点排序标识\n  triggerSort: boolean\n}",
      "IHeaderCellDblClickArgs": "interface IHeaderCellDblClickArgs {\n  // 列数据\n  column: IColumnConfig  \n  // 列索引\n  columnIndex: number\n  // table组件 vue实例 \n  $table: Component\n  // 点击的单元格dom\n  cell: HTMLElement\n}",
      "IResizableChangeArgs": "interface IResizableChangeArgs {\n  // table组件的vue 实例 \n  $table: Component,\n  // 列配置信息 \n  column: IColumnConfig \n  // 拖动列的索引\n  columnIndex: number\n  // 是否固定列\n  fixed: boolean\n}",
      "IScrollArgs": "interface IScrollArgs {\n  // 表格实例对象信息\n  $table: Component\n  fixed: boolean\n  // X轴滚动\n  isX: boolean\n  // Y轴滚动\n  isY: true\n  // X轴滚动距离\n  scrollLeft: number\n  // Y轴滚动距离\n  scrollTop: number\n  type: 'body' | 'header' | 'footer'\n}",
      "ISelectAllArgs": "interface ISelectAllArgs {\n  $columnIndex: number\n  $rowIndex: number\n  $seq: string\n  // 表格实例对象信息\n  $table: Component \n  // 勾选状态\n  checked: boolean\n  // 列信息\n  column: IColumnConfig\n  // 列下标\n  columnIndex: number\n  // 表格数据\n  data: IRow[]\n  fixed: boolean\n  isHidden: boolean\n  level: number\n  // 勾选项的行数据信息\n  row: IRow\n  // 勾选项的行下标\n  rowIndex: number\n  // 选中的数据\n  selection: IRow[]\n  seq: number\n}",
      "IToggleExpandChangeArgs": "interface IToggleExpandChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IToggleTreeChangeArgs": "interface IToggleTreeChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IValidErrorArgs": "interface IValidErrorArgs { \n  // 校验的单元格信息对象\n  cell: Cell\n  //校验单元格所在列的列配置信息对象\n  column: IColumnConfig\n  //校验单元格所在行的信息对象\n  row: IRow\n  // 校验规则信息对象 \n  rule: object\n}",
      "ISortChangeArgs": "interface ISortChangeArgs { \n  // 表格实例对象信息\n  $grid: Component\n  // 列信息\n  column: IColumnConfig\n  // 排序的字段名\n  field: string \n  // 排序类型升序或降序\n  order: 'asc' | 'desc' \n  prop: string\n  property: string\n}",
      "IClassNameArgs": "interface IClassNameArgs {\n  seq: number\n  row: IRow\n  rowIndex: number\n  $rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n  $columnIndex: number\n}",
      "IIndexMethodArgs": "interface IIndexMethodArgs {\n  row: IRow\n  rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IFormatConfig": "interface IFormatConfig {\n  // 列数据源\n  data: IColumnConfig[] \n  // 内置渲染器类型，与 format-text 属性取值相同\n  type: 'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate'\n  // 配置为 true 后，支持动态修改 data 的数据。还可以配置为对象，配置为对象时，对象中可以配置 splitConfig.enabled（是否启用分隔配置）、splitConfig.valueSplit（指定 value 值的分隔符）、splitConfig.textSplit（指定 text 的分隔符）、fetch（列数据异步渲染，请求数据）\n  async: true, \n  // 单元格显示内容的映射\n  label: string\n  // 单元格取值的映射\n  value: string\n}",
      "IButtonClick": "interface IButtonClick { \n  // 表格组件实例对象信息\n  $grid: Component \n  // 按钮列表信息对象   \n  button: {\n    code: string\n    name: string\n  }[]\n   // 按钮类型 \n   code: string\n  }",
      "ISettingConfigs": "interface ISettingConfigs {\n  sortType: 'page' | 'all'\n  pageSize: number\n  columns: {\n    property: string\n    order: 'asc' | 'desc' | null \n    visible: boolean\n    sortable: boolean\n  }[]\n}",
      "ISpanMethodArgs": "interface ISpanMethodArgs {\n  // 行标\n  $rowIndex: number\n  // 列数据  \n  column: IColumnConfig\n  // 列下标 \n  columnIndex: number\n  // 一个数组，保存了当前合并和计算的数据\n  data: (string | number | null)[][]\n}",
      "IExportCsvOptions": "interface IExportCsvOptions {\n  filename: string\n  original: boolean\n  isHeader: boolean\n  data: IRow[]\n}",
      "IEditorConfig": "interface IEditorConfig {\n  // 内置组件名称或者自定义组件实例\n  component: 'input' | 'select' | Component\n  // 传递给组件的事件集合\n  events?: {\n    [event]: ()=> void\n  }\n  // 传递给编辑器组件的属性集合\n  attrs?: {\n    [prop]: any\n  }\n  // select 内置组件独有的下拉数据配置项\n  options?: object[]\n}",
      "IFilterConfig": "interface IFilterConfig {\n  // 设置在显示枚举选项功能是否为多选, 仅在 enumable:true 下有效\n  multi: boolean\n  // 设置在过滤面板中显示枚举选项\n  enumable: boolean\n  // 设置在过滤面板中显示默认的筛选条件\n  defaultFilter: boolean\n  // 设置在过滤面板中显示输入筛选的项\n  inputFilter: boolean\n  // 设置在显示枚举选项功能(enumable)下制定静态数据源，也可以是函数返回一个Promise对象\n  values: {\n    // 设置枚举数据的显示值属性字段， 默认'label'\n    label: string\n    // 设置枚举数据的实际值属性字段， 默认'value'\n    value: string \n  }[] | ()=> Promise\n}",
      "IOPConfig": "interface IOPConfig {\n  editConfig?: IEditConfig\n  pagerConfig?: IPagerConfig\n  columns: IColumnConfig[]\n  data: IRow[]\n}",
      "IFormatText": "'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate' | 'boole' | (params)=> string",
      "IToolbarSetting": "interface IToolbarSetting {\n        remote?: boolean\n        storage?: string\n        sortable?: Sortable \n      }"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "自定义显示内容模板，作用插槽参数说明：slots.default({ $table, column, row },h)，$table：表格组件对象，column：当前列配置，row：当前行数据,h：vue的渲染函数",
        "description_zh": "自定义显示内容模板，作用插槽参数说明：slots.default({ $table, column, row },h)，$table：表格组件对象，column：当前列配置，row：当前行数据,h：vue的渲染函数"
      },
      {
        "name": "edit",
        "description": "自定义可编辑组件模板，作用插槽参数说明：slots.edit({ $table, column, row },h)，$table：表格组件对象，column：当前列配置，row：当前行数据,h：vue的渲染函数",
        "description_zh": "自定义可编辑组件模板，作用插槽参数说明：slots.edit({ $table, column, row },h)，$table：表格组件对象，column：当前列配置，row：当前行数据,h：vue的渲染函数"
      },
      {
        "name": "filter",
        "description": "自定义筛选模板，作用插槽参数说明：slots.filter({ $grid, values, args, context },h)，$grid：表格组件对象，values：筛选项集合，args：筛选相关参数,context：筛选面板组件上下文对象",
        "description_zh": "自定义筛选模板，作用插槽参数说明：slots.filter({ $grid, values, args, context },h)，$grid：表格组件对象，values：筛选项集合，args：筛选相关参数,context：筛选面板组件上下文对象"
      },
      {
        "name": "header",
        "description": "自定义表头内容的模板，作用插槽参数说明：slots.header({ $table, column, columnIndex，$rowIndex},h)，$table：表格组件对象，column：当前列配置，columnIndex：当前列索引,$rowIndex:当前行索引,h：vue的渲染函数",
        "description_zh": "自定义表头内容的模板，作用插槽参数说明：slots.header({ $table, column, columnIndex，$rowIndex},h)，$table：表格组件对象，column：当前列配置，columnIndex：当前列索引,$rowIndex:当前行索引,h：vue的渲染函数"
      }
    ],
    "filename": "GridColumn"
  },
  {
    "name": "TinyGridToolbar",
    "props": {
      "before-close-full-screen": {
        "default": "--",
        "value": "",
        "type": "()=> boolean",
        "description": "关闭全屏前的拦截方法，返回 false 则阻止关闭全屏，返回 true 则不阻止",
        "description_zh": "关闭全屏前的拦截方法，返回 false 则阻止关闭全屏，返回 true 则不阻止"
      },
      "before-open-full-screen": {
        "default": "--",
        "value": "",
        "type": "()=> boolean",
        "description": "全屏前的拦截方法，返回 false 则阻止全屏，返回 true 则不阻止",
        "description_zh": "全屏前的拦截方法，返回 false 则阻止全屏，返回 true 则不阻止"
      },
      "buttons": {
        "default": "--",
        "value": "",
        "type": "{            code: string            name: string          }[]",
        "description": "按钮列表",
        "description_zh": "按钮列表"
      },
      "full-screen": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置表格是否可以全屏，或者需要全屏的容器；设置工具栏属性是否显示全屏按钮",
        "description_zh": "设置表格是否可以全屏，或者需要全屏的容器；设置工具栏属性是否显示全屏按钮"
      },
      "id": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "唯一 ID 标识",
        "description_zh": "唯一 ID 标识"
      },
      "refresh": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "工具栏组件开启表格刷新功能",
        "description_zh": "工具栏组件开启表格刷新功能"
      },
      "resizable": {
        "default": "--",
        "value": "",
        "type": "boolean | {storage: boolean}",
        "description": "列宽拖动配置（需要设置 id）",
        "description_zh": "列宽拖动配置（需要设置 id）"
      },
      "setting": {
        "default": "--",
        "value": "",
        "type": "boolean | IToolbarSetting",
        "description": "设置表格属性是否显示个性化面板，当设置表格的 name 属性时有效；设置工具栏属性是否显示个性化配置（需要设置 id ）",
        "description_zh": "设置表格属性是否显示个性化面板，当设置表格的 name 属性时有效；设置工具栏属性是否显示个性化配置（需要设置 id ）"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "表格的尺寸",
        "description_zh": "表格的尺寸"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "typeDetail": {
      "IRow": "interface IRow {\n  // 表格行数据\n  [filed: string]: any\n}",
      "IColumnConfig": "interface IColumnConfig {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  prop: string\n  rules: IValidRules\n  required: boolean\n  property: string\n  title: string\n  label: string\n  width: string | number\n  minWidth: string | number\n  resizable: boolean\n  fixed: boolean\n  align: 'left' | 'center' | 'right'\n  headerAlign: 'left' | 'center' | 'right'\n  footerAlign: 'left' | 'center' | 'right'\n  showOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showHeaderOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showTip: boolean\n  showHeaderTip: boolean\n  className: string\n  headerClassName: string\n  footerClassName: string\n}",
      "IPagerConfig": "interface IPagerConfig {\n  component?: Component\n  attrs: {\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    total: number\n    // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n    layout: string\n  }\n}",
      "IDataHandler": "interface IDataHandler {\n  api: ()=> Promise\n}",
      "IRowGroup": "interface IRowGroup {\n  // 列标识符，行分组会将具有相同值的列进行分组展示\n  field: string\n}",
      "IToolbarConfig": "interface IToolbarConfig {\n  component: GridToolbar\n  buttons: {\n    code: string\n    name: string\n  }[]\n}",
      "IToolTipConfig": "interface IToolTipConfig {\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'\n  visibleArrow?: boolean\n  enterable?: boolean\n  type?: 'normal' | 'warning' | 'error' | 'info' | 'success'\n  effect?: 'dark' | 'light'\n  // 自定义提示内容\n  contentMethod?: ()=> string | VNode\n}",
      "IContextMenuConfig": "interface IMenuOptions {\n  code: string\n  name: string\n  visible?: boolean\n  disabled?: boolean\n}\n\ninterface IContextMenuConfig {\n  body?: { \n    options: IMenuOptions\n  }\n  footer?: { \n    options: IMenuOptions\n  }\n  visibleMethod?: ()=> boolean\n}",
      "IValidRules": "interface IValidRules {\n [filed:string]: { \n  type?: string\n  required?: boolean\n  validator?: () => boolean\n  message?: string\n  min?: number\n  max?: number\n }\n}[]",
      "IExpandConfig": "interface IExpandConfig {\n  // 默认展开所有行\n  expandAll?: boolean \n  // 触发方式 default（点击按钮触发）,cell（点击单元格触发）,row（点击行触发）\n  trigger?: 'default' | 'row' | cell\n  // 默认展开指定行（需要有 row-id）\n  expandRowKeys?: string[]\n  // 对于同一级的节点，每次只能展开一个\n  accordion?: boolean\n  // 控制是否渲染展开行\n  activeMethod?:({row: IRow})=> boolean\n  // 配置是否显示展开图标\n  showIcon?: boolean \n}",
      "IOptimizationConfig": "interface IOptimizationConfig {\n  animat: boolean\n  delayHover: number\n  scrollX: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 X 虚拟滚动，必须固定所有列宽，否则无法兼容）默认100\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number\n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数\n    vSize?: number\n  }\n  scrollY: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 Y 虚拟滚动，必须固定所有行高，否则无法兼容）默认500\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number \n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数 默认自动计算\n    vSize?: number \n    // 指定行高 默认自动计算\n    rHeight?: number \n    // 自动适配最优的渲染方式 默认true\n    adaptive?: boolean \n  }\n}",
      "IKeyboardConfig": "interface IKeyboardConfig {\n  // 启用方向键功能\n  isArrow?: boolean \n  isDel?: boolean\n  isTab?: boolean \n  isEdit?: boolean\n}",
      "IMouseConfig": "interface IMouseConfig {\n  // 是否开启左键选中单元格功能（只对 editConfig.mode=cell 有效），默认为 false\n  selected: boolean \n}",
      "IRadioConfig": "interface IRadioConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row' \n  // 单选框显示的字段名，可以直接显示在单选框中\n  labelField?: string |\n  // 默认选中指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKey?: string\n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 Radio 是否可以选中\n  checkMethod?: ()=> boolean\n}",
      "ISelectConfig": "interface ISelectConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row'\n  // 复选框显示的字段名，可以直接显示在复选框中\n  labelField?: string\n  // 默认勾选开指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKeys?: string[] \n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 checkbox 是否可以勾选\n  checkMethod?: ()=> boolean \n  // 默认勾选所有（只会在初始化时被触发一次）}\n  checkAll?: boolean\n  // 是否显示全选按钮（如果 checkStrictly=true 则默认为 false）\n  showHeader?: boolean \n  // 是否严格的遵循父子不互相关联的做法\n  checkStrictly?: boolean\n  // 翻页操作是否保留历史选择数据\n  reserve?: boolean\n}",
      "ISortConfig": "interface ISortConfig {\n  // 排序触发方式，可配置为 cell（点击头部单元格触发排序），不配置时默认为点击上下箭头触发排序\n  trigger?: 'cell'\n}",
      "ITreeConfig": "interface ITreeConfig {\n  // 展开子级触发方式：'default'(点击按钮触发)；'cell'(点击单元格触发)；'row'(点击行触发)\n  trigger?: 'default' | 'cell' | 'row'\n  // 子级索引是否按数字递增显示：true(子级索引按数字递增显示，父级1，子级2)；false(子级索引在父级索引基础上增加，父级1，子级1.1)\n  ordered?: boolean\n  // 控制水平缩进距离，默认 16，单位 px\n  indent?: number\n  // 指定子级数据的字段名\n  children?: string\n  // 是否展开所有行\n  expandAll?: boolean\n  // 默认展开所给数组中的指定行，需要有row-id，可以由行的'_RID'属性获取\n  expandRowKeys?: string[]\n  // 对于同一级的多个子节点，是否只能同时展开一个子节点\n  accordion?: boolean\n}",
      "IValidConfig": "interface IValidConfig {\n  // 校验提示类型，'inline'(内置提示)；'tooltip'(tooltip文字提示)\n  message?: 'inline' | 'tooltip'\n}",
      "ISummaryConfig": "interface ISummaryConfig {\n  // 统计字段名 \n  fields: string[]\n  // 小数点后保留的小数位\n  fraction?: boolean\n  // 是否截断，默认为四舍五入，不截断\n  truncate?: boolean\n  // 统计显示的文本\n   text?: string\n}",
      "IScrollLoadConfig": "interface IScrollLoadConfig {\n  // 是否连续\n  isInfinity: boolean\n  // 每次加载多少条\n  pageSize: number\n}",
      "IEventsConfig": "interface IEventsConfig {\n  [field: string]: ()=> void\n}",
      "IDropConfig": "interface IDropConfig {\n  // sortablejs 插件\n  plugin: Sortable\n  // 开启行拖拽\n  row: boolean\n  // 开启列拖拽\n  column: boolean\n  // 拖拽前函数，返回 false 取消拖动\n  onBeforeMove?: ()=> boolean\n  // 拖拽触发源选择器一般是class类名\n  trigger?: string\n  // 根据行的类名来控制是否可以拖动\n  filter?: string\n  // 如果变动了树层级，可以指定是否需要刷新数据\n  refresh?: boolean\n  }",
      "IEditConfig": "interface IEditConfig {\n  // 激活触发方式\n  trigger: 'click' | 'dblclick' | 'manual'\n  // 激活类型单元格激活或者行\n  mode: 'cell' | 'row'\n  // 是否显示状态\n  showStatus?: boolean\n  // 自定义编辑规则，返回true可以编辑返回false则禁止编辑\n  activeMethod?: ({row: IRow, column: IColumnConfig})=> boolean\n}",
      "IRecordset": "interface IRecordset {\n  insertRecords: IRow[]\n  removeRecords: IRow[]\n  updateRecords: IRow[]\n}",
      "IPageChangeArgs": "interface IPageChangeArgs { \n  // table组件vue实例\n  $grid: Component\n  // 当前页码\n  currentPage: number\n  //当前分页组件布局信息 'total, prev, pager, next, jumper, sizes'\n  layout: string\n  // 当前每页显示条数\n  pageSize: number\n  //可切换的每页条数\n  pageSizes: number[] \n  //总数据条数\n  total: number \n}",
      "IBeforePageChangeArgs": "interface IBeforePageChangeArgs { \n  //新页码\n  newPage: number\n  //新的分页大小 \n  newPageSize: number\n  //当前页码\n  currentPage: number\n  //当前的页大小\n  currentPageSize: number\n  //生效回调\n  callback: ()=> void\n  //失效回调\n  rollback: ()=> void\n}",
      "IToolbarButtonClickArgs": "interface IToolbarButtonClickArgs { \n  //表格组件实例对象信息 \n  $grid: Component\n  //按钮信息对象 \n  button: {\n    code: string\n    name: string\n  }[]\n  // 按钮功能类型\n  code: string\n}",
      "ICellClickArgs": "interface ICellClickArgs {\n  // 当前行\n  row: IRow,\n  // 当前行的下标\n  rowIndex: number\n  // 当前列\n  column: IColumnConfig\n  // 当前列的下标\n  columnIndex: number\n}",
      "ICellContextMenuArgs": "interface ICellContextMenuArgs {\n  // 当前行\n  row: IRow\n}",
      "ICellArgs": "interface ICellArgs {\n  //当前行\n  row: IRow\n  //当前行的下标\n  rowIndex: number\n  // 当前列 \n  column: IColumnConfig\n  // 当前列的下标 \n  columnIndex: number\n}",
      "ICurrentChangeArgs": "interface ICurrentChangeArgs {\n  // 当前行\n  row: IRow\n}",
      "IEditActivedArgs": "interface IEditActivedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditClosedArgs": "interface IEditClosedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditDisabledArgs": "interface IEditDisabledArgs {\n  //当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IFilterChangeArgs": "interface IFilterChangeArgs {\n  //表格的信息对象\n  $table: Component\n  //过滤列的过滤数据信息\n  filters: object\n}",
      "IFooterCellClickArgs": "interface IFooterCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点 \n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IContextMenuArgs": "interface IContextMenuArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 配置清除等功能信息\n  options: object[]\n  // 表格区域类型\n  type: 'header' | 'footer' | 'body'\n}",
      "IFooterCellDblClickArgs": "interface IFooterCellDblClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IHeaderCellClickArgs": "interface IHeaderCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 点击表头单元格\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 当前点击节点过滤标识\n  triggerFilter: boolean\n  // 当前点击节点排序标识\n  triggerSort: boolean\n}",
      "IHeaderCellDblClickArgs": "interface IHeaderCellDblClickArgs {\n  // 列数据\n  column: IColumnConfig  \n  // 列索引\n  columnIndex: number\n  // table组件 vue实例 \n  $table: Component\n  // 点击的单元格dom\n  cell: HTMLElement\n}",
      "IResizableChangeArgs": "interface IResizableChangeArgs {\n  // table组件的vue 实例 \n  $table: Component,\n  // 列配置信息 \n  column: IColumnConfig \n  // 拖动列的索引\n  columnIndex: number\n  // 是否固定列\n  fixed: boolean\n}",
      "IScrollArgs": "interface IScrollArgs {\n  // 表格实例对象信息\n  $table: Component\n  fixed: boolean\n  // X轴滚动\n  isX: boolean\n  // Y轴滚动\n  isY: true\n  // X轴滚动距离\n  scrollLeft: number\n  // Y轴滚动距离\n  scrollTop: number\n  type: 'body' | 'header' | 'footer'\n}",
      "ISelectAllArgs": "interface ISelectAllArgs {\n  $columnIndex: number\n  $rowIndex: number\n  $seq: string\n  // 表格实例对象信息\n  $table: Component \n  // 勾选状态\n  checked: boolean\n  // 列信息\n  column: IColumnConfig\n  // 列下标\n  columnIndex: number\n  // 表格数据\n  data: IRow[]\n  fixed: boolean\n  isHidden: boolean\n  level: number\n  // 勾选项的行数据信息\n  row: IRow\n  // 勾选项的行下标\n  rowIndex: number\n  // 选中的数据\n  selection: IRow[]\n  seq: number\n}",
      "IToggleExpandChangeArgs": "interface IToggleExpandChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IToggleTreeChangeArgs": "interface IToggleTreeChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IValidErrorArgs": "interface IValidErrorArgs { \n  // 校验的单元格信息对象\n  cell: Cell\n  //校验单元格所在列的列配置信息对象\n  column: IColumnConfig\n  //校验单元格所在行的信息对象\n  row: IRow\n  // 校验规则信息对象 \n  rule: object\n}",
      "ISortChangeArgs": "interface ISortChangeArgs { \n  // 表格实例对象信息\n  $grid: Component\n  // 列信息\n  column: IColumnConfig\n  // 排序的字段名\n  field: string \n  // 排序类型升序或降序\n  order: 'asc' | 'desc' \n  prop: string\n  property: string\n}",
      "IClassNameArgs": "interface IClassNameArgs {\n  seq: number\n  row: IRow\n  rowIndex: number\n  $rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n  $columnIndex: number\n}",
      "IIndexMethodArgs": "interface IIndexMethodArgs {\n  row: IRow\n  rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IFormatConfig": "interface IFormatConfig {\n  // 列数据源\n  data: IColumnConfig[] \n  // 内置渲染器类型，与 format-text 属性取值相同\n  type: 'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate'\n  // 配置为 true 后，支持动态修改 data 的数据。还可以配置为对象，配置为对象时，对象中可以配置 splitConfig.enabled（是否启用分隔配置）、splitConfig.valueSplit（指定 value 值的分隔符）、splitConfig.textSplit（指定 text 的分隔符）、fetch（列数据异步渲染，请求数据）\n  async: true, \n  // 单元格显示内容的映射\n  label: string\n  // 单元格取值的映射\n  value: string\n}",
      "IButtonClick": "interface IButtonClick { \n  // 表格组件实例对象信息\n  $grid: Component \n  // 按钮列表信息对象   \n  button: {\n    code: string\n    name: string\n  }[]\n   // 按钮类型 \n   code: string\n  }",
      "ISettingConfigs": "interface ISettingConfigs {\n  sortType: 'page' | 'all'\n  pageSize: number\n  columns: {\n    property: string\n    order: 'asc' | 'desc' | null \n    visible: boolean\n    sortable: boolean\n  }[]\n}",
      "ISpanMethodArgs": "interface ISpanMethodArgs {\n  // 行标\n  $rowIndex: number\n  // 列数据  \n  column: IColumnConfig\n  // 列下标 \n  columnIndex: number\n  // 一个数组，保存了当前合并和计算的数据\n  data: (string | number | null)[][]\n}",
      "IExportCsvOptions": "interface IExportCsvOptions {\n  filename: string\n  original: boolean\n  isHeader: boolean\n  data: IRow[]\n}",
      "IEditorConfig": "interface IEditorConfig {\n  // 内置组件名称或者自定义组件实例\n  component: 'input' | 'select' | Component\n  // 传递给组件的事件集合\n  events?: {\n    [event]: ()=> void\n  }\n  // 传递给编辑器组件的属性集合\n  attrs?: {\n    [prop]: any\n  }\n  // select 内置组件独有的下拉数据配置项\n  options?: object[]\n}",
      "IFilterConfig": "interface IFilterConfig {\n  // 设置在显示枚举选项功能是否为多选, 仅在 enumable:true 下有效\n  multi: boolean\n  // 设置在过滤面板中显示枚举选项\n  enumable: boolean\n  // 设置在过滤面板中显示默认的筛选条件\n  defaultFilter: boolean\n  // 设置在过滤面板中显示输入筛选的项\n  inputFilter: boolean\n  // 设置在显示枚举选项功能(enumable)下制定静态数据源，也可以是函数返回一个Promise对象\n  values: {\n    // 设置枚举数据的显示值属性字段， 默认'label'\n    label: string\n    // 设置枚举数据的实际值属性字段， 默认'value'\n    value: string \n  }[] | ()=> Promise\n}",
      "IOPConfig": "interface IOPConfig {\n  editConfig?: IEditConfig\n  pagerConfig?: IPagerConfig\n  columns: IColumnConfig[]\n  data: IRow[]\n}",
      "IFormatText": "'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate' | 'boole' | (params)=> string",
      "IToolbarSetting": "interface IToolbarSetting {\n        remote?: boolean\n        storage?: string\n        sortable?: Sortable \n      }"
    },
    "events": [
      {
        "name": "button-click",
        "description": "当工具栏的按钮被点击时会后触发该事件",
        "description_zh": "当工具栏的按钮被点击时会后触发该事件",
        "params": "(args: IButtonClick, event: Event)=> void"
      },
      {
        "name": "cancel-setting",
        "description": "点击个性化面板的取消按钮触发该事件",
        "description_zh": "点击个性化面板的取消按钮触发该事件",
        "params": "(args: ISettingConfigs)=> void"
      },
      {
        "name": "reset-setting",
        "description": "点击个性化面板的重置按钮触发该事件",
        "description_zh": "点击个性化面板的重置按钮触发该事件",
        "params": "()=> void"
      },
      {
        "name": "save-setting",
        "description": "点击个性化面板的确认按钮触发该事件",
        "description_zh": "点击个性化面板的确认按钮触发该事件",
        "params": "(args: ISettingConfigs)=> void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "buttons",
        "description": "按钮列表",
        "description_zh": "按钮列表"
      },
      {
        "name": "toolbar",
        "description": "工具栏插槽",
        "description_zh": "工具栏插槽"
      }
    ],
    "filename": "GridToolbar"
  },
  {
    "name": "TinyBadge",
    "props": {
      "badge-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "自定义标记的类名",
        "description_zh": "自定义标记的类名"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "文本内容",
        "description_zh": "文本内容"
      },
      "hidden": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否隐藏标记",
        "description_zh": "是否隐藏标记"
      },
      "href": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "指定跳转的目标页面地址",
        "description_zh": "指定跳转的目标页面地址"
      },
      "is-dot": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否以小圆点的形式来显示标记",
        "description_zh": "是否以小圆点的形式来显示标记"
      },
      ":max": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "指定徽章显示的最大值，如果实际获取的徽章值超过该最大值，则以最大值后接一个 '+' 的形式显示徽章数，要求 value 是 number 类型",
        "description_zh": "指定徽章显示的最大值，如果实际获取的徽章值超过该最大值，则以最大值后接一个 '+' 的形式显示徽章数，要求 value 是 number 类型"
      },
      "offset": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置标记位置的偏移量",
        "description_zh": "设置标记位置的偏移量"
      },
      "target": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "点击标记时链接到目标页面的跳转方式，仅在 href 属性存在时使用",
        "description_zh": "点击标记时链接到目标页面的跳转方式，仅在 href 属性存在时使用"
      },
      "type": {
        "default": "'danger'",
        "value": "",
        "type": "IPtype",
        "description": "标记的类型",
        "description_zh": "标记的类型"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "相关数据条目数",
        "description_zh": "相关数据条目数"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/badge",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/badge",
    "typeDetail": {
      "IPtype": "type IPtype = 'primary' | 'success' | 'warning' | 'danger' | 'info'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "content",
        "description": "消息提示内容",
        "description_zh": "消息提示内容"
      },
      {
        "name": "default",
        "description": "默认插槽，有data属性时，默认插槽不生效",
        "description_zh": "默认插槽，有data属性时，默认插槽不生效"
      }
    ],
    "filename": "Badge"
  },
  {
    "name": "TinyCalendar",
    "props": {
      "events": {
        "default": "--",
        "value": "",
        "type": "eventLists[]",
        "description": "事件列表",
        "description_zh": "事件列表"
      },
      "mode": {
        "default": "'month'",
        "value": "",
        "type": "'month' | 'year'",
        "description": "日历显示模式",
        "description_zh": "日历显示模式"
      },
      ":month": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "指定月份，默认当前月份",
        "description_zh": "指定月份，默认当前月份"
      },
      "show-selected": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示选中的日期",
        "description_zh": "是否显示选中的日期"
      },
      ":year": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "指定年份，默认当前年份",
        "description_zh": "指定年份，默认当前年份"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/calendar",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/calendar",
    "typeDetail": {
      "eventLists": "interface eventLists [{\n        time: 1534297845236, // 指定需要展示事件的日期\n        title: '消息', // 指定事件标题\n        content: '这是一条消息', // 指定事件的具体内容\n        type: 'info' // 事件主题类型，包括 warning、error、info、success。\n      }]"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "day",
        "description": "日期单元格插槽",
        "description_zh": "日期单元格插槽"
      },
      {
        "name": "tool",
        "description": "日历工具栏插槽",
        "description_zh": "日历工具栏插槽"
      }
    ],
    "filename": "Calendar"
  },
  {
    "name": "TinyCalendarView",
    "props": {
      "day-times": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "配置时间线模式下所展示的时间范围，默认为[8,18]，可配范围[0,23]。",
        "description_zh": "配置时间线模式下所展示的时间范围，默认为[8,18]，可配范围[0,23]。"
      },
      "disabled": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "日期禁用",
        "description_zh": "日期禁用"
      },
      "events": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "日程事件",
        "description_zh": "日程事件"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "日历高度",
        "description_zh": "日历高度"
      },
      "mark-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "点标记的颜色",
        "description_zh": "点标记的颜色"
      },
      "mode": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "显示模式，可选值有 timeline-时间线模式、schedule-日程模式、month-月模式，默认为月模式。",
        "description_zh": "显示模式，可选值有 timeline-时间线模式、schedule-日程模式、month-月模式，默认为月模式。"
      },
      "modes": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "模式组，显示模式任意组合",
        "description_zh": "模式组，显示模式任意组合"
      },
      "month": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "日历当前显示月份",
        "description_zh": "日历当前显示月份"
      },
      "multi-select": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "日期多选",
        "description_zh": "日期多选"
      },
      "set-day-bg-color": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "设置日期背景色",
        "description_zh": "设置日期背景色"
      },
      "show-mark": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "显示点标记",
        "description_zh": "显示点标记"
      },
      "show-new-schedule": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "显示新增日程按钮",
        "description_zh": "显示新增日程按钮"
      },
      ":year": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "日历当前显示年份",
        "description_zh": "日历当前显示年份"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/calendar-view",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/calendar-view",
    "typeDetail": {},
    "events": [
      {
        "name": "month-change",
        "description": "",
        "description_zh": "",
        "params": "月改变事件"
      },
      {
        "name": "new-schedule",
        "description": "",
        "description_zh": "",
        "params": "新增日程按钮点击事件"
      },
      {
        "name": "next-week-click",
        "description": "",
        "description_zh": "",
        "params": "下一周按钮点击事件"
      },
      {
        "name": "prev-week-click",
        "description": "",
        "description_zh": "",
        "params": "上一周按钮点击事件"
      },
      {
        "name": "selected-date-change",
        "description": "",
        "description_zh": "",
        "params": "选中日期改变事件"
      },
      {
        "name": "week-change",
        "description": "",
        "description_zh": "",
        "params": "周改变事件"
      },
      {
        "name": "year-change",
        "description": "",
        "description_zh": "",
        "params": "年改变事件"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "header",
        "description": "头部插槽",
        "description_zh": "头部插槽"
      },
      {
        "name": "timeline",
        "description": "时间线插槽，有timeline1-timeline7 7个插槽",
        "description_zh": "时间线插槽，有timeline1-timeline7 7个插槽"
      },
      {
        "name": "tool",
        "description": "工具栏插槽",
        "description_zh": "工具栏插槽"
      },
      {
        "name": "weekday",
        "description": "日程插槽，有weekday1-weekday7 7个插槽",
        "description_zh": "日程插槽，有weekday1-weekday7 7个插槽"
      }
    ],
    "filename": "CalendarView"
  },
  {
    "name": "TinyCard",
    "props": {
      "auto-width": {
        "default": "--",
        "value": "",
        "type": "Boolean",
        "description": "卡片的宽度是否自动撑开，设置后将不再给卡片设置固定宽度",
        "description_zh": "卡片的宽度是否自动撑开，设置后将不再给卡片设置固定宽度"
      },
      "check-type": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "设置卡片单选、多选，单选/radio；多选/checkbox，需同时设置 label。",
        "description_zh": "设置卡片单选、多选，单选/radio；多选/checkbox，需同时设置 label。"
      },
      "custom-class": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "卡片的class",
        "description_zh": "卡片的class"
      },
      "disabled": {
        "default": "--",
        "value": "",
        "type": "Boolean",
        "description": "卡片禁用",
        "description_zh": "卡片禁用"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "卡片内容区域的高度",
        "description_zh": "卡片内容区域的高度"
      },
      "icon-more": {
        "default": "--",
        "value": "",
        "type": "Object",
        "description": "更多按钮图标，可传入一个svg图标对象进行替换",
        "description_zh": "更多按钮图标，可传入一个svg图标对象进行替换"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "String / Number",
        "description": "checkbox或radio的label",
        "description_zh": "checkbox或radio的label"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "操作按钮配置",
        "description_zh": "操作按钮配置"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "尺寸，支持large、medium、small、mini 4个尺寸，默认值为medium",
        "description_zh": "尺寸，支持large、medium、small、mini 4个尺寸，默认值为medium"
      },
      "src": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "图片或者视频的地址",
        "description_zh": "图片或者视频的地址"
      },
      "status": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "卡片状态，支持 success、warning、alerting、danger 4 种状态",
        "description_zh": "卡片状态，支持 success、warning、alerting、danger 4 种状态"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "卡片的标题",
        "description_zh": "卡片的标题"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "设置卡片类型，支持 text、image、video、logo 4 种类型。",
        "description_zh": "设置卡片类型，支持 text、image、video、logo 4 种类型。"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "绑定值，默认为空",
        "description_zh": "绑定值，默认为空"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/card",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/card",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "组件选中/取消选中事件",
        "description_zh": "组件选中/取消选中事件",
        "params": "Function()"
      },
      {
        "name": "click",
        "description": "点击卡片事件",
        "description_zh": "点击卡片事件",
        "params": "Function()"
      },
      {
        "name": "icon-click",
        "description": "操作栏按钮点击事件",
        "description_zh": "操作栏按钮点击事件",
        "params": "Function()"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "组件默认插槽",
        "description_zh": "组件默认插槽"
      },
      {
        "name": "footer",
        "description": "组件默认插槽",
        "description_zh": "组件默认插槽"
      },
      {
        "name": "title",
        "description": "标题插槽",
        "description_zh": "标题插槽"
      },
      {
        "name": "title-left",
        "description": "标题左侧插槽",
        "description_zh": "标题左侧插槽"
      },
      {
        "name": "title-right",
        "description": "标题右侧插槽",
        "description_zh": "标题右侧插槽"
      }
    ],
    "filename": "Card"
  },
  {
    "name": "TinyCarousel",
    "props": {
      "arrow": {
        "default": "'hover'",
        "value": "",
        "type": "string",
        "description": "切换箭头的显示效果，该属性的可选值为 always / hover / never",
        "description_zh": "切换箭头的显示效果，该属性的可选值为 always / hover / never"
      },
      "autoplay": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否自动切换",
        "description_zh": "是否自动切换"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "走马灯的高度",
        "description_zh": "走马灯的高度"
      },
      "indicator-position": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "指示器的位置，该属性的可选值为 outside / none",
        "description_zh": "指示器的位置，该属性的可选值为 outside / none"
      },
      ":initial-index": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "初始状态激活的幻灯片的索引，从 0 开始",
        "description_zh": "初始状态激活的幻灯片的索引，从 0 开始"
      },
      ":interval": {
        "default": "3000",
        "value": "",
        "type": "number",
        "description": "自动切换的时间间隔，单位为毫秒",
        "description_zh": "自动切换的时间间隔，单位为毫秒"
      },
      "loop": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否循环显示",
        "description_zh": "是否循环显示"
      },
      "show-title": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示标题",
        "description_zh": "是否显示标题"
      },
      "trigger": {
        "default": "'hover'",
        "value": "",
        "type": "string",
        "description": "指示器的触发方式，该属性的可选值为 hover / click",
        "description_zh": "指示器的触发方式，该属性的可选值为 hover / click"
      },
      "type": {
        "default": "'horizontal'",
        "value": "",
        "type": "string",
        "description": "走马灯的类型，该属性的可选值为 horizontal / vertical / card",
        "description_zh": "走马灯的类型，该属性的可选值为 horizontal / vertical / card"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/carousel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/carousel",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "幻灯片切换时触发，第一个参数为当前幻灯片索引，第二个参数为上一张幻灯片索引",
        "description_zh": "幻灯片切换时触发，第一个参数为当前幻灯片索引，第二个参数为上一张幻灯片索引",
        "params": "(curIndex: number, preIndex: number) => void"
      }
    ],
    "methods": [
      {
        "name": "next",
        "description": "切换至下一张幻灯片",
        "params": "",
        "description_zh": "切换至下一张幻灯片"
      },
      {
        "name": "prev",
        "description": "切换至上一张幻灯片",
        "params": "",
        "description_zh": "切换至上一张幻灯片"
      },
      {
        "name": "setActiveItem",
        "description": "手动切换幻灯片，参数为需要切换的幻灯片的索引，从 0 开始",
        "params": "",
        "description_zh": "手动切换幻灯片，参数为需要切换的幻灯片的索引，从 0 开始"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "Carousel"
  },
  {
    "name": "TinyCarouselItem",
    "props": {
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "幻灯片名称",
        "description_zh": "幻灯片名称"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "幻灯片标题",
        "description_zh": "幻灯片标题"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/carousel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/carousel",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "CarouselItem"
  },
  {
    "name": "TinyCollapse",
    "props": {
      "accordion": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否手风琴模式",
        "description_zh": "是否手风琴模式"
      },
      "before-close": {
        "default": "--",
        "value": "",
        "type": "(item: Component, activeNames: string | number | Array) => boolean",
        "description": "阻止折叠面板切换",
        "description_zh": "阻止折叠面板切换"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number | Array",
        "description": "当前激活的面板。如果是手风琴模式，绑定值类型需要为 string | number，否则为 Array",
        "description_zh": "当前激活的面板。如果是手风琴模式，绑定值类型需要为 string | number，否则为 Array"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/collapse",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/collapse",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "当前激活面板改变时触发。如果是手风琴模式，参数 activeNames 类型为 string | number，否则为 Array",
        "description_zh": "当前激活面板改变时触发。如果是手风琴模式，参数 activeNames 类型为 string | number，否则为 Array",
        "params": "(activeNames: string | number | Array) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      },
      {
        "name": "icon",
        "description": "展开折叠 icon 图标",
        "description_zh": "展开折叠 icon 图标"
      },
      {
        "name": "title",
        "description": "标题",
        "description_zh": "标题"
      },
      {
        "name": "title-right",
        "description": "自定义面板标题右侧内容",
        "description_zh": "自定义面板标题右侧内容"
      }
    ],
    "filename": "Collapse"
  },
  {
    "name": "TinyCollapseItem",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "唯一标志符",
        "description_zh": "唯一标志符"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "面板标题",
        "description_zh": "面板标题"
      },
      "title-right": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "自定义面板标题右侧内容",
        "description_zh": "自定义面板标题右侧内容"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/collapse",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/collapse",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      },
      {
        "name": "icon",
        "description": "展开折叠 icon 图标",
        "description_zh": "展开折叠 icon 图标"
      },
      {
        "name": "title",
        "description": "标题",
        "description_zh": "标题"
      },
      {
        "name": "title-right",
        "description": "自定义面板标题右侧内容",
        "description_zh": "自定义面板标题右侧内容"
      }
    ],
    "filename": "CollapseItem"
  },
  {
    "name": "TinyFlowChart",
    "props": {
      ":config": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "流程图的配置。",
        "description_zh": "流程图的配置。"
      },
      ":data": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "流程图数据。",
        "description_zh": "流程图数据。"
      },
      "fetch": {
        "default": "--",
        "value": "",
        "type": "function",
        "description": "多端 dot 异步流程图 AsyncFlowchart 数据和配置的加载方法。",
        "description_zh": "多端 dot 异步流程图 AsyncFlowchart 数据和配置的加载方法。"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/flowchart",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/flowchart",
    "typeDetail": {},
    "events": [
      {
        "name": "click-blank",
        "description": "点击空白区域时触发。",
        "description_zh": "点击空白区域时触发。",
        "params": ""
      },
      {
        "name": "click-group",
        "description": "点击分组时触发。",
        "description_zh": "点击分组时触发。",
        "params": ""
      },
      {
        "name": "click-link",
        "description": "点击连线时触发。",
        "description_zh": "点击连线时触发。",
        "params": ""
      },
      {
        "name": "click-node",
        "description": "点击节点时触发。",
        "description_zh": "点击节点时触发。",
        "params": ""
      }
    ],
    "methods": [
      {
        "name": "createConfig",
        "description": "流程图组件 Flowchart 的静态方法，用于创建图形基础配置。",
        "params": "",
        "description_zh": "流程图组件 Flowchart 的静态方法，用于创建图形基础配置。"
      },
      {
        "name": "layout",
        "description": "多端 dot 点模式下用于处理图形的自定义布局，设置在全局配置上，参数为图形宽、高和节点列表，期望获取每个节点的位置。",
        "params": "",
        "description_zh": "多端 dot 点模式下用于处理图形的自定义布局，设置在全局配置上，参数为图形宽、高和节点列表，期望获取每个节点的位置。"
      },
      {
        "name": "linkPath",
        "description": "多端 dot 点模式下用于处理图形连线的自定义布局，设置在全局配置上，参数为连线和节点列表，期望获取连线的路径、中点和渐变。连线路径通过水平垂直折线的拐点表示。",
        "params": "",
        "description_zh": "多端 dot 点模式下用于处理图形连线的自定义布局，设置在全局配置上，参数为连线和节点列表，期望获取连线的路径、中点和渐变。连线路径通过水平垂直折线的拐点表示。"
      },
      {
        "name": "Node",
        "description": "多端 dot 点模式下内置的节点组件。",
        "params": "",
        "description_zh": "多端 dot 点模式下内置的节点组件。"
      },
      {
        "name": "refresh",
        "description": "在修改配置或数据之后，用于刷新多端异步流程图 AsyncFlowchart 实例的图形。",
        "params": "",
        "description_zh": "在修改配置或数据之后，用于刷新多端异步流程图 AsyncFlowchart 实例的图形。"
      },
      {
        "name": "renderInner",
        "description": "多端流卡片模式下节点的自定义渲染方法，渲染的内容为卡片内部内容，不包括卡片容器。",
        "params": "",
        "description_zh": "多端流卡片模式下节点的自定义渲染方法，渲染的内容为卡片内部内容，不包括卡片容器。"
      },
      {
        "name": "renderOuter",
        "description": "多端卡片模式下节点的自定义渲染方法，渲染的内容包括卡片容器。",
        "params": "",
        "description_zh": "多端卡片模式下节点的自定义渲染方法，渲染的内容包括卡片容器。"
      },
      {
        "name": "resizeMixin",
        "description": "多端 dot 点模式下用于处理图形的水平自适应宽度，后续在点模式的异步流程图中被内置。",
        "params": "",
        "description_zh": "多端 dot 点模式下用于处理图形的水平自适应宽度，后续在点模式的异步流程图中被内置。"
      }
    ],
    "slots": [],
    "filename": "FlowChart"
  },
  {
    "name": "TinyGuide",
    "props": {
      ":alignment-axis": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "设置引导框对齐轴距离",
        "description_zh": "设置引导框对齐轴距离"
      },
      "arrow": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示工具提示的箭头",
        "description_zh": "是否显示工具提示的箭头"
      },
      ":cross-axis": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "设置引导框横轴距离",
        "description_zh": "设置引导框横轴距离"
      },
      "dom-data": {
        "default": "--",
        "value": "",
        "type": "IDomData[]",
        "description": "用户引导参数",
        "description_zh": "用户引导参数"
      },
      ":height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "设置引导框高度",
        "description_zh": "设置引导框高度"
      },
      "light-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "当元素突出显示时（即，当其步骤处于活动状态时）应用于元素的类名",
        "description_zh": "当元素突出显示时（即，当其步骤处于活动状态时）应用于元素的类名"
      },
      ":main-axis": {
        "default": "18",
        "value": "",
        "type": "number",
        "description": "设置引导框主轴（纵轴）距离",
        "description_zh": "设置引导框主轴（纵轴）距离"
      },
      ":modal-overlay-opening-padding": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "在模态叠加层开口周围添加的填充量",
        "description_zh": "在模态叠加层开口周围添加的填充量"
      },
      ":modal-overlay-opening-radius": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "在模态叠加层开口周围添加的边界半径量",
        "description_zh": "在模态叠加层开口周围添加的边界半径量"
      },
      "pop-position": {
        "default": "'bottom'",
        "value": "",
        "type": "IPosition",
        "description": "引导框箭头位置，该属性的可选值可参考 IPosition 类型",
        "description_zh": "引导框箭头位置，该属性的可选值可参考 IPosition 类型"
      },
      ":width": {
        "default": "510",
        "value": "",
        "type": "number",
        "description": "设置引导框宽度",
        "description_zh": "设置引导框宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/guide",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/guide",
    "typeDetail": {
      "IDomData": "interface IDomData {\n  // 指引的标题\n  title: string\n  // 指引的内容（可以是 html）\n  text: string\n  // 需要绑定指引的元素类名（只能是类名，若未传入则显示为上下左右居中且无指示箭头）\n  domElement: string\n  // 添加需要高亮的元素的类名\n  hightBox: string[]\n  // 要添加到步骤的内容元素的一串类名\n  classes: string\n\n  // 展示前的回调函数\n  beforeShow: () => void\n  // 隐藏前的回调函数\n  beforeHide: () => void\n  // 显示的回调函数\n  show: () => void\n  // 隐藏的回调函数\n  hide: () => void\n  // 关闭的回调函数\n  cancel: () => void\n  //销毁的回调函数\n  destroy: () => void\n  // 完成的回调函数\n  completey: () => void\n\n  // 需要设置的按钮组\n  button: {\n    // 按钮名\n    text: string\n    // 需要执行的步骤，包含 next(下一步)、back(返回)、complete(完成)\n    action: 'next' | 'back' | 'complete'\n    // 按钮的类名\n    classes: string\n    // 是否是次要按钮\n    secondary: boolean\n  }[]\n}",
      "IPosition": "type IPosition = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "main",
        "description": "设置引导框内容",
        "description_zh": "设置引导框内容"
      }
    ],
    "filename": "Guide"
  },
  {
    "name": "TinyImage",
    "props": {
      "fit": {
        "default": "--",
        "value": "",
        "type": "'fill' | 'contain' | 'cover' | 'none' | 'scale-down '",
        "description": "确定图片如何适应容器大小",
        "description_zh": "确定图片如何适应容器大小"
      },
      "keep-style": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "保持图片样式属性",
        "description_zh": "保持图片样式属性"
      },
      "lazy": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否懒加载",
        "description_zh": "是否懒加载"
      },
      "preview-src-list": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "指定预览大图时的图片列表",
        "description_zh": "指定预览大图时的图片列表"
      },
      "scroll-container": {
        "default": "--",
        "value": "",
        "type": "string | HTMLElement",
        "description": "指定滚动容器。启用懒加载时，监听滚动容器的 scroll 事件来懒加载。\n                该属性用于设置图片的容器,当未设置容器时，默认会取最近一个 overflow 值为 auto 或 scroll 的父元素做为滚动容器\n              ",
        "description_zh": "指定滚动容器。启用懒加载时，监听滚动容器的 scroll 事件来懒加载。\n                该属性用于设置图片的容器,当未设置容器时，默认会取最近一个 overflow 值为 auto 或 scroll 的父元素做为滚动容器\n              "
      },
      "show-index": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "开启图片序列号展示",
        "description_zh": "开启图片序列号展示"
      },
      "src": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置图片路径",
        "description_zh": "设置图片路径"
      },
      ":z-index": {
        "default": "2000",
        "value": "",
        "type": "number",
        "description": "图片预览功能时，设置最外层元素的 z-index",
        "description_zh": "图片预览功能时，设置最外层元素的 z-index"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/image",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/image",
    "typeDetail": {},
    "events": [
      {
        "name": "error",
        "description": "图片加载失败后触发的事件，参数为原生的失败事件",
        "description_zh": "图片加载失败后触发的事件，参数为原生的失败事件",
        "params": "(ev) => void"
      },
      {
        "name": "load",
        "description": "图片加载成功的触发的事件，参数为原生的成功事件",
        "description_zh": "图片加载成功的触发的事件，参数为原生的成功事件",
        "params": "(ev) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "count",
        "description": "设置图片计数插槽",
        "description_zh": "设置图片计数插槽"
      },
      {
        "name": "error",
        "description": "图片加载失败的占位内容插槽",
        "description_zh": "图片加载失败的占位内容插槽"
      },
      {
        "name": "placeholder",
        "description": "图片加载的占位内容插槽",
        "description_zh": "图片加载的占位内容插槽"
      }
    ],
    "filename": "Image"
  },
  {
    "name": "TinyMilestone",
    "props": {
      "completed-field": {
        "default": "'completed'",
        "value": "",
        "type": "string",
        "description": "设置节点完成状态对应的键值",
        "description_zh": "设置节点完成状态对应的键值"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "ICustomData | ICustomData[]",
        "description": "设置步骤条的数据，可自定义键值映射",
        "description_zh": "设置步骤条的数据，可自定义键值映射"
      },
      "flag-before": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置旗子的数据是取自前面还是后面的节点，默认取后面节点上的数据",
        "description_zh": "设置旗子的数据是取自前面还是后面的节点，默认取后面节点上的数据"
      },
      "flag-content-field": {
        "default": "'content'",
        "value": "",
        "type": "string",
        "description": "设置旗子内容描述部分对应的键名",
        "description_zh": "设置旗子内容描述部分对应的键名"
      },
      "flag-field": {
        "default": "'flags'",
        "value": "",
        "type": "string",
        "description": "设置旗子信息数组对应的键名",
        "description_zh": "设置旗子信息数组对应的键名"
      },
      "flag-name-field": {
        "default": "'name'",
        "value": "",
        "type": "string",
        "description": "设置旗子标题对应的键名",
        "description_zh": "设置旗子标题对应的键名"
      },
      "flag-status-field": {
        "default": "'status'",
        "value": "",
        "type": "string",
        "description": "设置旗子状态对应的键名",
        "description_zh": "设置旗子状态对应的键名"
      },
      "line-style": {
        "default": "1",
        "value": "",
        "type": "'number' | 'string'",
        "description": "线条颜色取值模式为数字时，只有1和2可选；如果为字符串则需传入 16 进制颜色值\n              设置为数字 1 时只有完成与未完成两种状态的线条颜色，完成状态的线条颜色与 milestones-status 定义的 completed 状态的颜色一致\n              设置为数字 2 时线条颜色根随节点状态颜色\n              当设置为字符串形式的 16 进制色值时，如：#1890FF 时，线条不区分状态，全部统一为所设置的颜色",
        "description_zh": "线条颜色取值模式为数字时，只有1和2可选；如果为字符串则需传入 16 进制颜色值\n              设置为数字 1 时只有完成与未完成两种状态的线条颜色，完成状态的线条颜色与 milestones-status 定义的 completed 状态的颜色一致\n              设置为数字 2 时线条颜色根随节点状态颜色\n              当设置为字符串形式的 16 进制色值时，如：#1890FF 时，线条不区分状态，全部统一为所设置的颜色"
      },
      "milestones-status": {
        "default": "--",
        "value": "",
        "type": "IStatus",
        "description": "定义状态与颜色对应关系，颜色取值须是 16 进制颜色值或组件库的主题变量",
        "description_zh": "定义状态与颜色对应关系，颜色取值须是 16 进制颜色值或组件库的主题变量"
      },
      "name-field": {
        "default": "'name'",
        "value": "",
        "type": "string",
        "description": "设置节点名称对应的键名",
        "description_zh": "设置节点名称对应的键名"
      },
      "show-number": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "设置未完成状态的节点是否显示序号",
        "description_zh": "设置未完成状态的节点是否显示序号"
      },
      "solid": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "在里程碑模式下，设置已经完成节点显示为实心，且光晕不透明",
        "description_zh": "在里程碑模式下，设置已经完成节点显示为实心，且光晕不透明"
      },
      ":space": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "设置相邻节点的间距，即节点间线条的长度",
        "description_zh": "设置相邻节点的间距，即节点间线条的长度"
      },
      ":start": {
        "default": "-1",
        "value": "",
        "type": "number",
        "description": "设置节点的序号起始值，从首个节点开始计算",
        "description_zh": "设置节点的序号起始值，从首个节点开始计算"
      },
      "status-field": {
        "default": "'status'",
        "value": "",
        "type": "string",
        "description": "设置节点状态对应的键名",
        "description_zh": "设置节点状态对应的键名"
      },
      "time-field": {
        "default": "'time'",
        "value": "",
        "type": "string",
        "description": "设置节点时间信息对应的键名",
        "description_zh": "设置节点时间信息对应的键名"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/milestone",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/milestone",
    "typeDetail": {
      "IStatus": "interface IStatus {\n  completed?: string // 可通过completed-field自定义completed键名\n  doing: string\n  back: string\n  end: string\n  cancel: string\n}",
      "ICustomData": "interface ICustomData { \n  name?: string\n  time?: string\n  status?: string\n  flags?: string\n  content?: string\n  [propName: string]: string // 可自定义以上的默认属性\n}"
    },
    "events": [
      {
        "name": "click",
        "description": "节点的点击事件，参数（index:节点索引, node：节点数据信息）",
        "description_zh": "节点的点击事件，参数（index:节点索引, node：节点数据信息）",
        "params": "(index: number, node: ICustomData) => void"
      },
      {
        "name": "flag-click",
        "description": "旗子的点击事件，参数（index:旗子索引, node：旗子数据信息）",
        "description_zh": "旗子的点击事件，参数（index:旗子索引, node：旗子数据信息）",
        "params": "(index: number, node: ICustomData) => void"
      },
      {
        "name": "flagclick",
        "description": "[使用flag-click代替， deprecated v3.5.0废弃，v3.17.0移除；移除原因：命名规范]",
        "description_zh": "[使用flag-click代替， deprecated v3.5.0废弃，v3.17.0移除；移除原因：命名规范]",
        "params": "(index: number, node: ICustomData) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "bottom",
        "description": "节点下方内容",
        "description_zh": "节点下方内容"
      },
      {
        "name": "flag",
        "description": "旗帜内容",
        "description_zh": "旗帜内容"
      },
      {
        "name": "icon",
        "description": "节点图标",
        "description_zh": "节点图标"
      },
      {
        "name": "top",
        "description": "节点上方内容",
        "description_zh": "节点上方内容"
      }
    ],
    "filename": "Milestone"
  },
  {
    "name": "TinyMindMap",
    "props": {
      "modelValue": {
        "default": "{}",
        "value": "",
        "type": "Object",
        "description": "默认节点数据",
        "description_zh": "默认节点数据"
      },
      "options": {
        "default": "{contextMenu: false,toolBar: false,nodeMenu: false}",
        "value": "",
        "type": "IMindMaoOptions",
        "description": "配置项",
        "description_zh": "配置项"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/mind-map",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/mind-map",
    "typeDetail": {
      "IMindMaoOptions": "interface options {\n  direction?: number\n  locale?: string\n  draggable?: boolean\n  editable?: boolean\n  contextMenu?: boolean\n  contextMenuOption?: any\n  toolBar?: boolean\n  keypress?: boolean\n  mouseSelectionButton?: 0 | 2\n  before?: Before\n  newTopicName?: string\n  allowUndo?: boolean\n  overflowHidden?: boolean\n  mainLinkStyle?: number\n  subLinkStyle?: number\n  mobileMenu?: boolean\n  theme?: Theme\n  nodeMenu?: boolean\n}",
      "IMindMapOperation": "type onOperation = ({render, info}: {render:MindElixirInstance, info: Operation}) => void",
      "IMindMapSelectNode": "type onSelectNode = ({render,nodeObj}: {render:MindElixirInstance,nodeObj:NodeObj}, e?: MouseEvent) => void",
      "IMindMapSelectNewNode": "type selectNewNode: ({render,nodeObj}: {render:MindElixirInstance,nodeObj:NodeObj}) => void",
      "IMindMapSelectNodes": "type selectNodes: ({render,nodeObj}: {render:MindElixirInstance,nodeObj:NodeObj[]}) => void",
      "IMindMapUnselectNode": "type unselectNodes: ({render}: {render: MindElixirInstance}) => void",
      "IMindMapUnselectNodes": "type unselectNodes: ({render}: {render: MindElixirInstance}) => void",
      "IMindExpandNode": "type expandNode: ({render,nodeObj}: {render:MindElixirInstance,nodeObj:NodeObj}) => void",
      "NodeObj": "export interface NodeObj {\n  topic: string\n  id: Uid\n  style?: {\n    fontSize?: string\n    color?: string\n    background?: string\n    fontWeight?: string\n  }\n  children?: NodeObj[]\n  tags?: string[]\n  icons?: string[]\n  hyperLink?: string\n  expanded?: boolean\n  direction?: number\n  root?: boolean\n  image?: {\n    url: string\n    width: number\n    height: number\n  }\n  branchColor?: string\n  parent?: NodeObj\n}"
    },
    "events": [
      {
        "name": "afterImport",
        "description": "v-model更新后会触发",
        "description_zh": "v-model更新后会触发",
        "params": "({render, data}: {render:MindElixirInstance, data: })=>void"
      },
      {
        "name": "beforeImport",
        "description": "v-model更新前会触发",
        "description_zh": "v-model更新前会触发",
        "params": "({render, data}: {render:MindElixirInstance, data: })=>void"
      },
      {
        "name": "create",
        "description": "mindmap创建时会触发该事件",
        "description_zh": "mindmap创建时会触发该事件",
        "params": "(render:MindElixirInstance)=>void"
      },
      {
        "name": "expandNode",
        "description": "展开节点时会触发该事件",
        "description_zh": "展开节点时会触发该事件",
        "params": "IMindnExpandNode"
      },
      {
        "name": "operation",
        "description": "节点重新计算时, 例如将节点A拖拽到节点B, 使得节点A是节点B的子节点",
        "description_zh": "节点重新计算时, 例如将节点A拖拽到节点B, 使得节点A是节点B的子节点",
        "params": "IMindMapOperation"
      },
      {
        "name": "selectNewNode",
        "description": "创建新节点时",
        "description_zh": "创建新节点时",
        "params": "IMindMapSelectNewNode"
      },
      {
        "name": "selectNode",
        "description": "选择任意一个节点时, 会触发该事件",
        "description_zh": "选择任意一个节点时, 会触发该事件",
        "params": "IMindMapSelectNode"
      },
      {
        "name": "selectNodes",
        "description": "选择多个节点的时候会触发该事件",
        "description_zh": "选择多个节点的时候会触发该事件",
        "params": "IMindMapSelectNodes"
      },
      {
        "name": "unselectNode",
        "description": "取消选择的时候会触发该事件",
        "description_zh": "取消选择的时候会触发该事件",
        "params": "IMindMapUnselectNode"
      },
      {
        "name": "unselectNodes",
        "description": "取消选择多个节点时会触发该事件",
        "description_zh": "取消选择多个节点时会触发该事件",
        "params": "IMindMapUnselectNodes"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "MindMap"
  },
  {
    "name": "TinyQrCode",
    "props": {
      "bordered": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否有边框",
        "description_zh": "是否有边框"
      },
      "color": {
        "default": "'#000'",
        "value": "",
        "type": "string",
        "description": "二维码颜色, 仅支持十六进制",
        "description_zh": "二维码颜色, 仅支持十六进制"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "二维码中图片的地址（目前只支持图片地址）",
        "description_zh": "二维码中图片的地址（目前只支持图片地址）"
      },
      ":icon-size": {
        "default": "50",
        "value": "",
        "type": "number",
        "description": "二维码中图片的大小，icon 覆盖面积不能超过二维码面积的 30%， 否则影响扫码",
        "description_zh": "二维码中图片的大小，icon 覆盖面积不能超过二维码面积的 30%， 否则影响扫码"
      },
      "level": {
        "default": "'Medium'",
        "value": "",
        "type": "string",
        "description": "二维码纠错等级, 可选 'Low' | 'Medium' | 'Quality' | 'High'",
        "description_zh": "二维码纠错等级, 可选 'Low' | 'Medium' | 'Quality' | 'High'"
      },
      ":size": {
        "default": "200",
        "value": "",
        "type": "number",
        "description": "二维码大小",
        "description_zh": "二维码大小"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "扫描后的文本",
        "description_zh": "扫描后的文本"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/qr-code",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/qr-code",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "二维码发生变化后的回调",
        "description_zh": "二维码发生变化后的回调",
        "params": "()=> void"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "QrCode"
  },
  {
    "name": "TinyStatistic",
    "props": {
      ":precision": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "精度值",
        "description_zh": "精度值"
      },
      "prefix": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置数字内容前缀",
        "description_zh": "设置数字内容前缀"
      },
      "suffix": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置数字内容后缀",
        "description_zh": "设置数字内容后缀"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string | ITitleType",
        "description": "设置数字内容标题",
        "description_zh": "设置数字内容标题"
      },
      ":value": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "数字显示内容",
        "description_zh": "数字显示内容"
      },
      "value-style": {
        "default": "--",
        "value": "",
        "type": "object | array",
        "description": "设置数字样式",
        "description_zh": "设置数字样式"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/statistic",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/statistic",
    "typeDetail": {
      "ITitleType": "interface ITitleType {\n  value?: string       // 标题文本\n  position?: string    // 标题位置，取值：top | bottom\n}"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "prefix",
        "description": "数字内容前置插槽",
        "description_zh": "数字内容前置插槽"
      },
      {
        "name": "suffix",
        "description": "数字内容后置插槽",
        "description_zh": "数字内容后置插槽"
      },
      {
        "name": "title",
        "description": "数字内容标题插槽",
        "description_zh": "数字内容标题插槽"
      }
    ],
    "filename": "Statistic"
  },
  {
    "name": "TinyTag",
    "props": {
      "before-delete": {
        "default": "--",
        "value": "",
        "type": "(close: () => void) => void",
        "description": "删除前回调函数",
        "description_zh": "删除前回调函数"
      },
      "closable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否可关闭",
        "description_zh": "是否可关闭"
      },
      "color": {
        "default": "--",
        "value": "",
        "type": "IColor | string[]",
        "description": "控制标签文本色和背景色，可使用 IColor 类型中的预设值，也可自定义值，若自定义值为字符串则只能设置标签的背景色；若为数组则第一个值设置背景色，第二个设置文本色；【注：3.15.0新增支持数组类型】",
        "description_zh": "控制标签文本色和背景色，可使用 IColor 类型中的预设值，也可自定义值，若自定义值为字符串则只能设置标签的背景色；若为数组则第一个值设置背景色，第二个设置文本色；【注：3.15.0新增支持数组类型】"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "effect": {
        "default": "'light'",
        "value": "",
        "type": "IEffect",
        "description": "主题",
        "description_zh": "主题"
      },
      "hit": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否有边框",
        "description_zh": "是否有边框"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "ISize",
        "description": "尺寸",
        "description_zh": "尺寸"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "IType",
        "description": "显示类型",
        "description_zh": "显示类型"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "配置式标签，自定义标签内容【3.9.1新增】",
        "description_zh": "配置式标签，自定义标签内容【3.9.1新增】"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tag",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tag",
    "typeDetail": {
      "IColor": "type IColor = 'red' | 'orange' | 'green' | 'blue' | 'purple' | 'brown' | 'grey' | string // 除了预设值，也可以是其他任意自定义颜色值",
      "IEffect": "type IEffect = 'dark' | 'light' | 'plain'",
      "ISize": "type ISize = 'medium' | 'small' | 'mini' | ''",
      "IType": "type IType = 'success' | 'info' | 'warning' | 'danger'"
    },
    "events": [
      {
        "name": "click",
        "description": "点击标签时触发的事件",
        "description_zh": "点击标签时触发的事件",
        "params": "(event: Event) => void"
      },
      {
        "name": "close",
        "description": "点击关闭按钮时触发的事件",
        "description_zh": "点击关闭按钮时触发的事件",
        "params": "(event: Event)) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "标签内容",
        "description_zh": "标签内容"
      }
    ],
    "filename": "Tag"
  },
  {
    "name": "TinyTagGroup",
    "props": {
      "data": {
        "default": "--",
        "value": "",
        "type": "ITagGroupDataItem[]",
        "description": " 数据源",
        "description_zh": " 数据源"
      },
      "effect": {
        "default": "'light'",
        "value": "",
        "type": "'dark' | 'light' | 'plain'",
        "description": "主题",
        "description_zh": "主题"
      },
      "size": {
        "default": "'medium'",
        "value": "",
        "type": "'medium' | 'small' | 'mini'",
        "description": "尺寸",
        "description_zh": "尺寸"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tag-group",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tag-group",
    "typeDetail": {
      "ITagGroupDataItem": "type ITagGroupDataItem = { name: string, type?: 'success' | 'info' | 'warning' | 'danger' }",
      "ITagGroupItemClick": "type ITagGroupItemClick = (item: ITagGroupDataItem, index: number, event: Event) => void"
    },
    "events": [
      {
        "name": "item-click",
        "description": "单个标签的点击事件",
        "description_zh": "单个标签的点击事件",
        "params": "ITagGroupItemClick"
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "TagGroup"
  },
  {
    "name": "TinyTimeline",
    "props": {
      ":active": {
        "default": "-1",
        "value": "",
        "type": "number",
        "description": "当前节点索引，从0开始计数",
        "description_zh": "当前节点索引，从0开始计数"
      },
      "auto-color-field": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "显示组件二级标题内容，默认值为 autoColor",
        "description_zh": "显示组件二级标题内容，默认值为 autoColor"
      },
      "data": {
        "default": "[]",
        "value": "",
        "type": "ITimelineItem",
        "description": "节点数据",
        "description_zh": "节点数据"
      },
      "horizontal": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否水平方向",
        "description_zh": "是否水平方向"
      },
      "line-width": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "连接线长度，仅当 text-position 取值为 'right' 时生效，设置后 space 属性失效",
        "description_zh": "连接线长度，仅当 text-position 取值为 'right' 时生效，设置后 space 属性失效"
      },
      "name-field": {
        "default": "'name'",
        "value": "",
        "type": "string",
        "description": "节点名称对应的字段名",
        "description_zh": "节点名称对应的字段名"
      },
      "only-number": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "节点序号是否只显示数字，适用于横向时间线",
        "description_zh": "节点序号是否只显示数字，适用于横向时间线"
      },
      "reverse": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否逆序排列节点，仅用于竖式时间线",
        "description_zh": "是否逆序排列节点，仅用于竖式时间线"
      },
      "shape": {
        "default": "'circle'",
        "value": "",
        "type": "string",
        "description": "圆点外形: 空心圆形或实心圆点，取值分别对应 'circle' | 'dot'",
        "description_zh": "圆点外形: 空心圆形或实心圆点，取值分别对应 'circle' | 'dot'"
      },
      "show-divider": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示底部分割线，适用于横向时间线",
        "description_zh": "是否显示底部分割线，适用于横向时间线"
      },
      "show-number": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "未完成状态的节点是否显示序号",
        "description_zh": "未完成状态的节点是否显示序号"
      },
      "space": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "节点宽度， 取值为数字、带长度单位的数值字符串和百分比字符串，数字会默认以px为长度单位",
        "description_zh": "节点宽度， 取值为数字、带长度单位的数值字符串和百分比字符串，数字会默认以px为长度单位"
      },
      ":start": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "节点序号起始值",
        "description_zh": "节点序号起始值"
      },
      "time-field": {
        "default": "'time'",
        "value": "",
        "type": "string",
        "description": "节点时间信息对应的字段名",
        "description_zh": "节点时间信息对应的字段名"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否竖直方向",
        "description_zh": "是否竖直方向"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-line",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-line",
    "typeDetail": {
      "ITimelineItem": "interface ITimelineItem {\n  name: string // 节点名称\n  activeColor: 'success' | 'warning' | 'error' | Component\n  time?: string // 节点时间\n  error?: boolean // 是否异常状态\n  disabled?: boolean // 是否禁用\n  type?: ITimelineItemType // 节点类型\n}",
      "ITimelineItemType": "type ITimelineItemType = 'primary' | 'success' | 'warning' | 'error' | 'info'"
    },
    "events": [
      {
        "name": "click",
        "description": "节点的点击事件，参数：index：点击节点的下标 node： 点击节点数据}",
        "description_zh": "节点的点击事件，参数：index：点击节点的下标 node： 点击节点数据}",
        "params": "(index: number, node: ITimelineItem) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "bottom",
        "description": "自定义节点底部内容",
        "description_zh": "自定义节点底部内容"
      },
      {
        "name": "description",
        "description": "节点描述信息插槽，适用于横向时间线",
        "description_zh": "节点描述信息插槽，适用于横向时间线"
      },
      {
        "name": "left",
        "description": "自定义节点左侧内容",
        "description_zh": "自定义节点左侧内容"
      },
      {
        "name": "right",
        "description": "自定义节点右侧内容",
        "description_zh": "自定义节点右侧内容"
      },
      {
        "name": "top",
        "description": "自定义节点顶部内容",
        "description_zh": "自定义节点顶部内容"
      }
    ],
    "filename": "Timeline"
  },
  {
    "name": "TinyTimelineItem",
    "props": {
      "line-width": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "连接线长度，仅当 timeline 组件 text-position 属性取值为 true 时生效，设置后 space 属性失效",
        "description_zh": "连接线长度，仅当 timeline 组件 text-position 属性取值为 true 时生效，设置后 space 属性失效"
      },
      "node": {
        "default": "--",
        "value": "",
        "type": "ITimelineItem",
        "description": "节点数据",
        "description_zh": "节点数据"
      },
      "space": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "节点宽度， 取值为数字、带长度单位的数值字符串和百分比字符串，数字会默认以px为长度单位",
        "description_zh": "节点宽度， 取值为数字、带长度单位的数值字符串和百分比字符串，数字会默认以px为长度单位"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-line",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-line",
    "typeDetail": {
      "ITimelineItem": "interface ITimelineItem {\n  name: string // 节点名称\n  activeColor: 'success' | 'warning' | 'error' | Component\n  time?: string // 节点时间\n  error?: boolean // 是否异常状态\n  disabled?: boolean // 是否禁用\n  type?: ITimelineItemType // 节点类型\n}",
      "ITimelineItemType": "type ITimelineItemType = 'primary' | 'success' | 'warning' | 'error' | 'info'"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "TimelineItem"
  },
  {
    "name": "TinyTree",
    "props": {
      "accordion": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为手风琴模式，每次只打开一个同级树节点展开",
        "description_zh": "是否为手风琴模式，每次只打开一个同级树节点展开"
      },
      "add-disabled-keys": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "禁止添加的节点 key 值列表，也可通过 setAddDisabledKeys 方法设置",
        "description_zh": "禁止添加的节点 key 值列表，也可通过 setAddDisabledKeys 方法设置"
      },
      "after-load": {
        "default": "--",
        "value": "",
        "type": "(nodes: object[])=> void",
        "description": "下级树节点数据加载完毕后的回调函数",
        "description_zh": "下级树节点数据加载完毕后的回调函数"
      },
      "allow-drag": {
        "default": "--",
        "value": "",
        "type": "(node)=>boolean",
        "description": "判断节点能否被拖拽",
        "description_zh": "判断节点能否被拖拽"
      },
      "allow-drop": {
        "default": "--",
        "value": "",
        "type": "(srcNode, targetNode, type)=>void",
        "description": "拖拽时判定目标节点能否被放置。type 参数有三种情况：'prev'、'inner' 和 'next'，分别表示放置在目标节点前、插入至目标节点和放置在目标节点后",
        "description_zh": "拖拽时判定目标节点能否被放置。type 参数有三种情况：'prev'、'inner' 和 'next'，分别表示放置在目标节点前、插入至目标节点和放置在目标节点后"
      },
      "check-on-click-node": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否点击节点时，自动勾选节点",
        "description_zh": "是否点击节点时，自动勾选节点"
      },
      "check-strictly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为父子严格模式",
        "description_zh": "是否为父子严格模式"
      },
      "current-node-key": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "当前选中节点",
        "description_zh": "当前选中节点"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "设置数据源, 默认通过数据项的 label , children 属性展示数据",
        "description_zh": "设置数据源, 默认通过数据项的 label , children 属性展示数据"
      },
      "default-checked-keys": {
        "default": "--",
        "value": "",
        "type": "string[]",
        "description": "默认勾选的节点的keys",
        "description_zh": "默认勾选的节点的keys"
      },
      "default-expand-all": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认展开所有节点",
        "description_zh": "是否默认展开所有节点"
      },
      "default-expanded-keys": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "默认展开节点的keys",
        "description_zh": "默认展开节点的keys"
      },
      "delete-disabled-keys": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "禁止删除的节点 key 值列表，也可通过 setDeleteDisabledKeys 方法设置",
        "description_zh": "禁止删除的节点 key 值列表，也可通过 setDeleteDisabledKeys 方法设置"
      },
      "delete-node-method": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "删除节点的装置钩子函数，若返回 false 或者返回 Promise 且被 reject，则停止删除。 ",
        "description_zh": "删除节点的装置钩子函数，若返回 false 或者返回 Promise 且被 reject，则停止删除。 "
      },
      "draggable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启节点拖拽",
        "description_zh": "是否开启节点拖拽"
      },
      "edit-disabled-keys": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "禁止编辑的节点 key 值列表，也可通过 setEditDisabledKeys 方法设置",
        "description_zh": "禁止编辑的节点 key 值列表，也可通过 setEditDisabledKeys 方法设置"
      },
      "empty-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "内容为空的时候展示的文本",
        "description_zh": "内容为空的时候展示的文本"
      },
      "expand-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "指示展开的图标",
        "description_zh": "指示展开的图标"
      },
      "expand-icon-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "指示展开的图标色",
        "description_zh": "指示展开的图标色"
      },
      "expand-on-click-node": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "节点在点击内容时,是否展开 / 收起",
        "description_zh": "节点在点击内容时,是否展开 / 收起"
      },
      "filter-node-method": {
        "default": "--",
        "value": "",
        "type": "(value, data, node)=>boolean",
        "description": "对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏",
        "description_zh": "对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏"
      },
      "highlight-current": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否高亮当前选中节点",
        "description_zh": "是否高亮当前选中节点"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "自定义节点图标",
        "description_zh": "自定义节点图标"
      },
      "icon-trigger-click-node": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "点击图标展开节点时是否触发 node-click 事件",
        "description_zh": "点击图标展开节点时是否触发 node-click 事件"
      },
      ":indent": {
        "default": "18",
        "value": "",
        "type": "number",
        "description": "相邻级节点间的水平缩进，单位为像素",
        "description_zh": "相邻级节点间的水平缩进，单位为像素"
      },
      "lazy": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为异步加载模式，展开节点时再请求数据",
        "description_zh": "是否为异步加载模式，展开节点时再请求数据"
      },
      "load": {
        "default": "--",
        "value": "",
        "type": "(node, resolve)=> void",
        "description": "加载子树数据的方法。点击节点后，组件开始调用load方法，只有在load函数内调用resolve(data)，才表示返回下级的数据成功。",
        "description_zh": "加载子树数据的方法。点击节点后，组件开始调用load方法，只有在load函数内调用resolve(data)，才表示返回下级的数据成功。"
      },
      "node-key": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "节点唯一标识属性名称",
        "description_zh": "节点唯一标识属性名称"
      },
      "only-check-children": {
        "default": "false",
        "value": "",
        "type": "Boolean",
        "description": "是否只能选中叶子节点",
        "description_zh": "是否只能选中叶子节点"
      },
      ":props": {
        "default": "{children: 'children',label: 'label',disabled: 'disabled',isLeaf: 'isLeaf'}",
        "value": "",
        "type": "object",
        "description": "用户传入非标准格式的数据时，指定映射属性的关系",
        "description_zh": "用户传入非标准格式的数据时，指定映射属性的关系"
      },
      "render-after-expand": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否在第一次展开某个树节点后才渲染其子节点",
        "description_zh": "是否在第一次展开某个树节点后才渲染其子节点"
      },
      "render-content": {
        "default": "--",
        "value": "",
        "type": "(h: Vue.h, { node, data, store }=> VNode",
        "description": "树节点的内容区的渲染函数",
        "description_zh": "树节点的内容区的渲染函数"
      },
      "show-auxi": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "平铺视图模式时，是否显示节点的上级路径的辅助信息",
        "description_zh": "平铺视图模式时，是否显示节点的上级路径的辅助信息"
      },
      "show-check-easily": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "在严格模式时，是否显示勾选父节点时，自动勾选子节点的功能区域",
        "description_zh": "在严格模式时，是否显示勾选父节点时，自动勾选子节点的功能区域"
      },
      "show-checkbox": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为多选模式",
        "description_zh": "是否为多选模式"
      },
      "show-contextmenu": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否启用右键菜单功能",
        "description_zh": "是否启用右键菜单功能"
      },
      "show-line": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示连接线",
        "description_zh": "是否显示连接线"
      },
      "show-radio": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否为单选模式",
        "description_zh": "是否为单选模式"
      },
      "shrink-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "指示收缩的图标",
        "description_zh": "指示收缩的图标"
      },
      "shrink-icon-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "指示收缩的图标色",
        "description_zh": "指示收缩的图标色"
      },
      "size": {
        "default": "false",
        "value": "",
        "type": "'medium'|'small'",
        "description": "组件的大小",
        "description_zh": "组件的大小"
      },
      "view-type": {
        "default": "tree",
        "value": "",
        "type": "'tree' | 'plain'",
        "description": "视图模式,其中tree是普通视图，plain是平铺视图",
        "description_zh": "视图模式,其中tree是普通视图，plain是平铺视图"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tree",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tree",
    "typeDetail": {},
    "events": [
      {
        "name": "add-node",
        "description": "添加节点的事件",
        "description_zh": "添加节点的事件",
        "params": "(node)=>void"
      },
      {
        "name": "check",
        "description": "勾选节点后的事件参数说明：{data:  当前选中节点信息, currentChecked: 树组件目前的选中状态信息}",
        "description_zh": "勾选节点后的事件参数说明：{data:  当前选中节点信息, currentChecked: 树组件目前的选中状态信息}",
        "params": "(data, currentChecked)=>void"
      },
      {
        "name": "check-change",
        "description": "节点选中状态发生变化时的回调;参数说明：{data: 节点状态信息,checked:当前点击节点的勾选状态,indeterminate:当前节点的半选状态}",
        "description_zh": "节点选中状态发生变化时的回调;参数说明：{data: 节点状态信息,checked:当前点击节点的勾选状态,indeterminate:当前节点的半选状态}",
        "params": "(data, checked, indeterminate)=>void"
      },
      {
        "name": "check-plain",
        "description": "平铺模式下，勾选或取消勾选节点的事件，需要设置show-checkbox为true才生效。参数说明：{ plainNode: 被点击的节点数据, value: 复选框是否选中，取值true或false }",
        "description_zh": "平铺模式下，勾选或取消勾选节点的事件，需要设置show-checkbox为true才生效。参数说明：{ plainNode: 被点击的节点数据, value: 复选框是否选中，取值true或false }",
        "params": "(plainNode, value)=>void"
      },
      {
        "name": "close-edit",
        "description": "关闭编辑的事件",
        "description_zh": "关闭编辑的事件",
        "params": "()=>void"
      },
      {
        "name": "current-change",
        "description": "当前选中节点变化时触发的事件;参数说明：{data: 节点数据,currentNode: 节点状态信息（包括数据）}",
        "description_zh": "当前选中节点变化时触发的事件;参数说明：{data: 节点数据,currentNode: 节点状态信息（包括数据）}",
        "params": "(data, currentNode)=>void"
      },
      {
        "name": "delete-node",
        "description": "删除节点的事件",
        "description_zh": "删除节点的事件",
        "params": "(node)=>void"
      },
      {
        "name": "edit-node",
        "description": "修改节点的事件",
        "description_zh": "修改节点的事件",
        "params": "(node)=>void"
      },
      {
        "name": "leave-plain-view",
        "description": "平铺模式下，点击节点定位图标触发的事件。参数说明：{ plainNode: 被点击的节点数据, event: 原生点击事件 }",
        "description_zh": "平铺模式下，点击节点定位图标触发的事件。参数说明：{ plainNode: 被点击的节点数据, event: 原生点击事件 }",
        "params": "(plainNode, event)=>void"
      },
      {
        "name": "load-data",
        "description": "懒加载时，加载数据成功的事件;参数说明：{data: 加载的数据}",
        "description_zh": "懒加载时，加载数据成功的事件;参数说明：{data: 加载的数据}",
        "params": "(data)=>void"
      },
      {
        "name": "node-click",
        "description": "点击节点后的事件。 参数说明：{data: 节点数据,node: 节点状态信息（包括数据）,vm: 组件实例}",
        "description_zh": "点击节点后的事件。 参数说明：{data: 节点数据,node: 节点状态信息（包括数据）,vm: 组件实例}",
        "params": "(data, node, vm)=>void"
      },
      {
        "name": "node-collapse",
        "description": "收缩节点后的事件参数说明：{data: 节点数据,node: 节点状态信息（包括数据）,vm: 当前组件实例}",
        "description_zh": "收缩节点后的事件参数说明：{data: 节点数据,node: 节点状态信息（包括数据）,vm: 当前组件实例}",
        "params": "(data, node, vm)=>void"
      },
      {
        "name": "node-contextmenu",
        "description": "当某一节点被鼠标右键点击时会触发该事件;参数说明：{event:原生事件,data: 节点数据,node: 节点状态信息（包括数据）,vm: 组件实例}",
        "description_zh": "当某一节点被鼠标右键点击时会触发该事件;参数说明：{event:原生事件,data: 节点数据,node: 节点状态信息（包括数据）,vm: 组件实例}",
        "params": "(event, data, node, vm)=>void"
      },
      {
        "name": "node-drag-end",
        "description": "拖拽结束时（可能未成功）触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,dropType: 拖拽类型, (before/after/inner/none),event: 原生事件}",
        "description_zh": "拖拽结束时（可能未成功）触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,dropType: 拖拽类型, (before/after/inner/none),event: 原生事件}",
        "params": "(srcNode, targetNode, dropType, event)=>void"
      },
      {
        "name": "node-drag-enter",
        "description": "拖拽进入其他节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "description_zh": "拖拽进入其他节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "params": "(srcNode, targetNode, event)=>void"
      },
      {
        "name": "node-drag-leave",
        "description": "拖拽离开某个节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "description_zh": "拖拽离开某个节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "params": "(srcNode, targetNode, event)=>void"
      },
      {
        "name": "node-drag-over",
        "description": "在拖拽节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "description_zh": "在拖拽节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "params": "(srcNode, targetNode, event)=>void"
      },
      {
        "name": "node-drag-start",
        "description": "节点开始拖拽时触发的事件;参数说明：{node: 拖拽节点，event: 原生事件}",
        "description_zh": "节点开始拖拽时触发的事件;参数说明：{node: 拖拽节点，event: 原生事件}",
        "params": "(node, event)=>void"
      },
      {
        "name": "node-drop",
        "description": "拖拽成功完成时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,dropType: 拖拽类型, (before/after/inner/none),event: 原生事件}",
        "description_zh": "拖拽成功完成时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,dropType: 拖拽类型, (before/after/inner/none),event: 原生事件}",
        "params": "(srcNode, targetNode, dropType, event)=>void"
      },
      {
        "name": "node-expand",
        "description": "展开节点后的事件。参数说明：{data: 节点数据,node: 节点状态信息（包括数据,vm: 当前组件实例}",
        "description_zh": "展开节点后的事件。参数说明：{data: 节点数据,node: 节点状态信息（包括数据,vm: 当前组件实例}",
        "params": "(data, node, vm)=>void"
      },
      {
        "name": "open-edit",
        "description": "进入编辑的事件",
        "description_zh": "进入编辑的事件",
        "params": "()=>void"
      },
      {
        "name": "save-edit",
        "description": "保存编辑的事件",
        "description_zh": "保存编辑的事件",
        "params": "(changedData, finalData)=>void"
      }
    ],
    "methods": [
      {
        "name": "addNode",
        "description": "在指定的节点对象中，添加一个子节点",
        "params": "(node:object) => void",
        "description_zh": "在指定的节点对象中，添加一个子节点"
      },
      {
        "name": "append",
        "description": "为一个节点追加一个子节点，且位于其它子节点的最上方。参数中的目标节点可以是节点数据或节点的key",
        "params": "(newData:object, targetNodeOrTargetKey: object | string) => void",
        "description_zh": "为一个节点追加一个子节点，且位于其它子节点的最上方。参数中的目标节点可以是节点数据或节点的key"
      },
      {
        "name": "closeEdit",
        "description": "组件退出编辑状态",
        "params": "() => void",
        "description_zh": "组件退出编辑状态"
      },
      {
        "name": "closeMenu",
        "description": "关闭节点的自定义菜单",
        "params": "() => void",
        "description_zh": "关闭节点的自定义菜单"
      },
      {
        "name": "editNode",
        "description": "让指定的节点对象进入编辑状态",
        "params": "(node:object) => void",
        "description_zh": "让指定的节点对象进入编辑状态"
      },
      {
        "name": "expandAllNodes",
        "description": "展开或收起全部节点",
        "params": "(isExpand:boolean) => void",
        "description_zh": "展开或收起全部节点"
      },
      {
        "name": "filter",
        "description": "触发树节点进行筛选操作",
        "params": "(value:string) => void",
        "description_zh": "触发树节点进行筛选操作"
      },
      {
        "name": "getCheckedKeys",
        "description": "返回目前被选中的节点的 key 所组成的数组。当参数：leafOnly 为true时，只返回被选中的叶子节点。",
        "params": "(leafOnly:boolean) => string[]",
        "description_zh": "返回目前被选中的节点的 key 所组成的数组。当参数：leafOnly 为true时，只返回被选中的叶子节点。"
      },
      {
        "name": "getCheckedNodes",
        "description": "返回目前被选中的节点所组成的数组。",
        "params": "(leafOnly:boolean, includeHalfChecked:boolean) => object[]",
        "description_zh": "返回目前被选中的节点所组成的数组。"
      },
      {
        "name": "getCurrentKey",
        "description": "获取当前被选中节点的 key",
        "params": "() => string",
        "description_zh": "获取当前被选中节点的 key"
      },
      {
        "name": "getCurrentNode",
        "description": "获得当前的选中的节点数据，若没有节点被选中则返回 null",
        "params": "() => data",
        "description_zh": "获得当前的选中的节点数据，若没有节点被选中则返回 null"
      },
      {
        "name": "getHalfCheckedKeys",
        "description": "返回目前半选中的节点的 key 所组成的数组",
        "params": "() => result",
        "description_zh": "返回目前半选中的节点的 key 所组成的数组"
      },
      {
        "name": "getHalfCheckedNodes",
        "description": "返回目前半选中的节点所组成的数组",
        "params": "() => object[]",
        "description_zh": "返回目前半选中的节点所组成的数组"
      },
      {
        "name": "getNode",
        "description": "通过 \"节点数据\" 或者 \"节点的key\", 获得 Tree 组件中的 node 节点对象",
        "params": "(data: string | object) => node",
        "description_zh": "通过 \"节点数据\" 或者 \"节点的key\", 获得 Tree 组件中的 node 节点对象"
      },
      {
        "name": "getNodeKey",
        "description": "查询节点对象的内部唯一id",
        "params": "(node:object) => number",
        "description_zh": "查询节点对象的内部唯一id"
      },
      {
        "name": "getNodePath",
        "description": "通过节点的id, 返回整个路径上节点数据的数组",
        "params": "(key:string) => object[]",
        "description_zh": "通过节点的id, 返回整个路径上节点数据的数组"
      },
      {
        "name": "insertAfter",
        "description": "在一个节点的后面增加一个节点",
        "params": "(newData:object, targetNodeOrTargetKey: object | string) => void",
        "description_zh": "在一个节点的后面增加一个节点"
      },
      {
        "name": "insertBefore",
        "description": "在一个节点的前面增加一个节点",
        "params": "(newData:object, targetNodeOrTargetKey: object | string) => void",
        "description_zh": "在一个节点的前面增加一个节点"
      },
      {
        "name": "openEdit",
        "description": "组件进入编辑状态",
        "params": "() => void",
        "description_zh": "组件进入编辑状态"
      },
      {
        "name": "remove",
        "description": "删除节点。当参数：isSaveChildNode为true时，当前节点的子元素上移至删除节点的父节点中去。",
        "params": "(targetNodeOrTargetKey: object | string, isSaveChildNode :boolean ) => void",
        "description_zh": "删除节点。当参数：isSaveChildNode为true时，当前节点的子元素上移至删除节点的父节点中去。"
      },
      {
        "name": "saveEdit",
        "description": "返回组件编辑状态的值",
        "params": "() => object[]",
        "description_zh": "返回组件编辑状态的值"
      },
      {
        "name": "saveNode",
        "description": "正在进行编辑的节点保存并退出编辑状态",
        "params": "() => void",
        "description_zh": "正在进行编辑的节点保存并退出编辑状态"
      },
      {
        "name": "setAddDisabledKeys",
        "description": "设置禁止添加的节点 key 值列表",
        "params": "(keys: string[]) => void",
        "description_zh": "设置禁止添加的节点 key 值列表"
      },
      {
        "name": "setChecked",
        "description": "通过节点或节点的key,设置它的勾选状态",
        "params": "( nodeOrKey: object|string,checked:boolean,deep:boolean) => void",
        "description_zh": "通过节点或节点的key,设置它的勾选状态"
      },
      {
        "name": "setCheckedByNodeKey",
        "description": "通过节点的key, 设置它为勾选或不勾选",
        "params": "(key:string, checked:boolean) => void",
        "description_zh": "通过节点的key, 设置它为勾选或不勾选"
      },
      {
        "name": "setCheckedKeys",
        "description": "通过节点的key,设置一组节点为勾选状态",
        "params": "(keys:string[], leafOnly:boolean) => void",
        "description_zh": "通过节点的key,设置一组节点为勾选状态"
      },
      {
        "name": "setCheckedNodes",
        "description": "通过节点数据，设置一组节点为勾选状态",
        "params": "( nodeArr: object[], leafOnly:boolean) => void",
        "description_zh": "通过节点数据，设置一组节点为勾选状态"
      },
      {
        "name": "setCurrentKey",
        "description": "通过 key 设置某个节点的当前选中状态",
        "params": "(key:string) => void",
        "description_zh": "通过 key 设置某个节点的当前选中状态"
      },
      {
        "name": "setCurrentNode",
        "description": "通过节点数据， 设置某个节点的当前选中状态",
        "params": "(data:object) => void",
        "description_zh": "通过节点数据， 设置某个节点的当前选中状态"
      },
      {
        "name": "setCurrentRadio",
        "description": "在单选模式下，设置组件实例的default-checked-keys 的第一项为勾选值",
        "params": "() => void",
        "description_zh": "在单选模式下，设置组件实例的default-checked-keys 的第一项为勾选值"
      },
      {
        "name": "setDeleteDisabledKeys",
        "description": "设置禁止删除的节点 key 值列表",
        "params": "(keys: string[]) => void",
        "description_zh": "设置禁止删除的节点 key 值列表"
      },
      {
        "name": "setEditDisabledKeys",
        "description": "设置禁止编辑的节点 key 值列表",
        "params": "(keys: string[]) => void",
        "description_zh": "设置禁止编辑的节点 key 值列表"
      },
      {
        "name": "updateKeyChildren",
        "description": "更新指定节点的所有子元素",
        "params": "(key, children: object[]) => void",
        "description_zh": "更新指定节点的所有子元素"
      }
    ],
    "slots": [
      {
        "name": "contextmenu",
        "description": "自定义树节点的右键菜单内容，插槽上下文数据为 { node }",
        "description_zh": "自定义树节点的右键菜单内容，插槽上下文数据为 { node }"
      },
      {
        "name": "default",
        "description": "自定义树节点的内容，插槽上下文数据为 { node, data }",
        "description_zh": "自定义树节点的内容，插槽上下文数据为 { node, data }"
      },
      {
        "name": "empty",
        "description": "自定义空数据的元素",
        "description_zh": "自定义空数据的元素"
      },
      {
        "name": "operation",
        "description": "节点内容靠右对齐的元素，插槽上下文数据为 { node }",
        "description_zh": "节点内容靠右对齐的元素，插槽上下文数据为 { node }"
      },
      {
        "name": "prefix",
        "description": "节点内容前置元素，插槽上下文数据为 { node }",
        "description_zh": "节点内容前置元素，插槽上下文数据为 { node }"
      },
      {
        "name": "suffix",
        "description": "节点内容后置元素，插槽上下文数据为 { node }",
        "description_zh": "节点内容后置元素，插槽上下文数据为 { node }"
      },
      {
        "name": "switch-text",
        "description": "在严格模式显示自动勾选子节点的功能时，自定义开关右侧的内容",
        "description_zh": "在严格模式显示自动勾选子节点的功能时，自定义开关右侧的内容"
      }
    ],
    "filename": "Tree"
  },
  {
    "name": "TinyUserHead",
    "props": {
      "background-color": {
        "default": "'#d9d9d9'",
        "value": "",
        "type": "string",
        "description": "背景色",
        "description_zh": "背景色"
      },
      "color": {
        "default": "'#ffffff'",
        "value": "",
        "type": "string",
        "description": "文字颜色",
        "description_zh": "文字颜色"
      },
      ":message-total": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "消息计数",
        "description_zh": "消息计数"
      },
      "message-type": {
        "default": "'details'",
        "value": "",
        "type": "string",
        "description": "消息类型 details|basic 可选",
        "description_zh": "消息类型 details|basic 可选"
      },
      ":message-upper-limit": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "消息显示上限",
        "description_zh": "消息显示上限"
      },
      "min": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "小尺寸模式",
        "description_zh": "小尺寸模式"
      },
      "modelValue": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置头像值。",
        "description_zh": "设置头像值。"
      },
      "round": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "圆形模式",
        "description_zh": "圆形模式"
      },
      "type": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "头像类型，icon|image|label 可选",
        "description_zh": "头像类型，icon|image|label 可选"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "type=icon 时为图标类名，type=label 时为字体串，type=image 时为资源路径",
        "description_zh": "type=icon 时为图标类名，type=label 时为字体串，type=image 时为资源路径"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/user-head",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/user-head",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "自定义图像内容",
        "description_zh": "自定义图像内容"
      }
    ],
    "filename": "UserHead"
  },
  {
    "name": "TinyWizard",
    "props": {
      "data": {
        "default": "--",
        "value": "",
        "type": "IDataItem[]",
        "description": "设置节点数据",
        "description_zh": "设置节点数据"
      },
      "page-guide": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置页向导模式",
        "description_zh": "设置页向导模式"
      },
      "time-line-flow": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置时间线",
        "description_zh": "设置时间线"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置为垂直模式",
        "description_zh": "设置为垂直模式"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/wizard",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/wizard",
    "typeDetail": {
      "IDataItem": "interface IDataItem {\n  name: string\n  status: string\n  showNode?: boolean\n  content?: string\n  imgUrl?: string\n  users?: string\n  userName?: string\n  roleNumber?: string\n  date?: string\n  values?: IDataItemValuesItem[]\n}\n\ninterface IDataItemValuesItem {\n  text: string\n  value: string\n}"
    },
    "events": [
      {
        "name": "btn-next",
        "description": "页向导模式下，点击“下一步”按钮触发的回调事件",
        "description_zh": "页向导模式下，点击“下一步”按钮触发的回调事件",
        "params": "(datas: IDataItem[]) => void"
      },
      {
        "name": "btn-prev",
        "description": "页向导模式下，点击“上一步”按钮触发的回调事件",
        "description_zh": "页向导模式下，点击“上一步”按钮触发的回调事件",
        "params": "(datas: IDataItem[]) => void"
      },
      {
        "name": "btn-save",
        "description": "页向导模式下，点击“保存”按钮触发的回调事件",
        "description_zh": "页向导模式下，点击“保存”按钮触发的回调事件",
        "params": "(datas: IDataItem[]) => void"
      },
      {
        "name": "btn-submit",
        "description": "页向导模式下，点击“下一步”导致最后一个节点的状态为 \"doing\" 时，点击“提交”按钮触发的回调事件",
        "description_zh": "页向导模式下，点击“下一步”导致最后一个节点的状态为 \"doing\" 时，点击“提交”按钮触发的回调事件",
        "params": "(datas: IDataItem[]) => void"
      },
      {
        "name": "node-click",
        "description": "节点点击事件",
        "description_zh": "节点点击事件",
        "params": "(node: IDataItem, index: number, event: Event) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "base",
        "description": "基本插槽",
        "description_zh": "基本插槽"
      },
      {
        "name": "stepbutton",
        "description": "页向导模式按钮插槽",
        "description_zh": "页向导模式按钮插槽"
      }
    ],
    "filename": "Wizard"
  },
  {
    "name": "TinyAlert",
    "props": {
      "center": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "文字是否居中",
        "description_zh": "文字是否居中"
      },
      "closable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "警告是否可以关闭",
        "description_zh": "警告是否可以关闭"
      },
      "close-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "关闭按钮自定义文本",
        "description_zh": "关闭按钮自定义文本"
      },
      "custom-class": {
        "default": "'customClass'",
        "value": "",
        "type": "string",
        "description": "自定义类名",
        "description_zh": "自定义类名"
      },
      "description": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "警告的提示内容",
        "description_zh": "警告的提示内容"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "传入图标组件自定义警告的图标，默认会根据 type 值自动使用对应图标",
        "description_zh": "传入图标组件自定义警告的图标，默认会根据 type 值自动使用对应图标"
      },
      "show-icon": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示图标",
        "description_zh": "是否显示图标"
      },
      "size": {
        "default": "'normal'",
        "value": "",
        "type": "'normal' | 'large'",
        "description": "警告的尺寸大小",
        "description_zh": "警告的尺寸大小"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "警告的标题，在 size 为 large 时有效，默认会根据 type 自动设置",
        "description_zh": "警告的标题，在 size 为 large 时有效，默认会根据 type 自动设置"
      },
      "type": {
        "default": "'info'",
        "value": "",
        "type": "IType",
        "description": "警告的类型",
        "description_zh": "警告的类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/alert",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/alert",
    "typeDetail": {
      "IType": "type IType = 'success' | 'warning' | 'info' | 'error' | 'simple'"
    },
    "events": [
      {
        "name": "close",
        "description": "关闭 alert 时触发的事件",
        "description_zh": "关闭 alert 时触发的事件",
        "params": "() => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "close",
        "description": "自定义关闭内容，当 closable 属性为 false 时有效",
        "description_zh": "自定义关闭内容，当 closable 属性为 false 时有效"
      },
      {
        "name": "default",
        "description": "组件默认插槽，当 size 设置为 large 后有效",
        "description_zh": "组件默认插槽，当 size 设置为 large 后有效"
      },
      {
        "name": "description",
        "description": "提示内容",
        "description_zh": "提示内容"
      },
      {
        "name": "title",
        "description": "标题的内容，当 size 设置为 large 后有效",
        "description_zh": "标题的内容，当 size 设置为 large 后有效"
      }
    ],
    "filename": "Alert"
  },
  {
    "name": "TinyDialogBox",
    "props": {
      "append-to-body": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "DialogBox 本身是否插入到 body 上，嵌套的 Dialog 必须指定该属性并赋值为 true",
        "description_zh": "DialogBox 本身是否插入到 body 上，嵌套的 Dialog 必须指定该属性并赋值为 true"
      },
      "center": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "设置为 true 时 弹出框的头部与底部内容会自动居中",
        "description_zh": "设置为 true 时 弹出框的头部与底部内容会自动居中"
      },
      "close-on-click-modal": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否可以通过点击遮罩层关闭弹窗",
        "description_zh": "是否可以通过点击遮罩层关闭弹窗"
      },
      "close-on-press-escape": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否可以通过 ESC 键关闭遮罩层",
        "description_zh": "是否可以通过 ESC 键关闭遮罩层"
      },
      "destroy-on-close": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "关闭时销毁对话框内的元素，而非隐藏",
        "description_zh": "关闭时销毁对话框内的元素，而非隐藏"
      },
      "dialog-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "自定义配置弹窗类名",
        "description_zh": "自定义配置弹窗类名"
      },
      "dialog-transition": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "启动弹出动效由小变大",
        "description_zh": "启动弹出动效由小变大"
      },
      "drag-outside-window": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "可将弹窗拖出窗口",
        "description_zh": "可将弹窗拖出窗口"
      },
      "draggable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启弹窗的拖拽功能",
        "description_zh": "是否开启弹窗的拖拽功能"
      },
      "fullscreen": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "弹出框是否全屏",
        "description_zh": "弹出框是否全屏"
      },
      "is-form-reset": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "关闭弹窗，默认重置表单数据",
        "description_zh": "关闭弹窗，默认重置表单数据"
      },
      "lock-scroll": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Dialog 弹出时是否禁用滚动条",
        "description_zh": "Dialog 弹出时是否禁用滚动条"
      },
      ":max-height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "实现窗口最大高度",
        "description_zh": "实现窗口最大高度"
      },
      "modal": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否启用遮罩层",
        "description_zh": "是否启用遮罩层"
      },
      "modal-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "遮罩层是否应用到 body 上，为 false 时遮罩层会应用到 DialogBox 的父元素上",
        "description_zh": "遮罩层是否应用到 body 上，为 false 时遮罩层会应用到 DialogBox 的父元素上"
      },
      "resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "弹窗是否能切换全屏",
        "description_zh": "弹窗是否能切换全屏"
      },
      "right-slide": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启弹出右侧滑出功能",
        "description_zh": "是否开启弹出右侧滑出功能"
      },
      "show-close": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示关闭按钮",
        "description_zh": "是否显示关闭按钮"
      },
      "show-header": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示弹窗头部 header",
        "description_zh": "是否显示弹窗头部 header"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "弹出框标题",
        "description_zh": "弹出框标题"
      },
      "top": {
        "default": "'15vh'",
        "value": "",
        "type": "string",
        "description": "设置弹出框距离窗口顶部的高度",
        "description_zh": "设置弹出框距离窗口顶部的高度"
      },
      "visible": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "控制弹出框显示与关闭",
        "description_zh": "控制弹出框显示与关闭"
      },
      "width": {
        "default": "'500px'",
        "value": "",
        "type": "string",
        "description": "弹出框的宽度",
        "description_zh": "弹出框的宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dialog-box",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dialog-box",
    "typeDetail": {
      "IResizeEvent": "interface IResizeEvent {\n  // 当前的全屏状态\n  fullscreen: boolean\n  // 弹窗的元素\n  dialog: HTMLElement\n}"
    },
    "events": [
      {
        "name": "before-close",
        "description": "Dialog 关闭弹窗前，执行的事件",
        "description_zh": "Dialog 关闭弹窗前，执行的事件",
        "params": "(arg:() => void) => void"
      },
      {
        "name": "close",
        "description": "Dialog 关闭的回调",
        "description_zh": "Dialog 关闭的回调",
        "params": "() => {}"
      },
      {
        "name": "closed",
        "description": "Dialog 关闭动画结束时的回调",
        "description_zh": "Dialog 关闭动画结束时的回调",
        "params": "() => {}"
      },
      {
        "name": "drag-end",
        "description": "Dialog 拖拽结束事件;arg包含弹窗的位置等信息",
        "description_zh": "Dialog 拖拽结束事件;arg包含弹窗的位置等信息",
        "params": "(arg) => {}"
      },
      {
        "name": "drag-move",
        "description": "Dialog 拖拽移动事件;arg包含弹窗的位置等信息",
        "description_zh": "Dialog 拖拽移动事件;arg包含弹窗的位置等信息",
        "params": "(arg) => {}"
      },
      {
        "name": "drag-start",
        "description": "Dialog 拖拽开始事件;arg包含弹窗的位置等信息",
        "description_zh": "Dialog 拖拽开始事件;arg包含弹窗的位置等信息",
        "params": "(arg) => {}"
      },
      {
        "name": "open",
        "description": "Dialog 打开的回调",
        "description_zh": "Dialog 打开的回调",
        "params": "() => {}"
      },
      {
        "name": "opened",
        "description": "Dialog 打开动画结束时的回调",
        "description_zh": "Dialog 打开动画结束时的回调",
        "params": "() => {}"
      },
      {
        "name": "resize",
        "description": "弹窗大小变化时的事件，比如切换全屏状态时",
        "description_zh": "弹窗大小变化时的事件，比如切换全屏状态时",
        "params": "(ev: IResizeEvent) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Dialog 的内容插槽",
        "description_zh": "Dialog 的内容插槽"
      },
      {
        "name": "footer",
        "description": "Dialog 按钮操作区的内容插槽",
        "description_zh": "Dialog 按钮操作区的内容插槽"
      },
      {
        "name": "title",
        "description": "Dialog 标题区的内容插槽",
        "description_zh": "Dialog 标题区的内容插槽"
      }
    ],
    "filename": "DialogBox"
  },
  {
    "name": "TinyDrawer",
    "props": {
      "before-close": {
        "default": "--",
        "value": "",
        "type": "(type) => boolean",
        "description": "弹窗关闭前的回调，返回 false 会阻止弹窗关闭",
        "description_zh": "弹窗关闭前的回调，返回 false 会阻止弹窗关闭"
      },
      "dragable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否开启抽屉的宽度拖拽功能",
        "description_zh": "是否开启抽屉的宽度拖拽功能"
      },
      "mask": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示遮罩层",
        "description_zh": "是否显示遮罩层"
      },
      "mask-closable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "默认情况下，弹窗打开后，可以单击遮罩层关闭弹窗，设置 mask-closable 为 false 后将禁用该功能",
        "description_zh": "默认情况下，弹窗打开后，可以单击遮罩层关闭弹窗，设置 mask-closable 为 false 后将禁用该功能"
      },
      "placement": {
        "default": "'right'",
        "value": "",
        "type": "'left' | 'right' | 'top' | 'bottom' ",
        "description": "设置抽屉的方向",
        "description_zh": "设置抽屉的方向"
      },
      "show-close": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示关闭图标",
        "description_zh": "是否显示关闭图标"
      },
      "show-footer": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示底部",
        "description_zh": "是否显示底部"
      },
      "show-header": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示头部",
        "description_zh": "是否显示头部"
      },
      "visible": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "控制抽屉的显示与关闭",
        "description_zh": "控制抽屉的显示与关闭"
      },
      "width": {
        "default": "'500px'",
        "value": "",
        "type": "string",
        "description": "设置抽屉的宽度",
        "description_zh": "设置抽屉的宽度"
      },
      ":z-index": {
        "default": "2000",
        "value": "",
        "type": "number",
        "description": "自定义堆叠顺序（对于某些特殊场景，比如被遮挡时可能会用到）",
        "description_zh": "自定义堆叠顺序（对于某些特殊场景，比如被遮挡时可能会用到）"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/drawer",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/drawer",
    "typeDetail": {},
    "events": [
      {
        "name": "close",
        "description": "关闭抽屉事件",
        "description_zh": "关闭抽屉事件",
        "params": "()=> void"
      },
      {
        "name": "confirm",
        "description": "确认事件，设置 :show-footer=\"true\" 时有效",
        "description_zh": "确认事件，设置 :show-footer=\"true\" 时有效",
        "params": "()=> void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      },
      {
        "name": "footer",
        "description": "底部插槽",
        "description_zh": "底部插槽"
      },
      {
        "name": "header",
        "description": "头部插槽",
        "description_zh": "头部插槽"
      },
      {
        "name": "header-right",
        "description": "头部右侧插槽",
        "description_zh": "头部右侧插槽"
      }
    ],
    "filename": "Drawer"
  },
  {
    "name": "TinyModal",
    "props": {
      "cancel-btn-props": {
        "default": "{}",
        "value": "",
        "type": "Button.props",
        "description": "自定义取消按钮的 props ，可选值与 Button 组件一致",
        "description_zh": "自定义取消按钮的 props ，可选值与 Button 组件一致"
      },
      "cancel-content": {
        "default": "'取消'",
        "value": "",
        "type": "string",
        "description": "自定义取消按钮内容",
        "description_zh": "自定义取消按钮内容"
      },
      "confirm-btn-props": {
        "default": "{}",
        "value": "",
        "type": "Button.props",
        "description": "自定义确认按钮 props，可选值与 Button 组件一致",
        "description_zh": "自定义确认按钮 props，可选值与 Button 组件一致"
      },
      "confirm-content": {
        "default": "'确认'",
        "value": "",
        "type": "string",
        "description": "自定义确认按钮内容",
        "description_zh": "自定义确认按钮内容"
      },
      "duration": {
        "default": "3000",
        "value": "",
        "type": "number | string",
        "description": "自动关闭的延时，仅当 type 为 'message' 有效",
        "description_zh": "自动关闭的延时，仅当 type 为 'message' 有效"
      },
      "esc-closable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否允许按 Esc 键关闭窗口",
        "description_zh": "是否允许按 Esc 键关闭窗口"
      },
      "footer-dragable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "控制底部可拖拽",
        "description_zh": "控制底部可拖拽"
      },
      "fullscreen": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否最大化显示",
        "description_zh": "是否最大化显示"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "窗口的高度",
        "description_zh": "窗口的高度"
      },
      "id": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "如果不想窗口重复点击，可以设置唯一的 id 防止重复提示，仅当 type 为 'message' 有效",
        "description_zh": "如果不想窗口重复点击，可以设置唯一的 id 防止重复提示，仅当 type 为 'message' 有效"
      },
      "is-form-reset": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "关闭弹窗时，是否重置表单数据",
        "description_zh": "关闭弹窗时，是否重置表单数据"
      },
      "lock-scroll": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否锁住滚动条，不允许页面滚动",
        "description_zh": "是否锁住滚动条，不允许页面滚动"
      },
      "lock-view": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否锁住页面，不允许窗口之外的任何操作",
        "description_zh": "是否锁住页面，不允许窗口之外的任何操作"
      },
      "mask": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示遮罩层",
        "description_zh": "是否显示遮罩层"
      },
      "mask-closable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否允许点击遮罩层关闭窗口",
        "description_zh": "是否允许点击遮罩层关闭窗口"
      },
      "message": {
        "default": "--",
        "value": "",
        "type": "string | VNode | () => string | VNode",
        "description": "窗口的内容",
        "description_zh": "窗口的内容"
      },
      "message-closable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "'message' 类型弹窗是否显示关闭按钮",
        "description_zh": "'message' 类型弹窗是否显示关闭按钮"
      },
      "min-height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "窗口的最小高度",
        "description_zh": "窗口的最小高度"
      },
      "min-width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "窗口的最小宽度",
        "description_zh": "窗口的最小宽度"
      },
      "v-model": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示",
        "description_zh": "是否显示"
      },
      "resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否允许拖动调整窗口大小",
        "description_zh": "是否允许拖动调整窗口大小"
      },
      "show-footer": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示底部",
        "description_zh": "是否显示底部"
      },
      "show-header": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示头部",
        "description_zh": "是否显示头部"
      },
      "status": {
        "default": "'info'",
        "value": "",
        "type": "IStatus",
        "description": "消息状态，当 type 为 'alert'、'message'、'confirm' 时有效",
        "description_zh": "消息状态，当 type 为 'alert'、'message'、'confirm' 时有效"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "窗口的标题",
        "description_zh": "窗口的标题"
      },
      "top": {
        "default": "15",
        "value": "",
        "type": "number | string",
        "description": "消息距离顶部的位置，仅当 type 为 'message' 时有效",
        "description_zh": "消息距离顶部的位置，仅当 type 为 'message' 时有效"
      },
      "type": {
        "default": "'alert'",
        "value": "",
        "type": "'alert' | 'confirm' | 'message'",
        "description": "窗口类型",
        "description_zh": "窗口类型"
      },
      "width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "窗口的宽度（设置宽度像素或者百分比，浏览器窗口大小改变可居中显示)",
        "description_zh": "窗口的宽度（设置宽度像素或者百分比，浏览器窗口大小改变可居中显示)"
      },
      ":z-index": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "自定义堆叠顺序（对于某些特殊场景，比如被遮挡时可能会用到）",
        "description_zh": "自定义堆叠顺序（对于某些特殊场景，比如被遮挡时可能会用到）"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/modal",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/modal",
    "typeDetail": {
      "IModalEventParam": "interface IModalEventParam {\n  type: 'alert' | 'message' | 'confirm' // 弹窗类型\n  $modal: ComponentPublicInstance // Modal组件实例\n}",
      "IStatus": "type IStatus = 'info' | 'success' | 'warning' | 'error' | 'loading'"
    },
    "events": [
      {
        "name": "cancel",
        "description": "点击取消按钮时会触发该事件",
        "description_zh": "点击取消按钮时会触发该事件",
        "params": "(params: IModalEventParam, event: Event) => void"
      },
      {
        "name": "close",
        "description": "点击关闭按钮时会触发该事件",
        "description_zh": "点击关闭按钮时会触发该事件",
        "params": "(params: IModalEventParam, event: Event) => void"
      },
      {
        "name": "confirm",
        "description": "点击确定按钮时会触发该事件",
        "description_zh": "点击确定按钮时会触发该事件",
        "params": "(params: IModalEventParam, event: Event) => void"
      },
      {
        "name": "hide",
        "description": "在窗口关闭时会触发该事件",
        "description_zh": "在窗口关闭时会触发该事件",
        "params": "(params: IModalEventParam) => void"
      },
      {
        "name": "show",
        "description": "在窗口显示时会触发该事件",
        "description_zh": "在窗口显示时会触发该事件",
        "params": "(params: IModalEventParam) => void"
      },
      {
        "name": "zoom",
        "description": "窗口缩放时会触发该事件",
        "description_zh": "窗口缩放时会触发该事件",
        "params": "(params: IModalEventParam, event: Event) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      },
      {
        "name": "footer",
        "description": "窗口底部的模板",
        "description_zh": "窗口底部的模板"
      }
    ],
    "filename": "Modal"
  },
  {
    "name": "TinyPopConfirm",
    "props": {
      "cancel-button": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否展示取消按钮",
        "description_zh": "是否展示取消按钮"
      },
      "custom-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为气泡提示框自定义类名",
        "description_zh": "为气泡提示框自定义类名"
      },
      "message": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "气泡提示框的内容",
        "description_zh": "气泡提示框的内容"
      },
      "placement": {
        "default": "'top'",
        "value": "",
        "type": "IPopperPlacement",
        "description": "气泡提示框显示位置",
        "description_zh": "气泡提示框显示位置"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置气泡提示框的标题",
        "description_zh": "设置气泡提示框的标题"
      },
      "trigger": {
        "default": "'hover'",
        "value": "",
        "type": "'click' | 'hover'",
        "description": "气泡提示框显示触发方式",
        "description_zh": "气泡提示框显示触发方式"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "IPopconfirmtype",
        "description": "提示图标类型，可以传入自定义图标",
        "description_zh": "提示图标类型，可以传入自定义图标"
      },
      "width": {
        "default": "350",
        "value": "",
        "type": "string | number",
        "description": "气泡提示框宽度",
        "description_zh": "气泡提示框宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popconfirm",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popconfirm",
    "typeDetail": {
      "IPplacement": "type IPplacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'",
      "IPopconfirmtype": "type IPopconfirmtype = 'info' | 'success' | 'warning' | 'error' | Component",
      "IPopconfirmState": "interface IPopconfirmState {\n        showPopover: boolean\n      }"
    },
    "events": [
      {
        "name": "confirm",
        "description": "点击确认按钮时触发",
        "description_zh": "点击确认按钮时触发",
        "params": "(state: IPopconfirmState) => void"
      },
      {
        "name": "hide",
        "description": "气泡确认框关闭时触发",
        "description_zh": "气泡确认框关闭时触发",
        "params": "(state: IPopconfirmState) => void"
      },
      {
        "name": "show",
        "description": "气泡确认框显示时触发",
        "description_zh": "气泡确认框显示时触发",
        "params": "(state: IPopconfirmState) => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "footer",
        "description": "底部插槽",
        "description_zh": "底部插槽"
      },
      {
        "name": "reference",
        "description": "触发气泡提示框显示的 HTML 元素",
        "description_zh": "触发气泡提示框显示的 HTML 元素"
      }
    ],
    "filename": "PopConfirm"
  },
  {
    "name": "TinyProgress",
    "props": {
      "color": {
        "default": "--",
        "value": "",
        "type": "string | IColorItem[] | (percentage: string) => string",
        "description": "进度条背景色（会覆盖 status 状态颜色）",
        "description_zh": "进度条背景色（会覆盖 status 状态颜色）"
      },
      "format": {
        "default": "--",
        "value": "",
        "type": "() => string",
        "description": "自定义进度条的文字",
        "description_zh": "自定义进度条的文字"
      },
      ":percentage": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "百分比（必填）；该属性的可选值为 0-100",
        "description_zh": "百分比（必填）；该属性的可选值为 0-100"
      },
      "show-text": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示进度条文字内容",
        "description_zh": "是否显示进度条文字内容"
      },
      "status": {
        "default": "--",
        "value": "",
        "type": "'success' | 'exception' | 'warning'",
        "description": "进度条当前状态",
        "description_zh": "进度条当前状态"
      },
      ":stroke-width": {
        "default": "6",
        "value": "",
        "type": "number",
        "description": "line 类型进度条的宽度，单位 px",
        "description_zh": "line 类型进度条的宽度，单位 px"
      },
      "text-inside": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "进度条显示文字内置在进度条内（只在 type=line 时可用）",
        "description_zh": "进度条显示文字内置在进度条内（只在 type=line 时可用）"
      },
      "type": {
        "default": "'line'",
        "value": "",
        "type": "'line' | 'circle' | 'dashboard'",
        "description": "进度条类型",
        "description_zh": "进度条类型"
      },
      ":width": {
        "default": "126",
        "value": "",
        "type": "number",
        "description": "环形进度条画布宽度（只在 type 为 circle 或 dashboard 时可用）",
        "description_zh": "环形进度条画布宽度（只在 type 为 circle 或 dashboard 时可用）"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/progress",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/progress",
    "typeDetail": {
      "IColorItem": "interface IColorItem {\n  color: string\n  percentage: number\n}"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Progress"
  },
  {
    "name": "TinyPopover",
    "props": {
      "append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否添加到body上",
        "description_zh": "是否添加到body上"
      },
      ":arrow-offset": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "弹出层的箭头偏移位置",
        "description_zh": "弹出层的箭头偏移位置"
      },
      ":close-delay": {
        "default": "200",
        "value": "",
        "type": "number",
        "description": "触发方式为 hover 时的隐藏延迟，单位为毫秒",
        "description_zh": "触发方式为 hover 时的隐藏延迟，单位为毫秒"
      },
      "content": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "弹出层的内容",
        "description_zh": "弹出层的内容"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "height": {
        "default": "'auto'",
        "value": "",
        "type": "'auto' | number",
        "description": "弹出层高度",
        "description_zh": "弹出层高度"
      },
      ":offset": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "弹出层的偏移量",
        "description_zh": "弹出层的偏移量"
      },
      ":open-delay": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "触发方式为 hover 时的显示延迟，单位为毫秒",
        "description_zh": "触发方式为 hover 时的显示延迟，单位为毫秒"
      },
      "placement": {
        "default": "'bottom'",
        "value": "",
        "type": "IPopperPlacement",
        "description": "弹出层出现的位置",
        "description_zh": "弹出层出现的位置"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为弹出层添加类名",
        "description_zh": "为弹出层添加类名"
      },
      ":popper-options": {
        "default": "{}",
        "value": "",
        "type": "object",
        "description": "弹出层参数",
        "description_zh": "弹出层参数"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "弹出层的标题",
        "description_zh": "弹出层的标题"
      },
      "transition": {
        "default": "'fade-in-linear'",
        "value": "",
        "type": "string",
        "description": "定义渐变动画",
        "description_zh": "定义渐变动画"
      },
      "trigger": {
        "default": "'click'",
        "value": "",
        "type": "'click' | 'focus' | 'hover' | 'manual'",
        "description": "触发方式",
        "description_zh": "触发方式"
      },
      "v-model / modelValue": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "状态是否可见，仅在  trigger=\"manual\"  时有效",
        "description_zh": "状态是否可见，仅在  trigger=\"manual\"  时有效"
      },
      "visible-arrow": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示弹出层的箭头",
        "description_zh": "是否显示弹出层的箭头"
      },
      "width": {
        "default": "'auto'",
        "value": "",
        "type": "'auto' | number",
        "description": "弹出层宽度",
        "description_zh": "弹出层宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popover",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popover",
    "typeDetail": {
      "IPopperOption": "interface IPopperOption {\n  bubbling: boolean // 是否监听元素所有上级有滚动元素的scroll事件，监听到则更新popper的位置。用于解决某些弹出层位置在页面滚动时，位置不正确的场景，默认false\n  followReferenceHide: boolean // 当触发源隐藏时，自动隐藏弹出层，默认true\n  removeOnDestroy: boolean // 弹出层消失后，是否移除弹出层的DOM元素，布尔false\n  updateHiddenPopperOnScroll: boolean  // 滚动过程中是否更新隐藏的弹出层位置\n  boundariesElement: 'viewport' | 'body' | HTMLElement // 滚动过程中,弹出层的碰撞边界。 默认值为： 'viewport'\n}",
      "IPopperPlacement": "type IPopperPlacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [
      {
        "name": "after-enter",
        "description": "进入的动画播放完毕后触发",
        "description_zh": "进入的动画播放完毕后触发",
        "params": "()=>void"
      },
      {
        "name": "after-leave",
        "description": "离开的动画播放完毕后触发",
        "description_zh": "离开的动画播放完毕后触发",
        "params": "()=>void"
      },
      {
        "name": "hide",
        "description": "隐藏时触发",
        "description_zh": "隐藏时触发",
        "params": "()=>void"
      },
      {
        "name": "show",
        "description": "显示时触发",
        "description_zh": "显示时触发",
        "params": "()=>void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "弹出层元素插槽",
        "description_zh": "弹出层元素插槽"
      },
      {
        "name": "reference",
        "description": "触发源元素插槽，该插槽是必传插槽。",
        "description_zh": "触发源元素插槽，该插槽是必传插槽。"
      }
    ],
    "filename": "Popover"
  },
  {
    "name": "TinySkeleton",
    "props": {
      "animated": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否开启动画",
        "description_zh": "是否开启动画"
      },
      "avatar": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否显示头像",
        "description_zh": "是否显示头像"
      },
      "loading": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示骨架屏，传 false 时会展示加载完成后的内容",
        "description_zh": "是否显示骨架屏，传 false 时会展示加载完成后的内容"
      },
      ":rows": {
        "default": "3",
        "value": "",
        "type": "number",
        "description": "默认样式，可配置段落显示行数",
        "description_zh": "默认样式，可配置段落显示行数"
      },
      "rows-width": {
        "default": "[]",
        "value": "",
        "type": "number[] | string[]",
        "description": "自定义段落每一行的宽度，数组中的每一项可以为 number 或 string ，当为 number 时，组件会自动增加 px 单位",
        "description_zh": "自定义段落每一行的宽度，数组中的每一项可以为 number 或 string ，当为 number 时，组件会自动增加 px 单位"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/skeleton",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/skeleton",
    "typeDetail": {
      "IVariant": "type IVariant = 'image' | 'circle' | 'square'",
      "ISize": "type ISize = 'large' | 'medium' | 'small'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "加载完成后显示的内容",
        "description_zh": "加载完成后显示的内容"
      },
      {
        "name": "placeholder",
        "description": "自定义骨架屏结构",
        "description_zh": "自定义骨架屏结构"
      }
    ],
    "filename": "Skeleton"
  },
  {
    "name": "TinySkeletonItem",
    "props": {
      "size": {
        "default": "'medium'",
        "value": "",
        "type": "ISize",
        "description": "针对 image 和 circle 形态，内置三种大小",
        "description_zh": "针对 image 和 circle 形态，内置三种大小"
      },
      "variant": {
        "default": "'square'",
        "value": "",
        "type": "IVariant",
        "description": "骨架屏形态",
        "description_zh": "骨架屏形态"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/skeleton",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/skeleton",
    "typeDetail": {
      "IVariant": "type IVariant = 'image' | 'circle' | 'square'",
      "ISize": "type ISize = 'large' | 'medium' | 'small'"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "SkeletonItem"
  },
  {
    "name": "TinyToolTip",
    "props": {
      "append-to-body": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "是否将弹出层的元素添加到body上",
        "description_zh": "是否将弹出层的元素添加到body上"
      },
      ":close-delay": {
        "default": "300",
        "value": "",
        "type": "number",
        "description": "延迟关闭的时长，单位毫秒",
        "description_zh": "延迟关闭的时长，单位毫秒"
      },
      "content": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "显示的内容",
        "description_zh": "显示的内容"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Tooltip 是否禁用",
        "description_zh": "Tooltip 是否禁用"
      },
      "effect": {
        "default": "'dark'",
        "value": "",
        "type": "'dark' | 'light'",
        "description": "提示的主题",
        "description_zh": "提示的主题"
      },
      "enterable": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "鼠标是否可进入到 tooltip 的弹出层中",
        "description_zh": "鼠标是否可进入到 tooltip 的弹出层中"
      },
      ":hide-after": {
        "default": " 0",
        "value": "",
        "type": "number",
        "description": "出现后自动隐藏的时长，单位毫秒，为 0 则不会自动隐藏",
        "description_zh": "出现后自动隐藏的时长，单位毫秒，为 0 则不会自动隐藏"
      },
      "manual": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "手动控制模式，设置为 true 后，mouseenter 和 mouseleave 事件将不会生效",
        "description_zh": "手动控制模式，设置为 true 后，mouseenter 和 mouseleave 事件将不会生效"
      },
      "v-model": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "配置 manual = true时，控制弹出状态",
        "description_zh": "配置 manual = true时，控制弹出状态"
      },
      ":offset": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "弹出层出现位置的偏移量",
        "description_zh": "弹出层出现位置的偏移量"
      },
      ":open-delay": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "延迟出现的时长，单位毫秒",
        "description_zh": "延迟出现的时长，单位毫秒"
      },
      "placement": {
        "default": "'bottom'",
        "value": "",
        "type": "IPopperPlacement",
        "description": "Tooltip 的出现位置",
        "description_zh": "Tooltip 的出现位置"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为 Tooltip 的弹出层添加类名",
        "description_zh": "为 Tooltip 的弹出层添加类名"
      },
      "popper-options": {
        "default": " { }",
        "value": "",
        "type": "IPopperOption",
        "description": "弹出层参数",
        "description_zh": "弹出层参数"
      },
      "pre": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "content 文本是否预格式化",
        "description_zh": "content 文本是否预格式化"
      },
      "renderContent": {
        "default": "--",
        "value": "",
        "type": "(h: Vue.h, content:string)=> VNode",
        "description": "自定义渲染函数,返回需要渲染的节点内容",
        "description_zh": "自定义渲染函数,返回需要渲染的节点内容"
      },
      ":tabindex": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "设置组件的触发源的 tabindex",
        "description_zh": "设置组件的触发源的 tabindex"
      },
      "transition": {
        "default": "'tiny-fade-in-linear'",
        "value": "",
        "type": "string",
        "description": "定义渐变动画的类名",
        "description_zh": "定义渐变动画的类名"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "'normal' | 'warning' | 'error' | 'info' | 'success'",
        "description": "提示的类型， type 的优先级大于 effect ",
        "description_zh": "提示的类型， type 的优先级大于 effect "
      },
      "visible": {
        "default": "'always'",
        "value": "",
        "type": " 'always' | 'auto'",
        "description": "提示的智能出现的模式",
        "description_zh": "提示的智能出现的模式"
      },
      "visible-arrow": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示箭头",
        "description_zh": "是否显示箭头"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tooltip",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tooltip",
    "typeDetail": {
      "IPopperOption": "interface IPopperOption {\n  bubbling: boolean // 是否监听元素所有上级有滚动元素的scroll事件，监听到则更新popper的位置。用于解决某些弹出层位置在页面滚动时，位置不正确的场景，默认false\n  followReferenceHide: boolean // 当触发源隐藏时，自动隐藏弹出层，默认true\n  removeOnDestroy: boolean // 弹出层消失后，是否移除弹出层的DOM元素，布尔false\n  updateHiddenPopperOnScroll: boolean  // 滚动过程中是否更新隐藏的弹出层位置\n  boundariesElement: 'viewport' | 'body' | HTMLElement // 滚动过程中,弹出层的碰撞边界。 默认值为： 'viewport'\n}",
      "IPopperPlacement": "type IPopperPlacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "content",
        "description": "内容插槽",
        "description_zh": "内容插槽"
      },
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "ToolTip"
  },
  {
    "name": "TinyChart",
    "props": {
      "cancel-resize-check": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用 resize 时的容器检测",
        "description_zh": "是否禁用 resize 时的容器检测"
      },
      ":change-delay": {
        "default": "'0'",
        "value": "",
        "type": "number",
        "description": "属性修改触发图表重绘回调的延迟",
        "description_zh": "属性修改触发图表重绘回调的延迟"
      },
      ":data": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "数据由指标和维度组成,“维度” 指的是数据的属性,“指标” 是量化衡量标准",
        "description_zh": "数据由指标和维度组成,“维度” 指的是数据的属性,“指标” 是量化衡量标准"
      },
      ":events": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "事件绑定",
        "description_zh": "事件绑定"
      },
      "extend": {
        "default": "--",
        "value": "",
        "type": "IChartProps",
        "description": "echarts 的配置项",
        "description_zh": "echarts 的配置项"
      },
      "height": {
        "default": "'400px'",
        "value": "",
        "type": "string",
        "description": "设置图表容器的高度。",
        "description_zh": "设置图表容器的高度。"
      },
      ":init-options": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "init 附加参数",
        "description_zh": "init 附加参数"
      },
      "judge-width": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否处理生成图表时的宽度问题",
        "description_zh": "是否处理生成图表时的宽度问题"
      },
      "legend-visible": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示图例",
        "description_zh": "是否显示图例"
      },
      "not-set-unchange": {
        "default": "--",
        "value": "",
        "type": "array",
        "description": "未发生变化时不参加 setOption 的属性",
        "description_zh": "未发生变化时不参加 setOption 的属性"
      },
      ":resize-delay": {
        "default": "'200'",
        "value": "",
        "type": "number",
        "description": "窗口 resize 事件回调的延迟",
        "description_zh": "窗口 resize 事件回调的延迟"
      },
      "resizeable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否处理窗口 resize 事件",
        "description_zh": "是否处理窗口 resize 事件"
      },
      "set-option-opts": {
        "default": "true",
        "value": "",
        "type": "boolean | object",
        "description": "echarts setOption 的第二个参数",
        "description_zh": "echarts setOption 的第二个参数"
      },
      ":theme": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "自定义主题名称。;自定义主题对象。",
        "description_zh": "自定义主题名称。;自定义主题对象。"
      },
      "theme-name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "自定义主题名称,如果设置了 theme-name, 则 theme 无效",
        "description_zh": "自定义主题名称,如果设置了 theme-name, 则 theme 无效"
      },
      "tooltip-visible": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示提示框",
        "description_zh": "是否显示提示框"
      },
      "width": {
        "default": "'auto'",
        "value": "",
        "type": "string",
        "description": "设置图表容器的宽度。",
        "description_zh": "设置图表容器的宽度。"
      },
      ":width-change-delay": {
        "default": "'300'",
        "value": "",
        "type": "number",
        "description": "容器宽度变化的延迟",
        "description_zh": "容器宽度变化的延迟"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/chart",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/chart",
    "typeDetail": {
      "IChartProps": "interface IChartProps {\n  afterConfig: () => void \n  afterSetOption: () => void \n  afterSetOptionOnce: () => void \n  animation: object\n  axisPointer: object | array\n  backgroundColor: object | string\n  beforeConfig: () => void \n  brush: object | array\n  cancelResizeCheck: boolean\n  changeDelay: number // 默认值 0 \n  colorMode: string\n  colors: array \n  data: object | array\n  dataEmpty: boolean\n  dataZoom: object | array\n  events: object \n  extend: object\n  geo: object | array\n  graphic: object | array\n  grid: object | array\n  height: string // 默认值 '400px' \n  initOptions: object\n  judgeWidth: boolean // 默认值 false \n  legend: object | array\n  legendPosition: string \n  legendVisible: boolean // 默认值 true \n  loading: boolean\n  markArea: object \n  markLine: object \n  markPoint: object \n  notSetUnchange: array\n  radar: object\n  resizeDelay: number // 默认值 200 \n  resizeable: boolean // 默认值 true \n  series: object | array\n  setOptionOpts: boolean | object // 默认值 true \n  settings: object\n  textStyle: object | array\n  theme: object\n  themeName: object | string\n  timeline: object | array\n  title: object | array\n  toolbox: object | array\n  tooltip: object\n  tooltipFormatter: () => void \n  tooltipVisible: boolean // 默认值 true \n  visualMap: object | array \n  width: string // 默认值 'auto' \n  widthChangeDelay: number // 默认值 300 \n  xAxis: object | array\n  yAxis: object | array\n}",
      "IChartSettings": "interface IChartSettings {\n  type: string // 图表类型，可选值' bar '，' histogram '，' line ',' pie '，' ring '，' funnel '，' radar '，' waterfall '\n}"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Chart"
  },
  {
    "name": "TinyBulletinBoard",
    "props": {
      "active-name": {
        "default": "1",
        "value": "",
        "type": "string",
        "description": "默认显示第1栏，可选'1' '2' '3'等",
        "description_zh": "默认显示第1栏，可选'1' '2' '3'等"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "tab-item 数据;tab-item 数据",
        "description_zh": "tab-item 数据;tab-item 数据"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "object , string",
        "description": "tab-item中第一条信息的字体图标;tab-item中第一条信息的字体图标",
        "description_zh": "tab-item中第一条信息的字体图标;tab-item中第一条信息的字体图标"
      },
      ":more-link": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "更多按钮跳转地址，show-more 为true 的时候生效;moreLink: { url: 'localhost:3000/', // 跳转地址，url 和 route 属性二选一，url优先级高  route: 'Alert', // 跳转路由，url 和 route 属性二选一，url优先级高  target: '_blank', // 跳转方式  text: '更多'  // 链接文本 }",
        "description_zh": "更多按钮跳转地址，show-more 为true 的时候生效;moreLink: { url: 'localhost:3000/', // 跳转地址，url 和 route 属性二选一，url优先级高  route: 'Alert', // 跳转路由，url 和 route 属性二选一，url优先级高  target: '_blank', // 跳转方式  text: '更多'  // 链接文本 }"
      },
      "show-more": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否显示更多按钮，默认显示,需要与 more-link 同时使用",
        "description_zh": "是否显示更多按钮，默认显示,需要与 more-link 同时使用"
      },
      "tab-title": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "tab栏数据",
        "description_zh": "tab栏数据"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "公告牌的标题",
        "description_zh": "公告牌的标题"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/bulletin-board",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/bulletin-board",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "BulletinBoard"
  },
  {
    "name": "TinyConfigProvider",
    "props": {
      "design": {
        "default": "--",
        "value": "",
        "type": "ConfigProviderProps",
        "description": "规范，可以通过该属于定制一些自定义的交互规范",
        "description_zh": "规范，可以通过该属于定制一些自定义的交互规范"
      },
      "direction": {
        "default": "ltr",
        "value": "",
        "type": "'ltr' | 'rtl'",
        "description": "文字样式方向",
        "description_zh": "文字样式方向"
      },
      ":tag": {
        "default": "{enable: true,name: 'div'}",
        "value": "",
        "type": "object",
        "description": "是否被元素包裹, 如果是vue2且没有一个单一节点, 组件会自动创建一个div",
        "description_zh": "是否被元素包裹, 如果是vue2且没有一个单一节点, 组件会自动创建一个div"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/config-provider",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/config-provider",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "ConfigProvider"
  },
  {
    "name": "TinyCrop",
    "props": {
      ":aspect-ratio": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "裁剪框的宽高比;默认为 16 / 9",
        "description_zh": "裁剪框的宽高比;默认为 16 / 9"
      },
      "auto-crop": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "初始化时，是否自动显示裁剪框;默认为 true",
        "description_zh": "初始化时，是否自动显示裁剪框;默认为 true"
      },
      ":auto-crop-area": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "定义自动裁剪面积大小（百分比）;默认为 0.8",
        "description_zh": "定义自动裁剪面积大小（百分比）;默认为 0.8"
      },
      "background": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否显示容器的网格背景;默认为 true",
        "description_zh": "是否显示容器的网格背景;默认为 true"
      },
      "center": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "裁剪框是否在图片正中心;默认为 true",
        "description_zh": "裁剪框是否在图片正中心;默认为 true"
      },
      "crop-type": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置图片裁剪后返回的类型，可配置为 blob 和 base64，默认为 base64",
        "description_zh": "设置图片裁剪后返回的类型，可配置为 blob 和 base64，默认为 base64"
      },
      "cropvisible": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置裁剪弹框是否可见;默认为 false",
        "description_zh": "设置裁剪弹框是否可见;默认为 false"
      },
      "drag-mode": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "定义 cropper 的拖拽模式;默认为 'crop';'crop'： 可以产生一个新的裁剪框 3 。'move'：只可以移动图片 3 。'none'： 什么也不处理",
        "description_zh": "定义 cropper 的拖拽模式;默认为 'crop';'crop'： 可以产生一个新的裁剪框 3 。'move'：只可以移动图片 3 。'none'： 什么也不处理"
      },
      "guides": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否在裁剪框上方显示虚线;默认为 true",
        "description_zh": "是否在裁剪框上方显示虚线;默认为 true"
      },
      "max-size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "设置待裁剪图片的最大大小，默认为 1M ;默认为 1M",
        "description_zh": "设置待裁剪图片的最大大小，默认为 1M ;默认为 1M"
      },
      ":min-container-height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "容器的最小高度;默认为 300",
        "description_zh": "容器的最小高度;默认为 300"
      },
      ":min-container-width": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "容器的最小宽度;默认为 652",
        "description_zh": "容器的最小宽度;默认为 652"
      },
      ":min-crop-box-height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "裁剪层的最小高度;默认为 0",
        "description_zh": "裁剪层的最小高度;默认为 0"
      },
      ":min-crop-box-width": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "裁剪层的最小宽度;默认为 0",
        "description_zh": "裁剪层的最小宽度;默认为 0"
      },
      "modal": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否显示图片上方裁剪框下方的黑色模态;默认为 true",
        "description_zh": "是否显示图片上方裁剪框下方的黑色模态;默认为 true"
      },
      "movable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否允许可以移动后面的图片;默认为 true",
        "description_zh": "是否允许可以移动后面的图片;默认为 true"
      },
      "preview": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "设置裁剪区域图片是否可预览，默认为 false",
        "description_zh": "设置裁剪区域图片是否可预览，默认为 false"
      },
      ":quality": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "设置图片裁剪后的压缩比例，值在 0-1 之间，默认为 0.92",
        "description_zh": "设置图片裁剪后的压缩比例，值在 0-1 之间，默认为 0.92"
      },
      "rotatable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否允许旋转图像;默认为 true",
        "description_zh": "是否允许旋转图像;默认为 true"
      },
      "src": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "默认裁剪的源图片",
        "description_zh": "默认裁剪的源图片"
      },
      ":view-mode": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "定义 cropper 的视图模式;默认为 0;0：没有限制，3 可以移动到 2 外。1：3 只能在 2 内移动。2：2 图片不全部铺满 1 （即缩小时可以有一边出现空隙）。3：2 图片填充整个 1",
        "description_zh": "定义 cropper 的视图模式;默认为 0;0：没有限制，3 可以移动到 2 外。1：3 只能在 2 内移动。2：2 图片不全部铺满 1 （即缩小时可以有一边出现空隙）。3：2 图片填充整个 1"
      },
      ":wheel-zoom-ratio": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "用鼠标移动图像时，定义缩放比例;默认为 0.1",
        "description_zh": "用鼠标移动图像时，定义缩放比例;默认为 0.1"
      },
      "zoom-on-wheel": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否可以通过滚动鼠标滚轮来缩放图像;默认为 true",
        "description_zh": "是否可以通过滚动鼠标滚轮来缩放图像;默认为 true"
      },
      "zoomable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否允许放大图像;默认为 true",
        "description_zh": "是否允许放大图像;默认为 true"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/crop",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/crop",
    "typeDetail": {},
    "events": [
      {
        "name": "crop",
        "description": "当画布（图像包装器）或裁剪框发生改变时触发;回调参数为 (event: Event)，原生事件",
        "description_zh": "当画布（图像包装器）或裁剪框发生改变时触发;回调参数为 (event: Event)，原生事件",
        "params": "Function(value)"
      },
      {
        "name": "cropdata",
        "description": "cropdata 事件回调函数中可以拿到裁剪后的数据，默认为 base64 数据",
        "description_zh": "cropdata 事件回调函数中可以拿到裁剪后的数据，默认为 base64 数据",
        "params": "Function(data)"
      },
      {
        "name": "cropend",
        "description": "当画布（图像包装器）或剪切框发生变化结束时触发;回调参数为 (event: Event)",
        "description_zh": "当画布（图像包装器）或剪切框发生变化结束时触发;回调参数为 (event: Event)",
        "params": ""
      },
      {
        "name": "cropmove",
        "description": "当画布（图像包装器）或剪切框正在发生变化时触发;回调参数为 (event: Event)",
        "description_zh": "当画布（图像包装器）或剪切框正在发生变化时触发;回调参数为 (event: Event)",
        "params": ""
      },
      {
        "name": "cropstart",
        "description": "当画布（图像包装器）或剪切框开始发生变化时触发;回调参数为 (event: Event)",
        "description_zh": "当画布（图像包装器）或剪切框开始发生变化时触发;回调参数为 (event: Event)",
        "params": ""
      },
      {
        "name": "ready",
        "description": "当一个 cropper 实例完全构建时触发",
        "description_zh": "当一个 cropper 实例完全构建时触发",
        "params": ""
      }
    ],
    "methods": [
      {
        "name": "clear",
        "description": "",
        "params": "清除裁切框",
        "description_zh": ""
      },
      {
        "name": "destroy",
        "description": "",
        "params": "销毁 cropper 并从图像中删除整个 cropper",
        "description_zh": ""
      },
      {
        "name": "disable",
        "description": "",
        "params": "禁用裁切框（裁切框不可移动）",
        "description_zh": ""
      },
      {
        "name": "enable",
        "description": "",
        "params": "启用裁切框",
        "description_zh": ""
      },
      {
        "name": "getCanvasData",
        "description": "",
        "params": "获取画布 Canvas（图像包装器）位置和大小数据;返回的数据类型为 object",
        "description_zh": ""
      },
      {
        "name": "getContainerData",
        "description": "",
        "params": "获取 container 容器大小数据;返回的数据类型为 object",
        "description_zh": ""
      },
      {
        "name": "getCropBoxData",
        "description": "",
        "params": "获取剪切框的位置和大小数据;返回的数据类型为 object",
        "description_zh": ""
      },
      {
        "name": "getCroppedCanvas",
        "description": "",
        "params": "获取裁剪后的图片数据;.getCroppedCanvas().toDataURL()：转成 base64 图片;.getCroppedCanvas().toBlob()：生成 Blob 图片数据",
        "description_zh": ""
      },
      {
        "name": "getData",
        "description": "",
        "params": "获取最终裁剪的区域位置和大小数据（根据原始图像的自然大小）;参数为 (rounded) ，默认 false，设置 true 可以获取其所有数据;返回的数据类型为 object",
        "description_zh": ""
      },
      {
        "name": "getImageData",
        "description": "",
        "params": "获取图像 image 位置、大小和其他相关数据;返回的数据类型为 object",
        "description_zh": ""
      },
      {
        "name": "replace",
        "description": "",
        "params": "替换图像的 src 并重新构建 cropper;参数为 图片 URL",
        "description_zh": ""
      },
      {
        "name": "setAspectRatio",
        "description": "",
        "params": "改变裁切框的宽高比;参数为(aspectRatio)，类型 number，是一个正数",
        "description_zh": ""
      }
    ],
    "slots": [],
    "filename": "Crop"
  },
  {
    "name": "TinyDialogSelect",
    "props": {
      "before-close": {
        "default": "--",
        "value": "",
        "type": "() => boolean",
        "description": "弹窗关闭前的回调，返回 false 会阻止弹窗关闭",
        "description_zh": "弹窗关闭前的回调，返回 false 会阻止弹窗关闭"
      },
      "dialog-op": {
        "default": "{}",
        "value": "",
        "type": "IDialogOption",
        "description": "用于配置 DialogBox 对话框组件的属性，对话框事件和插槽已透传",
        "description_zh": "用于配置 DialogBox 对话框组件的属性，对话框事件和插槽已透传"
      },
      "grid-op": {
        "default": "{}",
        "value": "",
        "type": "IGridOption",
        "description": "表格场景时，配置 Grid 组件的属性",
        "description_zh": "表格场景时，配置 Grid 组件的属性"
      },
      "lookup-method": {
        "default": "--",
        "value": "",
        "type": "() => Promise",
        "description": "初始化选中数据的加载方法",
        "description_zh": "初始化选中数据的加载方法"
      },
      ":main-height": {
        "default": "290",
        "value": "",
        "type": "number",
        "description": "配置表格或树区域的高度",
        "description_zh": "配置表格或树区域的高度"
      },
      "multi": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否多选",
        "description_zh": "是否多选"
      },
      "pager-op": {
        "default": "{\n  currentPage: 1,\n  pageSize: 10,\n  pageSizes: [10, 20, 30, 40, 50, 100],\n  total: 0,\n  layout: 'total, prev, pager, next, jumper'\n}",
        "value": "",
        "type": "IPagerOption",
        "description": "使用表格展示数据时，属性 pagerOp 用于配置 Pager 分页组件的属性，分页事件已透传",
        "description_zh": "使用表格展示数据时，属性 pagerOp 用于配置 Pager 分页组件的属性，分页事件已透传"
      },
      "popseletor": {
        "default": "'grid'",
        "value": "",
        "type": "string",
        "description": "弹窗内展示数据的组件类型，目前支持：'grid' / 'tree'",
        "description_zh": "弹窗内展示数据的组件类型，目前支持：'grid' / 'tree'"
      },
      "remote-search": {
        "default": "--",
        "value": "",
        "type": "() => Promise",
        "description": "使用表格展示数据时，配置表格分页查询操作函数；使用树展示数据时，配置通过pid查询所有子数据的方法",
        "description_zh": "使用表格展示数据时，配置表格分页查询操作函数；使用树展示数据时，配置通过pid查询所有子数据的方法"
      },
      "selected-box-op": {
        "default": "{}",
        "value": "",
        "type": "ISelectedBoxOption",
        "description": "使用表格展示数据时，属性 selectedBoxOp 用于配置 SelectedBox 已选栏组件的属性，已选栏插槽已透传",
        "description_zh": "使用表格展示数据时，属性 selectedBoxOp 用于配置 SelectedBox 已选栏组件的属性，已选栏插槽已透传"
      },
      "show-pager": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "使用表格展示数据时，是否显示分页组件",
        "description_zh": "使用表格展示数据时，是否显示分页组件"
      },
      "show-selected-box": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "使用表格展示数据时，是否显示已选栏组件",
        "description_zh": "使用表格展示数据时，是否显示已选栏组件"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "数据项的显示值字段",
        "description_zh": "数据项的显示值字段"
      },
      "text-split": {
        "default": "'/'",
        "value": "",
        "type": "string",
        "description": "多选时用于拼接数据项的 label 字段 ",
        "description_zh": "多选时用于拼接数据项的 label 字段 "
      },
      "tree-op": {
        "default": "{}",
        "value": "",
        "type": "ITreeOption",
        "description": "使用树展示数据时，树组件的配置对象",
        "description_zh": "使用树展示数据时，树组件的配置对象"
      },
      "value-field": {
        "default": "'id'",
        "value": "",
        "type": "string",
        "description": "数据项的选中值字段",
        "description_zh": "数据项的选中值字段"
      },
      "value-split": {
        "default": "';'",
        "value": "",
        "type": "string",
        "description": "多选时用于拼接数据项的选中值",
        "description_zh": "多选时用于拼接数据项的选中值"
      },
      "visible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "控制弹出框显示与关闭",
        "description_zh": "控制弹出框显示与关闭"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dialog-select",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dialog-select",
    "typeDetail": {
      "IDialogOption": "interface IDialogOption {\n  // 设置弹出框距离窗口顶部的高度，默认为 15vh\n  top: string,\n  // 弹出框的宽度,默认 500px\n  width: string\n  // 弹出框标题\n  title: string\n  beforeClose: () => boolean\n  // 自定义配置弹窗类名\n  dialogClass: string\n}",
      "IGridOption": "interface IGridOption {\n  // 表格列配置\n  columns: IColumnConfig[]  \n  // 表格列数据\n  data: [] \n  // 表格多选配置\n  selectConfig: { \n    // 翻页操作是否保留历史选择数据\n    reserve: boolean  \n    // 嵌套表格多选时，设置默认表格选中的数据\n    checkRowKeys: Array<string|number> \n  }\n  // 表格单选配置\n  radioConfig: { \n    //嵌套表格单选时，设置默认表格选中的数据 \n    checkRowKey: string|number  \n  }\n}",
      "IColumnConfig ": "interface IColumnConfig  {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  title: string\n  label: string\n  width: string | number\n}",
      "IPagerOption": "interface IPagerOption {\n  // 当前页，默认 1\n  currentPage: number \n  // 每页显示条目个数，默认 10\n  pageSize: number   \n  // 每页显示个数选择器的选项设置，默认 [10, 20, 30, 40, 50, 100]\n  pageSizes: Array<number> \n  // 总条目数\n  total:number\n  // 分页布局，默认 'total, prev, pager, next, jumper'\n  layout: string \n}",
      "ISelectedBoxOption": "interface ISelectedBoxOption {\n  config: {\n    pkField: string\n    pkFieldType: string,\n    showField: Array<string>,\n    // 传 sortablejs 插件\n    plugin: () => void   \n  }\n}",
      "ITreeOption": "interface ITreeOption {\n  // 树节点的唯一标识\n  nodeKey: string \n  pathSplit: string\n  props: { \n    // 默认为 children\n    children:string  \n    // 默认为 label\n    label: string   \n    // 默认为 isLeaf'\n    isLeaf: string \n  },\n  // 是否为父子严格模式\n  checkStrictly: boolean \n  // 相邻级节点间的水平缩进，单位为像素\n  baseIndent: number \n  // 加载子树数据的方法\n  load: (node, resolve)=> void \n  // 使用树展示数据时，用于配置搜索过滤接口\n  queryPidsBySearch: () => ITreeNodeData \n  // 使用树展示数据时，用于配置初始化过滤接口 \n  queryPidsByIds: () => ITreeNodeData \n  // 默认勾选的节点的keys\n  defaultCheckedKeys: Array<string|number> \n}",
      "ITreeNodeData": "interface ITreeNodeData {\n  // node-key='id' 设置节点的唯一标识\n  \"id\": number|string \n  // 节点显示文本  \n  \"label\": string \n  // 子节点\n  \"children\"?: ITreeNodeData[]  \n}",
      "IChangeParam": "// 树组件的节点数据信息\ninterface ItreeData = {\n  id: number|string\n  label: string\n  pid: number|string\n}\n\n// 用户自定义的表格行数据\ninterface IGridData = {\n  id: number|string\n [otherKeys] :any\n}\n\ninterface IChangeParam = {\n values: Array<number|string>|number|string\n texts: string|Array<string>\n selectedDatas: ItreeData[]|IGridData[]\n}",
      "IBeforeChangeParam": "interface IBeforeChangeParam {\ncallback: () => void   // 回调函数，调用则继续本次变更\nrollback: () => void   // 回滚函数，调用则阻止本次变更\nnewPage: number // 变更后所在页\nnewPageSize: number // 变更后分页大小\ncurrentPage: number // 当前所在页\ncurrentPageSize: number // 当前分页大小\n}",
      "IResizeEvent": "interface IResizeEvent {\n  // 当前的全屏状态\n  fullscreen: boolean\n  // 弹窗的元素\n  dialog: HTMLElement\n}"
    },
    "events": [
      {
        "name": "before-page-change",
        "description": "透传子组件 Pager 的 before-page-change 事件",
        "description_zh": "透传子组件 Pager 的 before-page-change 事件",
        "params": "(beforeChangeParam:IBeforeChangeParam) => void"
      },
      {
        "name": "change",
        "description": "监听弹窗选择的值发生变化的事件",
        "description_zh": "监听弹窗选择的值发生变化的事件",
        "params": "(changeParam:IChangeParam) => void"
      },
      {
        "name": "close",
        "description": "透传子组件 DialogBox 的 close 事件",
        "description_zh": "透传子组件 DialogBox 的 close 事件",
        "params": "() => void"
      },
      {
        "name": "closed",
        "description": "透传子组件 DialogBox 的 closed 事件",
        "description_zh": "透传子组件 DialogBox 的 closed 事件",
        "params": "() => void"
      },
      {
        "name": "current-change",
        "description": "透传子组件 Pager 的 current-change 事件",
        "description_zh": "透传子组件 Pager 的 current-change 事件",
        "params": "(currentPage: number) => void"
      },
      {
        "name": "drag-end",
        "description": "透传子组件 DialogBox 的 drag-end 事件",
        "description_zh": "透传子组件 DialogBox 的 drag-end 事件",
        "params": "() => void"
      },
      {
        "name": "drag-move",
        "description": "透传子组件 DialogBox 的 drag-move 事件",
        "description_zh": "透传子组件 DialogBox 的 drag-move 事件",
        "params": "() => void"
      },
      {
        "name": "drag-start",
        "description": "透传子组件 DialogBox 的 drag-start 事件",
        "description_zh": "透传子组件 DialogBox 的 drag-start 事件",
        "params": "() => void"
      },
      {
        "name": "next-click",
        "description": "透传子组件 Pager 的 next-click 事件",
        "description_zh": "透传子组件 Pager 的 next-click 事件",
        "params": "(currentPage: number) => void"
      },
      {
        "name": "open",
        "description": "透传子组件 DialogBox 的 open 事件",
        "description_zh": "透传子组件 DialogBox 的 open 事件",
        "params": "() => void"
      },
      {
        "name": "opened",
        "description": "透传子组件 DialogBox 的 opened 事件",
        "description_zh": "透传子组件 DialogBox 的 opened 事件",
        "params": "() => void"
      },
      {
        "name": "prev-click",
        "description": "透传子组件 Pager 的 prev-click 事件",
        "description_zh": "透传子组件 Pager 的 prev-click 事件",
        "params": "(currentPage: number) => void"
      },
      {
        "name": "resize",
        "description": "弹窗大小变化时的事件，比如切换全屏状态时",
        "description_zh": "弹窗大小变化时的事件，比如切换全屏状态时",
        "params": "(ev: IResizeEvent) => void"
      },
      {
        "name": "size-change",
        "description": "透传子组件 Pager 的 size-change 事件",
        "description_zh": "透传子组件 Pager 的 size-change 事件",
        "params": "(pageSize: number) => void"
      }
    ],
    "methods": [
      {
        "name": "queryGridData",
        "description": "使用表格展示数据时，加载表格数据的方法",
        "params": "() => void",
        "description_zh": "使用表格展示数据时，加载表格数据的方法"
      }
    ],
    "slots": [
      {
        "name": "button",
        "description": "使用表格展示数据时，自定义已选栏的自定义按钮区域",
        "description_zh": "使用表格展示数据时，自定义已选栏的自定义按钮区域"
      },
      {
        "name": "clear",
        "description": "使用表格展示数据时，自定义已选栏的清空按钮区域",
        "description_zh": "使用表格展示数据时，自定义已选栏的清空按钮区域"
      },
      {
        "name": "close",
        "description": "使用表格展示数据时，自定义已选栏的选项的删除按钮",
        "description_zh": "使用表格展示数据时，自定义已选栏的选项的删除按钮"
      },
      {
        "name": "footer",
        "description": "自定义弹窗底部",
        "description_zh": "自定义弹窗底部"
      },
      {
        "name": "option",
        "description": "使用表格展示数据时，自定义已选栏的选项",
        "description_zh": "使用表格展示数据时，自定义已选栏的选项"
      },
      {
        "name": "search",
        "description": "使用表格展示数据时，自定义搜索区域",
        "description_zh": "使用表格展示数据时，自定义搜索区域"
      },
      {
        "name": "select",
        "description": "使用表格展示数据时，自定义已选栏的已选提示区域",
        "description_zh": "使用表格展示数据时，自定义已选栏的已选提示区域"
      },
      {
        "name": "title",
        "description": "自定义弹窗标题",
        "description_zh": "自定义弹窗标题"
      }
    ],
    "filename": "DialogSelect"
  },
  {
    "name": "TinyFilterPanel",
    "props": {
      "blank": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "将过滤器背景设置为透明",
        "description_zh": "将过滤器背景设置为透明"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否禁用",
        "description_zh": "是否禁用"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "标题",
        "description_zh": "标题"
      },
      "placement": {
        "default": "'bottom-start'",
        "value": "",
        "type": "IPopperPlacement",
        "description": "下拉面板位置，可选值请参考popover组件的同属性",
        "description_zh": "下拉面板位置，可选值请参考popover组件的同属性"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "下拉面板是否添加到body元素中",
        "description_zh": "下拉面板是否添加到body元素中"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "下拉面板的class",
        "description_zh": "下拉面板的class"
      },
      "tip": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "标题右侧的提示信息",
        "description_zh": "标题右侧的提示信息"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "显示的值",
        "description_zh": "显示的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/filter-panel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/filter-panel",
    "typeDetail": {},
    "events": [
      {
        "name": "handle-clear",
        "description": "清除按钮点击事件",
        "description_zh": "清除按钮点击事件",
        "params": "() => void"
      },
      {
        "name": "visible-change",
        "description": "下拉面板显示隐藏事件",
        "description_zh": "下拉面板显示隐藏事件",
        "params": "(visible: boolean) => void"
      }
    ],
    "methods": [
      {
        "name": "hide",
        "description": "隐藏下拉面板的方法",
        "params": "() => void",
        "description_zh": "隐藏下拉面板的方法"
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "FilterPanel"
  },
  {
    "name": "TinyFloatBar",
    "props": {},
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/floatbar",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/floatbar",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "浮动块内容。",
        "description_zh": "浮动块内容。"
      }
    ],
    "filename": "FloatBar"
  },
  {
    "name": "TinyFullscreen",
    "props": {
      "exit-on-click-wrapper": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "组件式使用时，点击组件 wrapper 是否关闭全屏显示。默认为 true",
        "description_zh": "组件式使用时，点击组件 wrapper 是否关闭全屏显示。默认为 true"
      },
      "fullscreen": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "组件式使用时，控制组件是否全屏显示。默认为 false",
        "description_zh": "组件式使用时，控制组件是否全屏显示。默认为 false"
      },
      "fullscreen-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "自定义组件 wrapper 的样式类名",
        "description_zh": "自定义组件 wrapper 的样式类名"
      },
      "page-only": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "显示模式。true 为网页全屏，false 为浏览器全屏。默认值为 false",
        "description_zh": "显示模式。true 为网页全屏，false 为浏览器全屏。默认值为 false"
      },
      "teleport": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "是否将目标元素移动到 body 下。true 为移动，false 为不移动。默认值为 false",
        "description_zh": "是否将目标元素移动到 body 下。true 为移动，false 为不移动。默认值为 false"
      },
      ":z-index": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "在全屏显示时，目标元素的 zIndex",
        "description_zh": "在全屏显示时，目标元素的 zIndex"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/fullscreen",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/fullscreen",
    "typeDetail": {},
    "events": [
      {
        "name": "before-change",
        "description": "拦截事件",
        "description_zh": "拦截事件",
        "params": "(done: () => void) => void"
      },
      {
        "name": "update:fullscreen",
        "description": "组件式使用时，更新 fullscreen 属性",
        "description_zh": "组件式使用时，更新 fullscreen 属性",
        "params": ""
      }
    ],
    "methods": [
      {
        "name": "toggle",
        "description": "",
        "params": "函数式使用时，切换全屏模式",
        "description_zh": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "自定义内容，需要在 layout 中列出 slot",
        "description_zh": "自定义内容，需要在 layout 中列出 slot"
      }
    ],
    "filename": "Fullscreen"
  },
  {
    "name": "TinyScrollText",
    "props": {
      "direction": {
        "default": "'left'",
        "value": "",
        "type": "'up' | 'left' | 'down' | 'right'",
        "description": "滚动的方向",
        "description_zh": "滚动的方向"
      },
      "hover-stop": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "hover 滚动是否停止",
        "description_zh": "hover 滚动是否停止"
      },
      "text": {
        "default": "'ScrollText'",
        "value": "",
        "type": "string",
        "description": "滚动的文本内容",
        "description_zh": "滚动的文本内容"
      },
      ":time": {
        "default": "5",
        "value": "",
        "type": "number",
        "description": "整个滚动过程所用的时间",
        "description_zh": "整个滚动过程所用的时间"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/scroll-text",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/scroll-text",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽，滚动的内容的插槽",
        "description_zh": "默认插槽，滚动的内容的插槽"
      }
    ],
    "filename": "ScrollText"
  },
  {
    "name": "TinySplit",
    "props": {
      "collapse-left-top": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "简易模式启用左/上展开收起按钮",
        "description_zh": "简易模式启用左/上展开收起按钮"
      },
      "collapse-right-bottom": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "简易模式启用右/下展开收起按钮",
        "description_zh": "简易模式启用右/下展开收起按钮"
      },
      "left-top-min": {
        "default": "40px",
        "value": "",
        "type": "number | string",
        "description": "左面板 / 上面板最小阈值",
        "description_zh": "左面板 / 上面板最小阈值"
      },
      "mode": {
        "default": "horizontal",
        "value": "",
        "type": "'horizontal' | 'vertical'",
        "description": "分割类型，可选值为 horizontal 或 vertical；默认值horizontal",
        "description_zh": "分割类型，可选值为 horizontal 或 vertical；默认值horizontal"
      },
      "modelValue": {
        "default": "0.5",
        "value": "",
        "type": "number | string",
        "description": "分割面板的位置",
        "description_zh": "分割面板的位置"
      },
      "right-bottom-min": {
        "default": "40px",
        "value": "",
        "type": "number | string",
        "description": "右面板 / 下面板最小阈值",
        "description_zh": "右面板 / 下面板最小阈值"
      },
      "three-areas": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "配置3个区块",
        "description_zh": "配置3个区块"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/split",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/split",
    "typeDetail": {},
    "events": [
      {
        "name": "left-top-click",
        "description": "左箭头收起时触发",
        "description_zh": "左箭头收起时触发",
        "params": "()=> void"
      },
      {
        "name": "moveend",
        "description": "拖拽结束的事件",
        "description_zh": "拖拽结束的事件",
        "params": "()=> void"
      },
      {
        "name": "movestart",
        "description": "拖拽开始的事件",
        "description_zh": "拖拽开始的事件",
        "params": "()=> void"
      },
      {
        "name": "moving",
        "description": "拖拽中的事件",
        "description_zh": "拖拽中的事件",
        "params": "(event: Event)=> void"
      },
      {
        "name": "right-bottom-click",
        "description": "右箭头收起时触发",
        "description_zh": "右箭头收起时触发",
        "params": "() => void"
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "bottom",
        "description": "下面板插槽",
        "description_zh": "下面板插槽"
      },
      {
        "name": "left",
        "description": "左面板插槽",
        "description_zh": "左面板插槽"
      },
      {
        "name": "right",
        "description": "右面板插槽",
        "description_zh": "右面板插槽"
      },
      {
        "name": "top",
        "description": "上面板插槽",
        "description_zh": "上面板插槽"
      },
      {
        "name": "trigger",
        "description": "拖拽插槽",
        "description_zh": "拖拽插槽"
      }
    ],
    "filename": "Split"
  },
  {
    "name": "TinyTextPopup",
    "props": {
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "输入框内的提示占位文本",
        "description_zh": "输入框内的提示占位文本"
      },
      "readonly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否只读",
        "description_zh": "是否只读"
      },
      "separtor": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "分隔符",
        "description_zh": "分隔符"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "绑定值",
        "description_zh": "绑定值"
      },
      "width": {
        "default": "150",
        "value": "",
        "type": "number , string",
        "description": "宽度",
        "description_zh": "宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/text-popup",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/text-popup",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "TextPopup"
  },
  {
    "name": "TinyUserContact",
    "props": {
      ":data": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "设置的数据",
        "description_zh": "设置的数据"
      },
      "espace": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "espace 信息配置",
        "description_zh": "espace 信息配置"
      },
      "popper-append-to-body": {
        "default": "该属性的默认值为 true",
        "value": "",
        "type": "boolean",
        "description": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)",
        "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "为 popper 添加类名(可参考 popover 组件)",
        "description_zh": "为 popper 添加类名(可参考 popover 组件)"
      },
      "show-img": {
        "default": "该属性的默认值为 true",
        "value": "",
        "type": "boolean",
        "description": "是否显示头像，默认 true",
        "description_zh": "是否显示头像，默认 true"
      },
      "show-name": {
        "default": "该属性的默认值为 true",
        "value": "",
        "type": "boolean",
        "description": "是否显示姓名 userName,默认 true",
        "description_zh": "是否显示姓名 userName,默认 true"
      },
      "show-number": {
        "default": "该属性的默认值为 true",
        "value": "",
        "type": "boolean",
        "description": "是否显示工号 roleNumber,默认 true",
        "description_zh": "是否显示工号 roleNumber,默认 true"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/user-contact",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/user-contact",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "默认插槽",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "UserContact"
  },
  {
    "name": "TinyWatermark",
    "props": {
      "content": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "水印文字内容，此属性低于 image",
        "description_zh": "水印文字内容，此属性低于 image"
      },
      "font": {
        "default": "--",
        "value": "",
        "type": "Font",
        "description": "水印文字样式",
        "description_zh": "水印文字样式"
      },
      "gap": {
        "default": "[100, 100]",
        "value": "",
        "type": "array",
        "description": "水印之间的间距",
        "description_zh": "水印之间的间距"
      },
      ":height": {
        "default": "64",
        "value": "",
        "type": "number",
        "description": "水印的高度, 最小高度64px",
        "description_zh": "水印的高度, 最小高度64px"
      },
      "image": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "图片源，建议导出 2 倍或 3 倍图，优先级高（支持 base64 格式），此属性高于 content ",
        "description_zh": "图片源，建议导出 2 倍或 3 倍图，优先级高（支持 base64 格式），此属性高于 content "
      },
      "interlaced": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "水印是否交错",
        "description_zh": "水印是否交错"
      },
      "offset": {
        "default": "[20, 20] ",
        "value": "",
        "type": "array",
        "description": "水印距离容器左上角的偏移量",
        "description_zh": "水印距离容器左上角的偏移量"
      },
      ":rotate": {
        "default": "-22",
        "value": "",
        "type": "number",
        "description": "水印绘制时，旋转的角度，单位 °",
        "description_zh": "水印绘制时，旋转的角度，单位 °"
      },
      ":width": {
        "default": "120",
        "value": "",
        "type": "number",
        "description": "水印的宽度, 最小宽度120px",
        "description_zh": "水印的宽度, 最小宽度120px"
      },
      ":zIndex": {
        "default": "9",
        "value": "",
        "type": "number",
        "description": "追加的水印元素的 'z-index' ",
        "description_zh": "追加的水印元素的 'z-index' "
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/watermark",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/watermark",
    "typeDetail": {
      "Font": "type Font = { \n        color:string,\n        fontSize:number,\n        fontWeight:string,\n        fontFamily:string,\n        fontStyle:string\n       }"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Watermark"
  }
]

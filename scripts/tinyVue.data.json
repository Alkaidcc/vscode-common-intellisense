[
  {
    "name": "TinyButton",
    "props": {
      "autofocus": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to focus by default",
        "description_zh": "是否默认聚焦"
      },
      "circle": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the button is round or not",
        "description_zh": "是否圆形按钮"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the button is disabled",
        "description_zh": "是否被禁用按钮"
      },
      "ghost": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it's a ghost button or not",
        "description_zh": "是否幽灵按钮"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "The icon displayed on the left side of the button is received as an Icon component",
        "description_zh": "按钮左侧展示的图标，接收为Icon组件"
      },
      "loading": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the loading status is in place",
        "description_zh": "是否加载中状态"
      },
      "native-type": {
        "default": "'button'",
        "value": "",
        "type": "button / submit / reset",
        "description": "Corresponds to the button's native type attribute",
        "description_zh": "对应按钮原生 type 属性"
      },
      "plain": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is a plain button",
        "description_zh": "是否朴素按钮"
      },
      ":reset-time": {
        "default": "1000",
        "value": "",
        "type": "number",
        "description": "Set the button to disable the time to prevent duplicate submissions, in milliseconds",
        "description_zh": "设置按钮禁用时间，防止重复提交，单位毫秒"
      },
      "round": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to round the corner buttons",
        "description_zh": "是否圆角按钮"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "large / medium / small / mini",
        "description": "Define the button size",
        "description_zh": "定义按钮尺寸"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The text displayed by the button",
        "description_zh": "按钮显示的文本"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "IButtonType",
        "description": "Display buttons have different statuses, and if you set it to text, it will be displayed as a text button",
        "description_zh": "展示按钮不同的状态，设置为text则展示为文本按钮"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/button",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/button",
    "typeDetail": {
      "IButtonType": "type IButtonType = 'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'"
    },
    "events": [
      {
        "name": "click",
        "description": "A callback function that is triggered when a button is clicked",
        "description_zh": "当按钮被点击时触发的回调函数",
        "params": "(event: PointEvent) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slots, custom buttons to display content",
        "description_zh": "默认插槽，自定义按钮展示内容"
      }
    ],
    "filename": "Button"
  },
  {
    "name": "TinyButtonGroup",
    "props": {
      "border": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display border lines",
        "description_zh": "是否显示边框线"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "IButtonGroupData[]",
        "description": "Button group data",
        "description_zh": "按钮组数据"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the button group is disabled",
        "description_zh": "是否被禁用按钮组"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "The value of the button is selected by default",
        "description_zh": "默认选中按钮的值"
      },
      "plain": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is a plain button",
        "description_zh": "是否朴素按钮"
      },
      "show-edit": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the Edit button will only take effect if more are displayed",
        "description_zh": "是否显示编辑按钮，只有在显示更多的情况下生效"
      },
      ":show-more": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "More buttons are displayed when the given number of buttons is exceeded",
        "description_zh": "当超过给定的按钮数量时显示更多按钮"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Button group size",
        "description_zh": "按钮组尺寸大小"
      },
      "text-field": {
        "default": "'text'",
        "value": "",
        "type": "string",
        "description": "button displays the field value of the text",
        "description_zh": "按钮显示文字的字段值"
      },
      "value-field": {
        "default": "'value'",
        "value": "",
        "type": "string",
        "description": "button to select the field value of the value",
        "description_zh": "按钮选中值的字段值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/button-group",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/button-group",
    "typeDetail": {
      "IButtonGroupData": "interface IButtonGroupData {\n  text: string // 显示文本\n  value: number | number // 选中的值\n  disabled?: boolean // 是否禁用\n  // 配置选块角标\n  sup?: {\n    text: string // 角标文本\n    class?: string // 角标的自定义class\n    slot?: string // 自定义插槽名称，提供后可在button-group内使用对应的插槽自定义角标内容\n    icon?: Component // 传入图标组件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "Triggers when the selected button changes",
        "description_zh": "当选中按钮发生改变时触发",
        "params": "(value: string | number) => void",
        "value": ""
      },
      {
        "name": "edit",
        "description": "Triggered when the edit button is clicked",
        "description_zh": "当编辑按钮被点击时触发",
        "params": "() => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slots, custom button group content",
        "description_zh": "默认插槽，自定义按钮组内容"
      }
    ],
    "filename": "ButtonGroup"
  },
  {
    "name": "TinyColor",
    "props": {},
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Color"
  },
  {
    "name": "TinyContainer",
    "props": {
      "aside-width": {
        "default": "200",
        "value": "",
        "type": "number | string",
        "description": "Left side width",
        "description_zh": "左侧宽度"
      },
      "footer-height": {
        "default": "60",
        "value": "",
        "type": "number | string",
        "description": "Bottom height",
        "description_zh": "底部高度"
      },
      "header-height": {
        "default": "60",
        "value": "",
        "type": "number | string",
        "description": "Head height",
        "description_zh": "头部高度"
      },
      "pattern": {
        "default": "\"default\"",
        "value": "",
        "type": "IContainerPattern",
        "description": "Fit type",
        "description_zh": "版型类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/container",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/container",
    "typeDetail": {
      "IContainerPattern": "type IContainerPattern = 'default' | 'simple' | 'legend' | 'classic' | 'fashion'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "aside",
        "description": "Side content slots",
        "description_zh": "侧边内容插槽"
      },
      {
        "name": "default",
        "description": "Main content slots",
        "description_zh": "主要内容插槽"
      },
      {
        "name": "footer",
        "description": "Bottom content slots",
        "description_zh": "底部内容插槽"
      },
      {
        "name": "header",
        "description": "Header content slots",
        "description_zh": "头部内容插槽"
      }
    ],
    "filename": "Container"
  },
  {
    "name": "TinyFont",
    "props": {},
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/font",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/font",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Font"
  },
  {
    "name": "TinyLayout",
    "props": {
      ":cols": {
        "default": "12",
        "value": "",
        "type": "number",
        "description": "total number of grids; The optional value for this property is 12 /24",
        "description_zh": "总栅格数;该属性的可选值为 12 /24 "
      },
      "tag": {
        "default": "\"div\"",
        "value": "",
        "type": "string",
        "description": "Defines the rendered label of the Layout element, which defaults to div",
        "description_zh": "定义 Layout 元素的渲染后的标签，默认为div"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Layout"
  },
  {
    "name": "TinyRow",
    "props": {
      "align": {
        "default": "\"top\"",
        "value": "",
        "type": "string",
        "description": "子项的副轴对齐方向，可取值：'top', 'middle', 'bottom'",
        "description_zh": "子项的副轴对齐方向，可取值：'top', 'middle', 'bottom'"
      },
      "flex": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Specifies whether it is a flex container",
        "description_zh": "是否为flex容器"
      },
      ":gutter": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The pixels of the spacing of the children",
        "description_zh": "子项的间隔的像素"
      },
      "justify": {
        "default": "\"start\"",
        "value": "",
        "type": "string",
        "description": "子项的主轴对齐方向，可取值：'start', 'center', 'end', 'space-between', 'space-around'",
        "description_zh": "子项的主轴对齐方向，可取值：'start', 'center', 'end', 'space-between', 'space-around'"
      },
      "noSpace": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "There is no interval for the child, which is equivalent to forcing gutter=0",
        "description_zh": "子项没有间隔，相当于强制gutter=0的情况"
      },
      "order": {
        "default": "\"asc\" | \"des\"",
        "value": "",
        "type": "string",
        "description": "How the children are sorted. When not set, the order of the children in the template is retained.",
        "description_zh": "子项的排序方式。 不设置时，保留子项在模板中的顺序。"
      },
      "tag": {
        "default": "\"div\"",
        "value": "",
        "type": "string",
        "description": "Defines the rendered label of the Row element, which defaults to a div",
        "description_zh": "定义 Row 元素的渲染后的标签，默认为div"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Row"
  },
  {
    "name": "TinyCol",
    "props": {
      ":lg": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The number of rasters occupied by the column at a responsive width of < 1920px",
        "description_zh": "在响应式宽度  < 1920px  时，该列占用的栅格数"
      },
      ":md": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The number of rasters occupied by the column at a responsive width of < 1200px",
        "description_zh": "在响应式宽度  < 1200px  时，该列占用的栅格数"
      },
      ":move": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The right offset of the child is achieved by the left property, and it is recommended to use offset instead",
        "description_zh": "子项的右偏移量,是通过 left 属性实现偏移,建议使用 offset 代替"
      },
      ":no": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The child sort number",
        "description_zh": "子项排序编号"
      },
      ":offset": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The rightward offset of the child is achieved through the margin-left property",
        "description_zh": "子项的向右偏移量,是通过 margin-left 属性实现偏移"
      },
      ":sm": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The number of rasters occupied by the column at a responsive width of < 992px",
        "description_zh": "在响应式宽度  < 992px  时，该列占用的栅格数"
      },
      ":span": {
        "default": "12",
        "value": "",
        "type": "number",
        "description": "The number of columns occupied by the child",
        "description_zh": "子项占据的列数"
      },
      "tag": {
        "default": "\"div\"",
        "value": "",
        "type": "string",
        "description": "Defines the rendered label of the COL element, which defaults to div",
        "description_zh": "定义 Col 元素的渲染后的标签，默认为div"
      },
      ":xl": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The number of rasters occupied by the column at a responsive width of >= 1920px",
        "description_zh": "在响应式宽度  >= 1920px  时，该列占用的栅格数"
      },
      ":xs": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The number of rasters occupied by the column at a responsive width of < 768px",
        "description_zh": "在响应式宽度  < 768px  时，该列占用的栅格数"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/layout",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Col"
  },
  {
    "name": "TinyLink",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the status is disabled",
        "description_zh": "是否禁用状态"
      },
      "href": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native href attribute",
        "description_zh": "原生 href 属性"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Icon component",
        "description_zh": "图标组件"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "primary / success / warning / danger / info",
        "description": "Text link type",
        "description_zh": "文本链接类型"
      },
      "underline": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to underline",
        "description_zh": "是否下划线"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Display content",
        "description_zh": "显示内容"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/link",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/link",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      },
      {
        "name": "icon",
        "description": "icon",
        "description_zh": "图标"
      }
    ],
    "filename": "Link"
  },
  {
    "name": "TinyDivider",
    "props": {
      "border-style": {
        "default": "'solid'",
        "value": "",
        "type": "string",
        "description": "Sets the style of the divider, which has an optional value of solid / dashed",
        "description_zh": "设置分隔线的样式，该属性的可选值为 solid / dashed"
      },
      "color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Sets the color of the divider",
        "description_zh": "设置分隔线的颜色"
      },
      "content-background-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the background color for the divider copy",
        "description_zh": "设置分割线文案的背景颜色"
      },
      "content-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the color of the divider copy",
        "description_zh": "设置分隔线文案的颜色"
      },
      "content-position": {
        "default": "'center'",
        "value": "",
        "type": "string",
        "description": "Sets the location of the divider copy, which has an optional value of left / center / right",
        "description_zh": "设置分隔线文案的位置，该属性的可选值为 left / center / right"
      },
      "direction": {
        "default": "'horizontal'",
        "value": "",
        "type": "string",
        "description": "Sets the direction of the divider, which has an optional value of horizontal / vertical",
        "description_zh": "设置分隔线的方向，该属性的可选值为 horizontal / vertical"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/divider",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/divider",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "Divider"
  },
  {
    "name": "TinyActionMenu",
    "props": {
      ":max-show-num": {
        "default": "2",
        "value": "",
        "type": "number",
        "description": "The maximum number of menu buttons is displayed, and other menus are displayed in the drop-down pop-up box",
        "description_zh": "最多显示菜单按钮的个数，其他菜单在下拉弹框显示"
      },
      "mode": {
        "default": "\"default\"",
        "value": "",
        "type": "default / card",
        "description": "Menu button mode",
        "description_zh": "菜单按钮模式"
      },
      "more-text": {
        "default": "'更多'",
        "value": "",
        "type": "string",
        "description": "Drop-down button text",
        "description_zh": "下拉按钮文本"
      },
      "options": {
        "default": "[]",
        "value": "",
        "type": "IItemData[]",
        "description": "Data for a list of menu items",
        "description_zh": "菜单项列表的数据"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The class name of the drop-down box is used to customize the style",
        "description_zh": "下拉弹框的类名，用于自定义样式"
      },
      "show-icon": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the drop-down trigger source icon",
        "description_zh": "是否显示下拉触发源图标"
      },
      "spacing": {
        "default": "'5px'",
        "value": "",
        "type": "string | number",
        "description": "The spacing between the menu buttons",
        "description_zh": "菜单按钮之间的间距"
      },
      "suffix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Pull down the trigger source icon",
        "description_zh": "下拉触发源图标"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "The key value of the menu button text",
        "description_zh": "菜单按钮文本的键值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/action-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/action-menu",
    "typeDetail": {
      "IItemData": "interface IItemData {\n  label?: string           // 菜单项文本\n  disabled?: boolean       // 是否禁用\n  divided?: boolean        // 是否显示分割线\n  children?: IItemData[]   // 菜单项子集\n  icon?: Component      // 菜单项图标\n}",
      "IItemClickParams": "interface IItemClickParams {\n  itemData: IItemData     // 菜单项配置\n  vm: {                   // 菜单项实例\n    selected: boolean\n    textField: string\n    tipPosition: string\n    $el: HTMLElement\n  }       \n}"
    },
    "events": [
      {
        "name": "item-click",
        "description": "Listen for click events for menu items",
        "description_zh": "监听菜单项的点击事件",
        "params": "(data:IItemClickParams) => void",
        "value": ""
      },
      {
        "name": "more-click",
        "description": "Listen for drop-down button clicks. trigger takes effect when it is click",
        "description_zh": "监听下拉按钮的点击事件。trigger 为 click 时生效",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "visible-change",
        "description": "Listen for the display or hide status changes of the drop-down pop-up",
        "description_zh": "监听下拉弹框的显示或隐藏状态变化",
        "params": "(status: boolean) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "item",
        "description": "Menu option slots",
        "description_zh": "菜单选项插槽"
      }
    ],
    "filename": "ActionMenu"
  },
  {
    "name": "TinyAnchor",
    "props": {
      "container-id": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "When used for a single-page hash route pattern, specify the id value of the scrolling container, and if the id is empty, the scrolling container defaults to the root node body element of the HTML document",
        "description_zh": "用于单页面 hash 路由模式时指定滚动容器的 id 值，id 为空时则滚动容器默认为 HTML 文档的根节点 body 元素"
      },
      "is-affix": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Fixed mode",
        "description_zh": "固定模式"
      },
      "links": {
        "default": "--",
        "value": "",
        "type": "ILink[]",
        "description": "Navigation data configuration items, which can be nested via children",
        "description_zh": "导航数据配置项，可通过 children 嵌套"
      },
      "mark-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Customize the class name of the target element for scrolling",
        "description_zh": "自定义滚动的目标元素类名"
      },
      "type": {
        "default": "'line'",
        "value": "",
        "type": "line / dot",
        "description": "Anchor type",
        "description_zh": "锚点类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/anchor",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/anchor",
    "typeDetail": {
      "ILink": "interface ILink {\n  key: string // 锚点的key值\n  link: string // 导航的hash值\n  title: string // 锚点标题\n  children: ILink[] // 子锚点\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "Anchor link change events",
        "description_zh": "锚点链接改变事件",
        "params": "(hash: string) => void",
        "value": ""
      },
      {
        "name": "link-click",
        "description": "Anchor click events",
        "description_zh": "锚点点击事件",
        "params": "(event: Event, currentLink: {link: string, title: string}) => void",
        "value": ""
      },
      {
        "name": "on-change",
        "description": "使用 change 代替；[deprecated v3.12.0 废弃，v3.17.0 移除；移除原因：命名规范]",
        "description_zh": "使用 change 代替；[deprecated v3.12.0 废弃，v3.17.0 移除；移除原因：命名规范]",
        "params": "(hash: string) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "Anchor"
  },
  {
    "name": "TinyBreadcrumb",
    "props": {
      "options": {
        "default": "--",
        "value": "",
        "type": "IOptionsItem[] ",
        "description": "单独使用 Breadcrumb，通过 option 配置生成面包屑",
        "description_zh": "单独使用 Breadcrumb，通过 option 配置生成面包屑"
      },
      "separator": {
        "default": ">",
        "value": "",
        "type": "string ",
        "description": "分隔符",
        "description_zh": "分隔符"
      },
      "separator-icon": {
        "default": "--",
        "value": "",
        "type": "vueComponent ",
        "description": "图标分隔符",
        "description_zh": "图标分隔符"
      },
      "size": {
        "default": "'medium'",
        "value": "",
        "type": "string ",
        "description": "设置面包屑尺寸大小",
        "description_zh": "设置面包屑尺寸大小"
      },
      "text-field": {
        "default": "label",
        "value": "",
        "type": "string ",
        "description": "指定面包屑的显示键值，结合 options 使用",
        "description_zh": "指定面包屑的显示键值，结合 options 使用"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/breadcrumb",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/breadcrumb",
    "typeDetail": {
      "IOptionsItemTo": "interface IOptionsItemTo {\n  path: string\n}",
      "IOptionsItem": "interface IOptionsItem {\n  label?: string\n  to?: IOptionsItemTo\n  replace?: boolean\n  [customProp: string]: string\n}",
      "ISelectValue": "interface ISelectValue {\n  event: Event\n  link: HTMLElement\n  option: IOptionsItem\n  replace: boolean\n  to?: IOptionsItemTo\n}"
    },
    "events": [
      {
        "name": "select",
        "description": "点击 BreadcrumbItem 时触发",
        "description_zh": "点击 BreadcrumbItem 时触发",
        "params": "(value: ISelectValue) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "Breadcrumb"
  },
  {
    "name": "TinyBreadcrumbItem",
    "props": {
      "options": {
        "default": "--",
        "value": "",
        "type": "IOptionsItem[] ",
        "description": "单独使用 Breadcrumb，通过 option 配置生成面包屑",
        "description_zh": "单独使用 Breadcrumb，通过 option 配置生成面包屑"
      },
      "separator": {
        "default": ">",
        "value": "",
        "type": "string ",
        "description": "分隔符",
        "description_zh": "分隔符"
      },
      "separator-icon": {
        "default": "--",
        "value": "",
        "type": "vueComponent ",
        "description": "图标分隔符",
        "description_zh": "图标分隔符"
      },
      "size": {
        "default": "'medium'",
        "value": "",
        "type": "string ",
        "description": "设置面包屑尺寸大小",
        "description_zh": "设置面包屑尺寸大小"
      },
      "text-field": {
        "default": "label",
        "value": "",
        "type": "string ",
        "description": "指定面包屑的显示键值，结合 options 使用",
        "description_zh": "指定面包屑的显示键值，结合 options 使用"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/breadcrumb",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/breadcrumb",
    "typeDetail": {
      "IOptionsItemTo": "interface IOptionsItemTo {\n  path: string\n}",
      "IOptionsItem": "interface IOptionsItem {\n  label?: string\n  to?: IOptionsItemTo\n  replace?: boolean\n  [customProp: string]: string\n}",
      "ISelectValue": "interface ISelectValue {\n  event: Event\n  link: HTMLElement\n  option: IOptionsItem\n  replace: boolean\n  to?: IOptionsItemTo\n}"
    },
    "events": [
      {
        "name": "select",
        "description": "点击 BreadcrumbItem 时触发",
        "description_zh": "点击 BreadcrumbItem 时触发",
        "params": "(value: ISelectValue) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "BreadcrumbItem"
  },
  {
    "name": "TinyDropdown",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "divided": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a dividing line",
        "description_zh": "是否显示分割线"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Inline icons",
        "description_zh": "内嵌图标"
      },
      "item-data": {
        "default": "--",
        "value": "",
        "type": "IItemData",
        "description": "Configuration information for the menu item",
        "description_zh": "菜单项的配置信息"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The text of the menu item",
        "description_zh": "菜单项的文本"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "events": [
      {
        "name": "button-click",
        "description": "Listen for button click events on the left, which takes effect only when split-button is true",
        "description_zh": "监听左侧按钮点击事件，仅 split-button 为 true 时生效",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "item-click",
        "description": "Listen for click-and-click menu item events",
        "description_zh": "监听点击菜单项事件",
        "params": "(data:IItemClickParam) => void",
        "value": ""
      },
      {
        "name": "visible-change",
        "description": "Listen for the drop-down box to be shown or hidden",
        "description_zh": "监听下拉框的显示或隐藏状态",
        "params": "(status:boolean) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Menu item text area",
        "description_zh": "菜单项文本区域"
      }
    ],
    "typeDetail": {
      "IMenuOption": "interface IMenuOption {\n  options: IItemData[]\n  textField?: string\n  popperClass?: string\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'\n}",
      "IItemClickParam": "interface IItemClickParam {\n  itemData: IItemData\n  // dropdownItem 组件的实例\n  vm: {\n    selected: boolean\n    textField: string\n    tipPosition: string\n    $el: HTMLElement\n  }\n}",
      "IItemData": "interface IItemData {\n  label?: string\n  disabled?: boolean\n  divided?: boolean\n}",
      "IButtonType": "type IButtonType =  'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'",
      "IPlacementType": "type IPlacementType =  'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'"
    },
    "filename": "Dropdown"
  },
  {
    "name": "TinyDropdownMenu",
    "props": {
      "options": {
        "default": "[]",
        "value": "",
        "type": "IItemData []",
        "description": "Set the properties of the menu item through the configuration method",
        "description_zh": "通过配置式设置菜单项的属性"
      },
      "placement": {
        "default": "'bottom-end'",
        "value": "",
        "type": "IPlacementType",
        "description": "Menu pop-up location",
        "description_zh": "菜单弹出位置"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The class name of the drop-down box is used to customize the style",
        "description_zh": "下拉弹框的类名，用于自定义样式"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "A field for the text of a menu item, used in conjunction with the options property",
        "description_zh": "菜单项文本的字段,结合 options 属性使用"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Drop-down pop-up area, usually using the tiny-dropdown-item component",
        "description_zh": "下拉弹框区域，通常使用 tiny-dropdown-item 组件"
      }
    ],
    "typeDetail": {
      "IMenuOption": "interface IMenuOption {\n  options: IItemData[]\n  textField?: string\n  popperClass?: string\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'\n}",
      "IItemClickParam": "interface IItemClickParam {\n  itemData: IItemData\n  // dropdownItem 组件的实例\n  vm: {\n    selected: boolean\n    textField: string\n    tipPosition: string\n    $el: HTMLElement\n  }\n}",
      "IItemData": "interface IItemData {\n  label?: string\n  disabled?: boolean\n  divided?: boolean\n}",
      "IButtonType": "type IButtonType =  'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'",
      "IPlacementType": "type IPlacementType =  'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'"
    },
    "filename": "DropdownMenu",
    "events": []
  },
  {
    "name": "TinyDropdownItem",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "divided": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a dividing line",
        "description_zh": "是否显示分割线"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Inline icons",
        "description_zh": "内嵌图标"
      },
      "item-data": {
        "default": "--",
        "value": "",
        "type": "IItemData",
        "description": "Configuration information for the menu item",
        "description_zh": "菜单项的配置信息"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The text of the menu item",
        "description_zh": "菜单项的文本"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dropdown",
    "methods": [],
    "typeDetail": {
      "IMenuOption": "interface IMenuOption {\n  options: IItemData[]\n  textField?: string\n  popperClass?: string\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'\n}",
      "IItemClickParam": "interface IItemClickParam {\n  itemData: IItemData\n  // dropdownItem 组件的实例\n  vm: {\n    selected: boolean\n    textField: string\n    tipPosition: string\n    $el: HTMLElement\n  }\n}",
      "IItemData": "interface IItemData {\n  label?: string\n  disabled?: boolean\n  divided?: boolean\n}",
      "IButtonType": "type IButtonType =  'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'",
      "IPlacementType": "type IPlacementType =  'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end'"
    },
    "slots": [
      {
        "name": "default",
        "description": "Menu item text area",
        "description_zh": "菜单项文本区域"
      }
    ],
    "filename": "DropdownItem",
    "events": []
  },
  {
    "name": "TinyFallMenu",
    "props": {
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "Set the data for the waterfall menu",
        "description_zh": "设置瀑布菜单的数据"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/fall-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/fall-menu",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "left",
        "description": "Customize the toggle icon on the left",
        "description_zh": "自定义左侧切换图标"
      },
      {
        "name": "level1",
        "description": "Customize the first-level menu",
        "description_zh": "自定义一级菜单"
      },
      {
        "name": "level2",
        "description": "Customize secondary menus",
        "description_zh": "自定义二级菜单"
      },
      {
        "name": "level3",
        "description": "Customize the three-level menu",
        "description_zh": "自定义三级菜单"
      },
      {
        "name": "right",
        "description": "Customize the toggle icon on the right",
        "description_zh": "自定义右侧切换图标"
      }
    ],
    "filename": "FallMenu"
  },
  {
    "name": "TinyLinkMenu",
    "props": {
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "Set the data for the favorites menu",
        "description_zh": "设置收藏夹菜单的数据"
      },
      "default-expand-all": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Set whether to expand all nodes by default when opening the menu pop-up window, which is true by default",
        "description_zh": "设置打开菜单弹窗时默认是否展开所有节点，默认为 true"
      },
      "ellipsis": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "If the menu content is very long, it is omitted and defaults to true",
        "description_zh": "菜单内容超长时省略显示，默认为 true"
      },
      "get-menu-data-sync": {
        "default": "--",
        "value": "",
        "type": "Function",
        "description": "Customize the menu data service to return data directly",
        "description_zh": "自定义菜单数据服务，直接返回数据"
      },
      ":icon": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Customize the icon for the node to expand the collapse",
        "description_zh": "自定义节点展开折叠的图标"
      },
      "keep-selected-nodes": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "After the content is selected in the tree node, click the cancel button to open the pop-up window again to see whether to retain the status of the content checked before unchecking, which is true by default",
        "description_zh": "树节点勾选内容后，点击取消按钮，再次打开弹窗是否保留取消前勾选的内容的状态，默认为 true"
      },
      ":max-item": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Set the maximum number of columns that can be favorited",
        "description_zh": "设置可收藏的栏目的最大数量"
      },
      ":search-icon": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Customize the search icon",
        "description_zh": "自定义搜索图标"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the title of the Favorites menu, which is empty by default",
        "description_zh": "设置收藏夹菜单的标题，默认为空"
      },
      "wrap": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "When the menu content is very long, it is displayed in line breaks, and the default is false",
        "description_zh": "菜单内容超长时换行显示，默认为 false"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/link-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/link-menu",
    "typeDetail": {},
    "events": [],
    "methods": [
      {
        "name": "hideDialog",
        "description": "",
        "params": "关闭菜单弹窗",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "sureNodevalue",
        "description": "",
        "params": "获取选中的菜单节点并关闭菜单弹窗，同时展示选中的菜单",
        "description_zh": "",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "foot",
        "description": "Menu pop-up bottom slot",
        "description_zh": "菜单弹窗底部插槽"
      }
    ],
    "filename": "LinkMenu"
  },
  {
    "name": "TinyNavMenu",
    "props": {
      "before-skip": {
        "default": "--",
        "value": "",
        "type": "(item: IMenuItem) => boolean",
        "description": "Click on the hook function before the menu jump, and return false will not be able to jump",
        "description_zh": "点击菜单跳转前的钩子函数，返回 false 将无法跳转"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "IDataItem[]",
        "description": "Set the data for the navigation menu",
        "description_zh": "设置导航菜单的数据"
      },
      "fetch-menu-data": {
        "default": "--",
        "value": "",
        "type": "() => IDataItem[]",
        "description": "Customize the menu data loading service to return a Promise object",
        "description_zh": "自定义菜单数据加载服务，返回一个Promise对象"
      },
      "fields": {
        "default": "{ textField: \"title\", urlField: \"url\", key: \"id\" }",
        "value": "",
        "type": "IFields",
        "description": "Customize the mapping of menu data",
        "description_zh": "自定义菜单数据的映射"
      },
      "overflow": {
        "default": "auto",
        "value": "",
        "type": "IOverflow",
        "description": "Sets how the first-level menu is displayed when it is not fully displayed in the current menu container",
        "description_zh": "设置一级菜单无法在当前菜单容器里显示完全时的展示方式"
      },
      "prevent": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "If you are using the component's default service to get menu data, and you want to prevent the default jump behavior, you need to use before-skip with this property",
        "description_zh": "若使用组件的默认服务获取菜单数据，并且要阻止默认的跳转行为，需要 before-skip 和此属性一起使用"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/nav-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/nav-menu",
    "typeDetail": {
      "IMenuItem": "interface IMenuItem {\n  id: string\n  isFullUrl: boolean\n  pid: string\n  route: string\n  target: string\n  title: string\n  url: string\n}",
      "IDataItem": "interface IDataItem {\n  title: string\n  url: string\n  children?: IDataItem[]\n}",
      "IFields": "interface IFields {\n  textField: string\n  urlField: string\n  key?: string\n}",
      "IOverflow": "type IOverflow = 'auto' | 'retract' | 'fixed' | 'hidden'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "logo",
        "description": "Menu bar logo slot",
        "description_zh": "菜单栏 Logo 插槽"
      },
      {
        "name": "toolbar",
        "description": "Customize the upper right part of the toolbar slot",
        "description_zh": "自定义右上角部分 toolbar 插槽"
      }
    ],
    "filename": "NavMenu"
  },
  {
    "name": "TinyPager",
    "props": {
      "align": {
        "default": "'left'",
        "value": "",
        "type": "left / center / right",
        "description": "Pagination alignment, Aurora, SMB theme default is right",
        "description_zh": "分页对齐方式，Aurora、SMB主题默认值为 right"
      },
      ":current-page": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "The page you are currently on",
        "description_zh": "当前所在页"
      },
      "custom-total": {
        "default": "false",
        "value": "",
        "type": "boolean | string",
        "description": "If the total number of records is true, 100,000+ and 1,000,000+ will be displayed, and if the value is string, the incoming string will be displayed",
        "description_zh": "自定义总条数，传值为 true 时，显示10万+、100万+，传值为字符串则显示传入的字符串"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable pagination",
        "description_zh": "是否禁用分页"
      },
      "hide-on-single-page": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is hidden when there is only one page",
        "description_zh": "只有一页时是否隐藏"
      },
      "is-before-page-change": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the pre-processing feature, after it is enabled, page turning or changing the page size will not take effect immediately, and the user will handle the business logic",
        "description_zh": "是否开启前置处理特性，开启后，翻页或者改变页大小不会立即生效，由用户处理业务逻辑"
      },
      "layout": {
        "default": "'total, prev, pager, next, jumper'",
        "value": "",
        "type": "string",
        "description": "组件布局，子组件名用英文逗号分隔，子组件类型有 sizes、 prev、 pager、 next、 jumper、 current、 total、 slot",
        "description_zh": "组件布局，子组件名用英文逗号分隔，子组件类型有 sizes、 prev、 pager、 next、 jumper、 current、 total、 slot"
      },
      "mode": {
        "default": "--",
        "value": "",
        "type": "number / simple / complete / fixed",
        "description": "Sets the paginated component display mode, which takes precedence over layout",
        "description_zh": "设置分页组件显示模式，此属性优先级大于 layout"
      },
      "next-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The text on the next page displayed by the alternate icon",
        "description_zh": "替代图标显示的下一页文字"
      },
      ":page-count": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Total number of pages, total and page-count can be set to display page numbers, if you want to support page-sizes changes, you need to use the total attribute",
        "description_zh": "总页数，total 和 page-count 设置任意一个就可以达到显示页码的功能，如果要支持 page-sizes 的更改，则需要使用 total 属性"
      },
      ":page-size/v-model:page-size": {
        "default": "10",
        "value": "",
        "type": "number",
        "description": "The number of entries displayed per page",
        "description_zh": "每页显示条目数"
      },
      "page-sizes": {
        "default": "[10, 20, 30, 40, 50, 100]",
        "value": "",
        "type": "number[]",
        "description": "Set the option settings to specify the number of items to be displayed per page and the number of items to be displayed per page selector",
        "description_zh": "设置指定可选择的每页显示条数，每页显示个数选择器的选项设置"
      },
      ":pager-count": {
        "default": "7",
        "value": "",
        "type": "number",
        "description": "Sets the maximum number of pages that the button needs to display, and collapses when the total number of pages exceeds that value, and the property has an odd number of 5 or more and 21 or less",
        "description_zh": "设置页码按钮需要显示的最多个数，当总页数超过该值时会折叠，该属性的合法值为大于等于 5 且小于等于 21 的奇数"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to insert a pop-up box into the body element, you can set this property to false (see Select Component)",
        "description_zh": "是否将弹出框插入至 body 元素，可将该属性设置为 false（可参考 select 组件）"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Add a class name to the popper (see popover component)",
        "description_zh": "为 popper 添加类名（可参考 popover 组件）"
      },
      "prev-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Override icon to display the previous page text",
        "description_zh": "替代图标显示的上一页文字"
      },
      "show-total-loading": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the total number of records is loading",
        "description_zh": "是否显示总条数加载中"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "mini",
        "description": "Define the pagination size",
        "description_zh": "定义分页尺寸"
      },
      ":total": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Total number of entries",
        "description_zh": "总条目数"
      },
      "total-fixed-left": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the total number of entries is fixed on the left, the default value of Aurora and SMB topics is true",
        "description_zh": "总条目数是否固定在左侧，Aurora、SMB主题默认值为 true"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/pager",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/pager",
    "typeDetail": {
      "IBeforeChangeEvent": "// 函数接受一个参数\ninterface IBeforeChangeEvent {\n  (param: IBeforeChangeParam): void\n}\ninterface IBeforeChangeParam {\n  callback: () => void   // 回调函数，调用则继续本次变更\n  rollback: () => void   // 回滚函数，调用则阻止本次变更\n  newPage: number // 变更后所在页\n  newPageSize: number // 变更后分页大小\n  currentPage: number // 当前所在页\n  currentPageSize: number // 当前分页大小\n}"
    },
    "events": [
      {
        "name": "before-page-change",
        "description": "When is-before-page-change is set to true, this event will be triggered before turning the page or changing the page size, and the user can get the corresponding event and pagination related information in the parameters to control the subsequent logic",
        "description_zh": "当 is-before-page-change 设置为 true 后，翻页或改变页大小前会触发此事件，用户可以在参数中获取相应事件和分页相关信息控制后续逻辑",
        "params": "IBeforeChangeEvent",
        "value": ""
      },
      {
        "name": "current-change",
        "description": "It is triggered when the current page changes",
        "description_zh": "当前所在页改变时会触发",
        "params": "(currentPage: number) => void",
        "value": ""
      },
      {
        "name": "next-click",
        "description": "Click the Next button to change the current page",
        "description_zh": "点击下一页按钮改变当前页后触发",
        "params": "(currentPage: number) => void",
        "value": ""
      },
      {
        "name": "prev-click",
        "description": "Click the Previous button to change the current page to trigger",
        "description_zh": "点击上一页按钮改变当前页后触发",
        "params": "(currentPage: number) => void",
        "value": ""
      },
      {
        "name": "size-change",
        "description": "It is triggered when the number of entries displayed on each page changes",
        "description_zh": "每页显示条目数改变后会触发",
        "params": "(pageSize: number) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Custom content, which requires a slot to be listed in the layout",
        "description_zh": "自定义内容，需要在 layout 中列出 slot"
      }
    ],
    "filename": "Pager"
  },
  {
    "name": "TinySteps",
    "props": {
      ":active": {
        "default": "-1",
        "value": "",
        "type": "number",
        "description": "The current step index, counting from 0",
        "description_zh": "当前步骤索引，从0开始计数"
      },
      "count-field": {
        "default": "'count'",
        "value": "",
        "type": "string",
        "description": "The name of the field corresponding to the logo count in the bar step bar",
        "description_zh": "条形步骤条里徽标计数对应的字段名"
      },
      "data": {
        "default": "[]",
        "value": "",
        "type": "IStepsItem[]",
        "description": "Step bar data",
        "description_zh": "步骤条的数据"
      },
      ":duration": {
        "default": "300",
        "value": "",
        "type": "number",
        "description": "The duration of the node scroll in ms, which is only valid in advanced wizard mode",
        "description_zh": "节点滚动的持续时间（单位 ms），仅高级向导模式有效"
      },
      "flex": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the node is adaptive to the width",
        "description_zh": "节点是否自适应宽度"
      },
      "name-field": {
        "default": "'name'",
        "value": "",
        "type": "string",
        "description": "The name of the field corresponding to the node name",
        "description_zh": "节点名称对应的字段名"
      },
      "space": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "Node width, number of possible values, values and percentages with length units, and px as the unit of length by default",
        "description_zh": "节点宽度, 可取值数字、带长度单位数值与百分比，传数字则默认以 px 为长度单位"
      },
      "status-field": {
        "default": "'status'",
        "value": "",
        "type": "string",
        "description": "The name of the field corresponding to the data status, which is used for the bar step bar",
        "description_zh": "数据状态对应的字段名，用于条形步骤条"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/steps",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/steps",
    "typeDetail": {
      "IStepsItem": "interface IStepsItem {\n  // 节点数据\n  name: string, // 节点名称\n  status?: IStepsStatus, // 节点状态，取值见下面IStepsStatus类型说明\n  description?: string, // 描述，仅用于单链型步骤条\n  count?: number // 节点右上角徽标计数，仅用于默认条形步骤条\n}",
      "IStepsStatus": "type IStepsStatus = 'doing' | 'done' | 'disabled' | 'error' | ''"
    },
    "events": [
      {
        "name": "click",
        "description": "Node click event, parameter: index: click the index of the node: click the data of the node",
        "description_zh": "节点点击事件，参数：index: 点击节点的索引node：点击节点的数据",
        "params": "(index: number, node: IStepsItem) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "item",
        "description": "Step bar data item slot for bar step bars",
        "description_zh": "步骤条数据项插槽，用于条形步骤条"
      }
    ],
    "filename": "Steps"
  },
  {
    "name": "TinyTabs",
    "props": {
      "active-name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the initially selected tab items",
        "description_zh": "设置初始选中的页签项"
      },
      "before-close": {
        "default": "--",
        "value": "",
        "type": "(name: string)=> boolean | Promise",
        "description": "The callback function before closing the tab, with the page signature as the input parameter. If the function returns false or rejected promises, the tab is not closed",
        "description_zh": "关闭页签前的回调函数，入参为页签名。如果函数返回false 或 拒绝的Promise，则不关闭页签"
      },
      "before-leave": {
        "default": "--",
        "value": "",
        "type": "(activeName: string, oldActiveName: string) => boolean | Promise",
        "description": "切换页签项之前的钩子，若返回 false 或返回 Promise 且被 reject，则阻止切换； activeName: 即将切换的页签项名称, oldActiveName: 当前页签项名称",
        "description_zh": "切换页签项之前的钩子，若返回 false 或返回 Promise 且被 reject，则阻止切换； activeName: 即将切换的页签项名称, oldActiveName: 当前页签项名称"
      },
      "drop-config": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Enable the tab drag and drop function, configure a third-party sorting plug-in, and reorder the tab items; Note that tab-items that are not rendered via v-for cannot be saved in the tab-drag-end event after being dragged and sorted",
        "description_zh": "启用页签拖拽功能，配置第三方排序插件，对页签项进行重新排序；需注意：不是通过 v-for 渲染的 tab-item，在拖拽排序后，无法在 tab-drag-end 事件中对其顺序进行保存"
      },
      "editable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display both the Add and Remove buttons, in conjunction with the edit event",
        "description_zh": "是否同时显示添加和删除按钮，与 edit 事件搭配使用"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "绑定选中值，选中项的 name",
        "description_zh": "绑定选中值，选中项的 name"
      },
      "more-show-all": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the drop-down panel triggered by the 'More' button displays all tab items is suitable for the case of a large amount of data",
        "description_zh": "'更多'按钮触发的下拉面板是否展示全部页签项，适用于超大数据量的情况"
      },
      "overflow-title": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "页签是否在超过 title-width 省略显示，优先级低于 tooltip-config",
        "description_zh": "页签是否在超过 title-width 省略显示，优先级低于 tooltip-config"
      },
      "panel-max-height": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The maximum height of the drop-down panel triggered by the 'More' button, beyond which a scrollbar is displayed, which is suitable for very large data volumes",
        "description_zh": "'更多'按钮触发的下拉面板最大高度，超出则显示滚动条，适用于超大数据量的情况"
      },
      "panel-width": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The width of the drop-down panel triggered by the 'More' button",
        "description_zh": "'更多'按钮触发的下拉面板的宽度"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Add a class name to the More drop-down tab box, which can be used to customize the style of the drop-down options",
        "description_zh": "为\"更多\"下拉页签框添加类名，可用于自定义下拉选项的样式"
      },
      "position": {
        "default": "'top'",
        "value": "",
        "type": "IPosition",
        "description": "Set the location of the tab bar; Defaults to top",
        "description_zh": "设置页签栏所在位置; 默认为 top"
      },
      "separator": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set the separator style",
        "description_zh": "设置分隔符样式"
      },
      "show-more-tabs": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set whether to display the \"More\" button when the tab bar exceeds a certain width, if true, a drop-down box will appear when the mouse hovers over the button",
        "description_zh": "设置当页签栏超过一定宽度时是否显示\"更多\"按钮，若为 true，则当鼠标悬停到按钮上时，将出现下拉框展示超出宽度的页签项"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "small / large",
        "description": "Set the tabs tab size, which can be set to large or small, where small takes effect when tabStyle is card or border-card",
        "description_zh": "设置 tabs 页签尺寸,该属性可选值为 large 或 small，其中 small 在 tabStyle 为 card 或者 border-card 时生效"
      },
      "stretch": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the width of the tab item is automatically stretched",
        "description_zh": "页签项的宽度是否自动撑开"
      },
      "tab-style": {
        "default": "--",
        "value": "",
        "type": "ITabStyle",
        "description": "the type of tab; The default is an empty string",
        "description_zh": "页签的类型；默认为空字符串"
      },
      "title-width": {
        "default": "256px",
        "value": "",
        "type": "string",
        "description": "When overflow-title is true, specify the maximum width of the tab title",
        "description_zh": "当 overflow-title 为 true 时，指定页签标题的最大宽度"
      },
      "tooltip-config": {
        "default": "--",
        "value": "",
        "type": "ITooltipProps | \"title\"",
        "description": "Set the text beyond the prompt, the value of the object type refers to the Props configuration of the tooltip component, if you want to use the default title attribute, you can set it to the string type, the value is title, [new in version 3.8.0]",
        "description_zh": "设置文字超出提示, object 类型的值参考 tooltip 组件的 Props 配置，如果想使用默认的 title 属性，可设置为 string 类型，值为 title，【3.8.0版本新增】"
      },
      "with-add": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the Add button to add tabs",
        "description_zh": "是否显示添加按钮，用来添加页签项"
      },
      "with-close": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the close button of the tab item to delete the tab item",
        "description_zh": "是否显示页签项的关闭按钮，用来删除页签项"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tabs",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tabs",
    "typeDetail": {
      "IPosition": "type IPosition = 'top' | 'right' | 'bottom' | 'left'",
      "ITabStyle": "type ITabStyle = 'card' | 'border-card' | 'button-card' | ''",
      "ITooltipProps": "interface ITooltipProps { // 参照tooltip的props进行配置\n  effect?: string\n  placement?: string\n  visible?: string\n  [propName: string]: any\n}"
    },
    "events": [
      {
        "name": "add",
        "description": "It is triggered after clicking the \"Add\" button, which is used to write the logic of adding tab items",
        "description_zh": "点击\"添加\"按钮后触发，用于编写增加页签项的逻辑",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "click",
        "description": "点击页签项时触发,tab 被选中时触发; TabItem: 点中页签项的vueComponent对象信息",
        "description_zh": "点击页签项时触发,tab 被选中时触发; TabItem: 点中页签项的vueComponent对象信息",
        "params": "(TabItem: Component, event: Event) => void",
        "value": ""
      },
      {
        "name": "close",
        "description": "It is triggered after clicking the tab item close button, which is used to write the logic for deleting the tab item. name: The name value of the tab item to be deleted",
        "description_zh": "点击页签项关闭按钮后触发，用于编写删除页签项的逻辑； name: 要删除的页签项name值",
        "params": "(name: string) => void",
        "value": ""
      },
      {
        "name": "edit",
        "description": "点击\"添加\"或\"关闭\"按钮触发； name：null或删除的tab名称, type：添加或删除字段",
        "description_zh": "点击\"添加\"或\"关闭\"按钮触发； name：null或删除的tab名称, type：添加或删除字段",
        "params": "(name: string, type: \"add\" | \"remove\") => void",
        "value": ""
      },
      {
        "name": "tab-drag-end",
        "description": "The event after the drag ends",
        "description_zh": "拖动结束后的事件",
        "params": "(event: DragEvent) => void",
        "value": ""
      },
      {
        "name": "tab-drag-over",
        "description": "Events in dragging",
        "description_zh": "拖动中的事件",
        "params": "(event: DragEvent) => void",
        "value": ""
      },
      {
        "name": "tab-drag-start",
        "description": "The event at the beginning of the drag",
        "description_zh": "拖动开始时的事件",
        "params": "(event: DragEvent) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "moreIcon",
        "description": "More button slots",
        "description_zh": "更多按钮插槽"
      },
      {
        "name": "title",
        "description": "tab item title slot",
        "description_zh": "页签项标题插槽"
      }
    ],
    "filename": "Tabs"
  },
  {
    "name": "TinyTabItem",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "The Settings tab item is disabled, and if it is set to true, it cannot be clicked",
        "description_zh": "设置页签项禁用，设置为 true 则无法点击"
      },
      "lazy": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set whether the content of the tab items on this page is lazy loaded, and the default value is No",
        "description_zh": "设置本页签项内容是否为懒加载，默认为否"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The value of the tab item",
        "description_zh": "页签项的值"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The title of the tab item",
        "description_zh": "页签项标题"
      },
      "with-close": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the tab item displays the delete button, take or take the with-close of the tabs, as long as one of them is true, then this item displays the delete button",
        "description_zh": "页签项是否展示删除按钮，与 Tabs 的 with-close 取或，只要有一个为true，则此项展示删除按钮"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tabs",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tabs",
    "typeDetail": {
      "IPosition": "type IPosition = 'top' | 'right' | 'bottom' | 'left'",
      "ITabStyle": "type ITabStyle = 'card' | 'border-card' | 'button-card' | ''",
      "ITooltipProps": "interface ITooltipProps { // 参照tooltip的props进行配置\n  effect?: string\n  placement?: string\n  visible?: string\n  [propName: string]: any\n}"
    },
    "events": [
      {
        "name": "tab-nav-update",
        "description": "Triggered when the title value of a tab item changes",
        "description_zh": "当页签项的 title 值发生变化时触发",
        "params": "() => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "The default slot for the content section of the tab item is used to customize the page content corresponding to the tab item",
        "description_zh": "页签项对应内容部分的默认插槽，用来自定义页签项对应的页面内容"
      }
    ],
    "filename": "TabItem"
  },
  {
    "name": "TinyToggleMenu",
    "props": {
      "automatic-filtering": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether to automatically filter content when entering content in the input box is true by default",
        "description_zh": "输入框输入内容时是否自动过滤内容，默认是 true"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "Set the data for the shrink menu",
        "description_zh": "设置收缩菜单的数据"
      },
      "default-expand-all": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "The setting menu defaults to whether to expand all nodes, which is false",
        "description_zh": "设置菜单默认是否展开所有节点，默认为 false"
      },
      "draggable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Set whether to enable the function of dragging nodes, the default value is false",
        "description_zh": "设置是否开启拖拽节点的功能，默认值为false"
      },
      "ellipsis": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "If the menu content is too long, it is omitted and defaults to false",
        "description_zh": "菜单内容超长时省略显示，默认为 false"
      },
      "expand-on-click-node": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Sets whether the menu can be expanded/collapsed by clicking on the node, which defaults to false",
        "description_zh": "设置是否可以通过点击节点展开/收起菜单，默认为 false"
      },
      "get-menu-data-async": {
        "default": "--",
        "value": "",
        "type": "Function",
        "description": "Customize the menu data service to return asynchronous data, and you need to return a Promise object",
        "description_zh": "自定义菜单数据服务,返回异步数据,需返回Promise对象"
      },
      "get-menu-data-sync": {
        "default": "--",
        "value": "",
        "type": "Function",
        "description": "Customize the menu data service to return data directly (deprecated v3.4.0, removed v3.16.0; removal reason: if it is synchronous data, it is the same as :data function)",
        "description_zh": "自定义菜单数据服务,直接返回数据（deprecated v3.4.0废弃, v3.16.0移除；移除原因：如果是同步数据则和:data功能重复）"
      },
      ":icon": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Customize the icon on the left side of the menu",
        "description_zh": "自定义菜单左侧图标"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Input box placeholders",
        "description_zh": "输入框占位符"
      },
      ":props": {
        "default": "该属性的默认值为 {children: 'children',label: 'label',disabled: 'disabled'}",
        "value": "",
        "type": "object",
        "description": "The name of the mapping field for the configuration data option",
        "description_zh": "配置数据选项的映射字段名称"
      },
      "show-filter": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Set whether to display the filter search box, default is 'true'",
        "description_zh": "设置是否展示过滤搜索框，默认为 `true`"
      },
      "wrap": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "When the menu content is very long, it is displayed in line breaks, and the default is false",
        "description_zh": "菜单内容超长时换行显示，默认为 false"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/toggle-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/toggle-menu",
    "typeDetail": {},
    "events": [
      {
        "name": "node-click",
        "description": "Events after clicking on a node.; The callback function triggered after clicking on the node; Parameter arg1: {children: child node of the clicked node, id: ID of the clicked node, label: title} // Parameter arg2: object The data information object of the currently clicked node",
        "description_zh": "点击节点后的事件。;点击节点后触发的回调函数;//参数arg1:{children: 点击节点的子节点, id: 点击节点的id ,label: 点击节点的title} //参数arg2: object 当前点击节点的数据信息对象",
        "params": "Function(arg1,arg2)",
        "value": ""
      },
      {
        "name": "node-collapse",
        "description": "Events after shrinking a node.; Events that are triggered when a node is shut down; parameter arg1:object {children: child node of the clicked node, id: ID of the clicked node, label: title} of the clicked node// parameter arg2:object The data information object of the node currently clicked",
        "description_zh": "收缩节点后的事件。;节点被关闭时触发的事件;//参数arg1:object {children: 点击节点的子节点,id: 点击节点的id,label: 点击节点的title}//参数arg2:object 当前点击节点的数据信息对象",
        "params": "Function(arg1,arg2)",
        "value": ""
      },
      {
        "name": "node-drag-end",
        "description": "The event that is triggered at the end of the drag (r may not be successful); An event that is triggered when the drag is successfully completed; Parameter arg1: objectThe data information object of the node currently dragged arg2: objectThe node data information object in the position after the node is currently clickedarg3: The type of dragging, for example: 'inner'arg4:event",
        "description_zh": "拖拽结束时（r可能未成功）触发的事件;拖拽成功完成时触发的事件;//参数arg1: object当前拖拽节点的数据信息对象arg2: object当前点击节点拖拽后位置的节点数据信息对象arg3: 拖拽的类型，如：'inner'arg4:event",
        "params": "Function(arg1,arg2,arg3,arg4)",
        "value": ""
      },
      {
        "name": "node-drag-enter",
        "description": "Events triggered when dragging into other nodes; Events triggered when dragging into other nodes; Parameter arg1:object The data information object of the node currently dragged arg2: object The node data information object in the position after the node is currently clicked and dragged",
        "description_zh": "拖拽进入其他节点时触发的事件;拖拽进入其他节点时触发的事件;//参数arg1:object 当前拖拽节点的数据信息对象arg2: object 当前点击节点拖拽后位置的节点数据信息对象",
        "params": "Function(arg1,arg2)",
        "value": ""
      },
      {
        "name": "node-drag-leave",
        "description": "An event that is triggered when a node is dragged away; An event that is triggered when a node is dragged away; Parameter arg1:object arg2: object The data object of the node after the current dragging",
        "description_zh": "拖拽离开某个节点时触发的事件;拖拽离开某个节点时触发的事件;//参数arg1:object 当前拖拽节点的数据信息对象arg2: object 当前拖出后节点的数据信息对象",
        "params": "Function(arg1,arg2)",
        "value": ""
      },
      {
        "name": "node-drag-over",
        "description": "events that are triggered when a node is dragged (similar to a browser's mouseover event); events that are triggered when a node is dragged (similar to a browser's mouseover event); Parameter arg1:object arg2:object arg3:event of the node when the node is currently being dragged and dragged",
        "description_zh": "在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）;在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）;//参数arg1:object 当前拖拽节点的数据信息对象arg2:object 当前拖拽节点拖拽时节点的数据信息对象 arg3:event",
        "params": "Function(arg1,arg2,arg3)",
        "value": ""
      },
      {
        "name": "node-drag-start",
        "description": "An event that is triggered when a node starts dragging.; An event that is triggered when a node starts dragging.; Parameter: arg1:object arg2:event is the data information object of the node you are currently dragging",
        "description_zh": "节点开始拖拽时触发的事件。;节点开始拖拽时触发的事件。;//参数: arg1:object 当前拖拽节点的数据信息对象arg2:event",
        "params": "Function(arg1,arg2)",
        "value": ""
      },
      {
        "name": "node-drop",
        "description": "Events after dragging and dropping a node. Enabling the draggable property is valid if true.; Events after dragging and dropping a node. Enabling the draggable property is valid if true.; Parameter arg1:object The data information object of the node currently dragged arg2:object The position of the node after the current click is clicked, the data information object of the node arg3: the type of the dragg4:event",
        "description_zh": "拖放节点后的事件。开启 draggable 属性为 true 有效。;拖放节点后的事件。开启 draggable 属性为 true 有效。;//参数arg1:object 当前拖拽节点的数据信息对象 arg2:object 当前点击节点拖拽后的位置节点的数据信息对象arg3: 拖拽的类型arg4:event",
        "params": "Function(arg1,arg2)",
        "value": ""
      },
      {
        "name": "node-expand",
        "description": "展开节点后的事件。; 节点被展开时触发的事件;//参数arg1:{children: 点击节点的子节点, id: 点击节点的id, label: 点击节点的title}//参数arg2:Component 点击节点的componet对象信息//参数arg3:{ children: 点击节点的子节点id: 点击节点的id, label: 点击节点的title}",
        "description_zh": "展开节点后的事件。; 节点被展开时触发的事件;//参数arg1:{children: 点击节点的子节点, id: 点击节点的id, label: 点击节点的title}//参数arg2:Component 点击节点的componet对象信息//参数arg3:{ children: 点击节点的子节点id: 点击节点的id, label: 点击节点的title}",
        "params": "Function(arg1,arg2,arg3)",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "node",
        "description": "Custom slots",
        "description_zh": "自定义插槽"
      }
    ],
    "filename": "ToggleMenu"
  },
  {
    "name": "TinyTreeMenu",
    "props": {
      "accordion": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not it is set to accordion effect (only one node of the same level can be expanded)",
        "description_zh": "是否设置为手风琴效果（只能展开一个同级别的节点）"
      },
      "allow-drag": {
        "default": "--",
        "value": "",
        "type": "(vm:ITreeNodeVm) => boolean",
        "description": "The callback event before the drag starts, which defines the rule of whether the node allows dragging, and returns true to allow dragging, which is used with the draggable property",
        "description_zh": "拖拽开始前的回调事件，定义节点是否允许拖拽的规则，返回 true 则允许拖拽，配合 draggable 属性使用"
      },
      "allow-drop": {
        "default": "--",
        "value": "",
        "type": "(draggingNode: ITreeNodeVm, targetNode: ITreeNodeVm,type: \"prev\"|\"next\"|\"inner\") => boolean",
        "description": "The callback event before the end of the drag-and-drop defines the rule of whether the node is allowed to be placed on the template node, and if it returns true, it is allowed to be placed, which is used with the draggable property",
        "description_zh": "拖拽结束前的回调事件，定义节点是否允许放置到模板节点的规则，返回 true 则允许放置，配合 draggable 属性使用"
      },
      "check-strictly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to follow the practice of strictly associating parents and children with the show-checkbox property",
        "description_zh": "是否遵循父级和子级严格不相关联的做法，配合 show-checkbox 属性使用"
      },
      "collapsible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to allow the expanded menu to collapse, when it is not used with show-number, you can still click the icon to collapse",
        "description_zh": "是否允许展开后的菜单收起，未和 show-number 配套使用时，仍可以点击图标收起"
      },
      "customIcon": {
        "default": "--",
        "value": "",
        "type": "VueComponent",
        "description": "Set up a tree menu with icons",
        "description_zh": "设置带图标树形菜单"
      },
      "data": {
        "default": "[]",
        "value": "",
        "type": "ITreeNodeData[]",
        "description": "Static data sources",
        "description_zh": "静态数据源"
      },
      "default-checked-keys": {
        "default": "[]",
        "value": "",
        "type": "Array",
        "description": "By default, check the array of nodes' keys",
        "description_zh": "默认勾选节点的 key 的数组"
      },
      "default-expand-all": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to expand all child nodes by default",
        "description_zh": "是否默认展开所有子节点"
      },
      "default-expanded-keys": {
        "default": "[]",
        "value": "",
        "type": "Array",
        "description": "By default, expand an array of nodes' keys",
        "description_zh": "默认展开节点的 key 的数组"
      },
      "default-expanded-keys-highlight": {
        "default": "--",
        "value": "",
        "type": "number|string",
        "description": "Sets the highlight of a node in the default expanded node, used with the default-expanded-keys property",
        "description_zh": "设置默认展开节点中的某个节点高亮，配合 default-expanded-keys 属性使用"
      },
      "draggable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the menu node can be dragged",
        "description_zh": "是否可拖动菜单节点"
      },
      "ellipsis": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the text is too long and omitted to be displayed. Priority takes precedence over wrap",
        "description_zh": "是否文字超长省略显示。优先级高于 wrap"
      },
      "empty-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The content is the text that is displayed when it is empty",
        "description_zh": "内容为空时展示的文本"
      },
      "expand-on-click-node": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether you can click on a node to expand/collapse. If configured as fasle, you can only expand/collapse by clicking the drop-down icon",
        "description_zh": "是否能点击节点即展开/收起。配置为 fasle 则只能点击下拉图标展开/收起"
      },
      "filter-node-method": {
        "default": "--",
        "value": "",
        "type": "(query:string, data:ITreeNodeData, node:ITreeNodeVm) => boolean",
        "description": "Customize the method of filtering tree nodes, return true to indicate that the node can be displayed, and return false to indicate that the node will be hidden",
        "description_zh": "自定义树节点过滤的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏"
      },
      "get-menu-data-sync": {
        "default": "--",
        "value": "",
        "type": "() => ITreeNodeData[]",
        "description": "Customize the method to obtain the server-side data source and return a Promise object",
        "description_zh": "自定义获取服务端数据源的方法，返回一个 Promise 对象"
      },
      ":indent": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The horizontal indentation distance of the child relative to the parent node, in px",
        "description_zh": "子级相对于父级节点的水平缩进距离，单位 px"
      },
      "lazy": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to lazy load child nodes, use with the load property",
        "description_zh": "是否懒加载子节点，配合 load 属性使用"
      },
      "load": {
        "default": "--",
        "value": "",
        "type": "(node:ITreeNodeVm, resolve:IResolveType) => IResolveType",
        "description": "Methods for loading subtree data, which only take effect if the lazy property is true",
        "description_zh": "加载子树数据的方法，仅当 lazy 属性为 true 时生效"
      },
      "menu-collapsible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the side collapse and expand buttons",
        "description_zh": "是否显示侧边折叠与展开按钮"
      },
      ":node-height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Node height",
        "description_zh": "节点高度"
      },
      "node-key": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the attribute of the unique key of each tree node, which is unique throughout the tree",
        "description_zh": "设置每个树节点唯一标识（key）的属性，在整棵树中都是唯一的"
      },
      "only-check-children": {
        "default": "false",
        "value": "",
        "type": "",
        "description": "Whether the parent is not selectable, can only be expanded, and cannot be jumped",
        "description_zh": "父级是否不可选，只能展开不能跳转"
      },
      "prefix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Customize the front icon",
        "description_zh": "自定义前置图标"
      },
      "props": {
        "default": "{\n  children: 'children'\n  label: 'label'\n  disabled: 'disabled'\n  isLeaf: 'isLeaf'\n} \n",
        "value": "",
        "type": "IProps",
        "description": "Mapping fields",
        "description_zh": "映射字段"
      },
      "search-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Customize the search icon",
        "description_zh": "自定义搜索图标"
      },
      "show-checkbox": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the node can be selected",
        "description_zh": "节点是否可被选择"
      },
      "show-expand": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the one-click expand/collapse function. Click the icon in the bottom left corner to expand/collapse the menuNote: When used with the customIcon property, this feature is not supported for plain text menus",
        "description_zh": "是否启用一键展开/收起功能。点击左下角图标可展开/收起菜单注意：配合 customIcon 属性使用，纯文本菜单不支持此功能"
      },
      "show-filter": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a search box allows you to search for filter nodes",
        "description_zh": "是否显示搜索框，可搜索过滤节点"
      },
      "show-number": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the drop-down icon area on the right is displayed as the number content defined by the number property, it is recommended that it should not exceed 4 characters",
        "description_zh": "右侧下拉图标区域是否显示为 number 属性定义的数字内容，建议不超过 4 个字符"
      },
      "show-title": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the title prompt of the node, triggered by hovering over the node",
        "description_zh": "是否显示节点的 title 提示，鼠标悬浮节点之上触发"
      },
      "suffix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Customize the back icon",
        "description_zh": "自定义后置图标"
      },
      "wrap": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to wrap the line",
        "description_zh": "是否换行显示"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tree-menu",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tree-menu",
    "typeDetail": {
      "ITreeNodeVm": "interface ITreeNodeVm {\n  // 是否已勾选\n  \"checked\": boolean\n  // 子节点\n  \"childNodes\": ITreeNodeVm[]\n  // 节点数据\n  \"data\":  ITreeNodeData\n  // 是否展开\n  \"expanded\": boolean\n  // 唯一标识\n  \"id\": string | number\n  // 是否半选\n  \"indeterminate\": boolean\n  // 是否当前节点\n  \"isCurrent\": boolean\n  // 是否叶子节点\n  \"isLeaf\": boolean\n  // 层级\n  \"level\": number\n  // 是否已加载\n  \"loaded\": boolean\n  // 是否加载中\n  \"loading\": boolean\n  // 是否可见\n  \"visible\": boolean\n  // 是否禁用\n  \"disabled\": boolean\n  // 节点显示文本\n  \"label\": string\n}",
      "ITreeNodeData": "interface ITreeNodeData {\n  // node-key='id' 设置节点的唯一标识\n  \"id\": number | string\n  // 节点显示文本\n  \"label\": string\n  // 子节点\n  \"children\"?: ITreeNodeData[]\n  // 链接\n  \"url\"?: string,\n  // show-number 时展示的字段\n  \"number\"?: number | string\n  // 自定义每个节点的图标\n  \"customIcon\": Component \n}",
      "IProps": "interface IProps {\n  \"label\"?: string\n  \"children\"?: string\n  \"disabled\": string\n  \"isLeaf\": string\n}",
      "IResolveType": "// Promise 的 resolve 回调函数\ntype IResolveType = (data:ITreeNodeData) => void",
      "IDropType": "// 拖拽节点相对目标节点的位置\ntype IDropType = before | after | inner | none"
    },
    "events": [
      {
        "name": "check-change",
        "description": "Listens for events when the check status of a node that can be selected changes",
        "description_zh": "监听可勾选节点的勾选状态发生变化时的事件",
        "params": "(node:ITreeNodeVm, checked:boolean, indeterminate:boolean) => void",
        "value": ""
      },
      {
        "name": "current-change",
        "description": "Listens for events when the currently selected node changes",
        "description_zh": "监听当前选中节点发生变化时的事件",
        "params": "(nodeData:ITreeNodeData, node:ITreeNodeVm) => void",
        "value": ""
      },
      {
        "name": "node-click",
        "description": "Listens for events when a node is clicked",
        "description_zh": "监听节点被点击时的事件",
        "params": "(nodeData:ITreeNodeData, node:ITreeNodeVm) => void",
        "value": ""
      },
      {
        "name": "node-collapse",
        "description": "Listen for events when a node is clicked to collapse;",
        "description_zh": "监听节点被点击收起时的事件;",
        "params": "(nodeData:ITreeNodeData, node:ITreeNodeVm) => void",
        "value": ""
      },
      {
        "name": "node-drag-end",
        "description": "Listens for events where the node is dragged to the end (which may not be successful).",
        "description_zh": "监听节点拖拽结束（可能未成功）的事件",
        "params": "(draggingNode:ITreeNodeVm, targetNode:ITreeNodeVm, dropType:IDropType, event:DragEvent) => void",
        "value": ""
      },
      {
        "name": "node-drag-start",
        "description": "Listen for events where the node starts dragging",
        "description_zh": "监听节点开始拖拽的事件",
        "params": "(node:ITreeNodeVm, event:DragEvent) => void",
        "value": ""
      },
      {
        "name": "node-expand",
        "description": "Listen for events when a node is clicked to expand;",
        "description_zh": "监听节点被点击展开时的事件;",
        "params": "(nodeData:ITreeNodeData, node:ITreeNodeVm) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "getCurrentKey",
        "description": "Get the key of the currently selected node, note: Use the node-key property to set the field of the key value of each node, only applicable to single selection",
        "params": "() => string | number | null",
        "description_zh": "获取当前选中节点的 key ，注意：配合 node-key 属性设置每个节点 key 值的字段,仅适用单选",
        "value": ""
      },
      {
        "name": "getCurrentNode",
        "description": "To obtain the data of the currently selected node, note: Use the node-key property to set the field of the key value of each node, only for single selection",
        "params": "() => ITreeNodeData|null",
        "description_zh": "获得当前选中节点的数据,注意：配合 node-key 属性设置每个节点 key 值的字段,仅适用单选",
        "value": ""
      },
      {
        "name": "setCurrentKey",
        "description": "Set a node to the currently selected node by using the key, note: Use the node-key property to set the field of the key value of each node",
        "params": "(key:string|number) => void",
        "description_zh": "通过 key 设置某个节点为当前选中的节点，注意：配合 node-key 属性设置每个节点 key 值的字段",
        "value": ""
      },
      {
        "name": "setCurrentNode",
        "description": "Use nodeData to set a node as the currently selected node, note that the node-key property is used to set the field of each node's key value",
        "params": "(nodeData:ITreeNodeData) => void",
        "description_zh": "通过 nodeData 设置某个节点为当前选中的节点，注意：配合 node-key 属性设置每个节点 key 值的字段",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "Customize the content of the tree node, with { node, data } parameter",
        "description_zh": "自定义树节点的内容，参数为 { node, data }"
      }
    ],
    "filename": "TreeMenu"
  },
  {
    "name": "TinyAutoComplete",
    "props": {
      "clearable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it can be emptied",
        "description_zh": "是否可清空"
      },
      ":debounce": {
        "default": "300",
        "value": "",
        "type": "number",
        "description": "Get the input suggested debounce delay",
        "description_zh": "获取输入建议的去抖延时"
      },
      "disabled": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "display-only": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set read-only",
        "description_zh": "设置只读"
      },
      "fetch-suggestions": {
        "default": "--",
        "value": "",
        "type": "IAutocompleteFetchSuggestions",
        "description": "Returns the input suggestion method, and only returns it by calling callback when your input suggestion data resolves",
        "description_zh": "返回输入建议的方法，仅当你的输入建议数据 resolve 时，通过调用 callback 来返回它"
      },
      "hide-loading": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to hide the loading icon when loading remotely",
        "description_zh": "是否隐藏远程加载时的加载图标"
      },
      "highlight-first-item": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the first item in the remote search suggestion is highlighted by default",
        "description_zh": "是否默认突出显示远程搜索建议中的第一项"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "等价于原生 input aria-label 属性",
        "description_zh": "等价于原生 input aria-label 属性"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "input 元素的原生属性",
        "description_zh": "input 元素的原生属性"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Input box placeholder text",
        "description_zh": "输入框占位文本"
      },
      "placement": {
        "default": "'bottom-start'",
        "value": "",
        "type": "IAutocompletePlacement",
        "description": "Menu pop-up location",
        "description_zh": "菜单弹出位置"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to insert a drop-down list into the body element. If there is a problem with the positioning of the drop-down list, you can set the property to false",
        "description_zh": "是否将下拉列表插入至 body 元素。在下拉列表的定位出现问题时，可将该属性设置为 false"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The class name of the drop-down list",
        "description_zh": "下拉列表的类名"
      },
      "prefix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Input box header icon",
        "description_zh": "输入框头部图标"
      },
      "select-when-unmatched": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "In the absence of any matching suggestions, press enter to trigger the select event",
        "description_zh": "在输入没有任何匹配建议的情况下，按下回车是否触发 select 事件"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "Set the component size",
        "description_zh": "设置组件大小"
      },
      "suffix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Input box end icon",
        "description_zh": "输入框尾部图标"
      },
      "trigger-on-focus": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display a list of suggestions when the input box is focused",
        "description_zh": "是否在输入框 focus 时显示建议列表"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Required value, enter the binding value",
        "description_zh": "必填值，输入绑定值"
      },
      "value-key": {
        "default": "'value'",
        "value": "",
        "type": "string",
        "description": "In the input suggestion object, it is used to display and match the key name of the input",
        "description_zh": "在输入建议对象中，用于显示和匹配输入的键名"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/autocomplete",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/autocomplete",
    "typeDetail": {
      "IAutocompleteSuggestionItem": "interface IAutocompleteSuggestionItem {\n  [key: string]: string | undefined\n  value?: string\n}",
      "IAutocompletePlacement": "type IAutocompletePlacement = \"top\" | \"top-start\" | \"top-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\"",
      "IAutocompleteFetchSuggestions": "type IAutocompleteFetchSuggestions = (queryString: string, callback: (suggestions: IAutocompleteSuggestionItem[]) => void) => void"
    },
    "events": [
      {
        "name": "select",
        "description": "Triggered when you click to select a suggested item, the callback parameter is the item passed in fetch-suggestions",
        "description_zh": "点击选中建议项时触发，回调参数为 fetch-suggestions 中传入的项",
        "params": "(selection: IAutocompleteSuggestionItem) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "append",
        "description": "The input box is followed by the content",
        "description_zh": "输入框后置内容"
      },
      {
        "name": "default",
        "description": "下拉列表项插槽，插槽参数: arg: { slotScope: IAutocompleteSuggestionItem }, 其中 slotScope 是 fetch-suggestions 中传入的项",
        "description_zh": "下拉列表项插槽，插槽参数: arg: { slotScope: IAutocompleteSuggestionItem }, 其中 slotScope 是 fetch-suggestions 中传入的项"
      },
      {
        "name": "prefix",
        "description": "Enter the content of the header of the box",
        "description_zh": "输入框头部内容"
      },
      {
        "name": "prepend",
        "description": "The input box is preceded by content",
        "description_zh": "输入框前置内容"
      },
      {
        "name": "suffix",
        "description": "Enter the content at the end of the box",
        "description_zh": "输入框尾部内容"
      }
    ],
    "filename": "AutoComplete"
  },
  {
    "name": "TinyCascader",
    "props": {
      "before-filter": {
        "default": "--",
        "value": "",
        "type": "(value: string) => boolean | Promise",
        "description": "If the hook before filtering is the input value, if it returns false or returns a Promise and is rejected, the filter will be stopped",
        "description_zh": "筛选之前的钩子，参数为输入的值，若返回 false 或者返回 Promise 且被 reject，则停止筛选"
      },
      "blank": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "shape='filter', and the background of the filter mode is set to transparent",
        "description_zh": "shape='filter' 时生效，设置过滤器模式背景为透明"
      },
      "clearable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the purge option is supported",
        "description_zh": "是否支持清空选项"
      },
      "collapse-tags": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to fold the tag in multi-select mode",
        "description_zh": "多选模式下是否折叠 Tag"
      },
      ":debounce": {
        "default": "300",
        "value": "",
        "type": "number",
        "description": "The debounce delay of the search keyword input, in milliseconds",
        "description_zh": "搜索关键词输入的去抖延迟，单位毫秒"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "filter-method": {
        "default": "--",
        "value": "",
        "type": "(node: ICascaderPanelNode, keyword: string) => boolean",
        "description": "Customize the search logic, the first parameter is node, and the second parameter is the search keyword keyword, which returns a boolean value to indicate whether it is hit",
        "description_zh": "自定义搜索逻辑，第一个参数是节点 node，第二个参数是搜索关键词 keyword，通过返回布尔值表示是否命中"
      },
      "filterable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether the option is searchable",
        "description_zh": "是否可搜索选项"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "shape='filter', and the label can be passed to display the title",
        "description_zh": "shape='filter' 时生效，可传入 label 显示标题"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelNodePropValue",
        "description": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定",
        "description_zh": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelData[]",
        "description": "Optional data sources, key names configurable via the Props property",
        "description_zh": "可选项数据源，键名可通过 Props 属性配置"
      },
      "placeholder": {
        "default": "'请选择'",
        "value": "",
        "type": "string",
        "description": "Input box placeholder text",
        "description_zh": "输入框占位文本"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to insert a popover into the body element. If there is a problem with the positioning of the pop-up, you can set this property to false (see Select Component)",
        "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Add a class name to the popper (see popover component)",
        "description_zh": "为 popper 添加类名(可参考 popover 组件)"
      },
      "props": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelConfig",
        "description": "Configuration options, see the ICascaderPanelConfig table",
        "description_zh": "配置选项，具体见 ICascaderPanelConfig 表"
      },
      "separator": {
        "default": "'/'",
        "value": "",
        "type": "string",
        "description": "Option separator",
        "description_zh": "选项分隔符"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "filter",
        "description": "Switch to filter mode via the shape='filter' property",
        "description_zh": "通过 shape='filter' 属性切换至过滤器模式"
      },
      "show-all-levels": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the full path of the selected value in the input box",
        "description_zh": "输入框中是否显示选中值的完整路径"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "size",
        "description_zh": "尺寸"
      },
      "tip": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "shape='filter', you can pass in a tip to display a prompt message",
        "description_zh": "shape='filter' 时生效，可传入 tip 显示提示信息"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader",
    "typeDetail": {
      "ICascaderPanelNodeValue": "type ICascaderPanelNodeValue = string | number",
      "ICascaderPanelNodePropValue": "type ICascaderPanelNodePropValue =\n  | ICascaderPanelNodeValue\n  | ICascaderPanelNodeValue[]\n  | ICascaderPanelNodeValue[][]",
      "ICascaderPanelData": "type ICascaderPanelData = {\n  value?: ICascaderPanelNodeValue\n  label?: string\n  children?: ICascaderPanelData[]\n  disabled?: boolean\n  leaf?: boolean\n  [key: string]: ICascaderPanelNodeValue | ICascaderPanelData[] | string | boolean | undefined\n}",
      "ICascaderPanelConfig": "interface ICascaderPanelConfig {\n  emitPath: boolean\n  expandTrigger: 'click' | 'hover'\n  hoverThreshold: number\n  checkStrictly?: boolean\n  multiple?: boolean\n  lazy: boolean\n  lazyLoad: (\n    node: ICascaderPanelNode,\n    resolve: (dataList: ICascaderPanelData[]) => void\n  ) => void\n  value: string\n  label: string\n  children: string\n  disabled: string\n  leaf: string\n}",
      "ICascaderPanelNode": "type ICascaderPanelNode = {\n  parent: ICascaderPanelNode | null\n  level: number\n  data: ICascaderPanelData\n  config: ICascaderPanelConfig\n  uid: number\n  value: ICascaderPanelNodeValue\n  label: string\n  pathNodes: Node[]\n  path: ICascaderPanelNodeValue[]\n  pathLabels: string[]\n  loaded: boolean\n  loading: boolean\n  hasChildren: boolean\n  children: Node[]\n  checked?: boolean\n  indeterminate?: boolean\n  root?: boolean\n}",
      "ICascaderPanelLazyLoad": "type ICascaderPanelLazyLoad = (node: ICascaderPanelNode, resolve: (dataList: ICascaderPanelData[]) => void) => void"
    },
    "events": [
      {
        "name": "blur",
        "description": "Triggers when focus is lost",
        "description_zh": "当失去焦点时触发",
        "params": "(event: FocusEvent) => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "Triggered when a node is selected",
        "description_zh": "当选中节点变化时触发",
        "params": "(value: ICascaderPanelNodePropValue) => void",
        "value": ""
      },
      {
        "name": "expand-change",
        "description": "Triggered when the expansion node changes",
        "description_zh": "当展开节点发生变化时触发",
        "params": "(value: ICascaderPanelNodeValue[]) => void",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Triggers when focus is gained",
        "description_zh": "当获得焦点时触发",
        "params": "(event: FocusEvent) => void",
        "value": ""
      },
      {
        "name": "remove-tag",
        "description": "In multi-select mode, it is triggered when the tag is removed",
        "description_zh": "在多选模式下，移除Tag时触发",
        "params": "(removeValue: ICascaderPanelNodeValue[]) => void",
        "value": ""
      },
      {
        "name": "visible-change",
        "description": "Triggered when the drop-down box appears/hides",
        "description_zh": "下拉框出现/隐藏时触发",
        "params": "(visible: boolean) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "getCheckedNodes",
        "description": "Gets the selected node",
        "params": "(leafOnly: boolean = false) => ICascaderPanelNode[]",
        "description_zh": "获取选中的节点",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "自定义备选项的节点内容,参数为 { node: ICascaderPanelNode, data: ICascaderPanelData },分别为当前节点的 Node 对象和数据",
        "description_zh": "自定义备选项的节点内容,参数为 { node: ICascaderPanelNode, data: ICascaderPanelData },分别为当前节点的 Node 对象和数据"
      },
      {
        "name": "empty",
        "description": "What to do when there are no matching options",
        "description_zh": "无匹配选项时的内容"
      },
      {
        "name": "no-data",
        "description": "Set what is displayed when there is no data via the no-data slot",
        "description_zh": "通过 no-data 插槽设置没有数据时显示的内容"
      }
    ],
    "filename": "Cascader"
  },
  {
    "name": "TinyCascaderPanel",
    "props": {
      "v-model": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelNodePropValue",
        "description": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定",
        "description_zh": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelData[]",
        "description": "Optional data sources, key names configurable via the Props property",
        "description_zh": "可选项数据源，键名可通过 Props 属性配置"
      },
      "props": {
        "default": "--",
        "value": "",
        "type": "ICascaderPanelConfig",
        "description": "Configuration options, see the ICascaderPanelConfig table",
        "description_zh": "配置选项，具体见 ICascaderPanelConfig 表 "
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader-panel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader-panel",
    "typeDetail": {
      "ICascaderPanelNodeValue": "type ICascaderPanelNodeValue = string | number",
      "ICascaderPanelNodePropValue": "type ICascaderPanelNodePropValue =\n  | ICascaderPanelNodeValue\n  | ICascaderPanelNodeValue[]\n  | ICascaderPanelNodeValue[][]",
      "ICascaderPanelData": "type ICascaderPanelData = {\n  value?: ICascaderPanelNodeValue\n  label?: string\n  children?: ICascaderPanelData[]\n  disabled?: boolean\n  leaf?: boolean\n  [key: string]: ICascaderPanelNodeValue | ICascaderPanelData[] | string | boolean | undefined\n}",
      "ICascaderPanelConfig": "interface ICascaderPanelConfig {\n  emitPath: boolean\n  expandTrigger: 'click' | 'hover'\n  hoverThreshold: number\n  checkStrictly?: boolean\n  multiple?: boolean\n  lazy: boolean\n  lazyLoad: (\n    node: ICascaderPanelNode,\n    resolve: (dataList: ICascaderPanelData[]) => void\n  ) => void\n  value: string\n  label: string\n  children: string\n  disabled: string\n  leaf: string\n}",
      "ICascaderPanelNode": "type ICascaderPanelNode = {\n  parent: ICascaderPanelNode | null\n  level: number\n  data: ICascaderPanelData\n  config: ICascaderPanelConfig\n  uid: number\n  value: ICascaderPanelNodeValue\n  label: string\n  pathNodes: Node[]\n  path: ICascaderPanelNodeValue[]\n  pathLabels: string[]\n  loaded: boolean\n  loading: boolean\n  hasChildren: boolean\n  children: Node[]\n  checked?: boolean\n  indeterminate?: boolean\n  root?: boolean\n}",
      "ICascaderPanelLazyLoad": "type ICascaderPanelLazyLoad = (node: ICascaderPanelNode, resolve: (dataList: ICascaderPanelData[]) => void) => void"
    },
    "events": [
      {
        "name": "change",
        "description": "Triggered when the selected node changes; The callback parameter is the value of the selected node",
        "description_zh": "当选中节点变化时触发; 回调参数为 选中节点的值",
        "params": "(value: ICascaderPanelNodePropValue) => void",
        "value": ""
      },
      {
        "name": "expand-change",
        "description": "Triggered when the expansion node changes; The callback parameter is an array of parent option values (Array type)",
        "description_zh": "当展开节点发生变化时触发; 回调参数为 各父级选项值组成的数组 (Array 类型)",
        "params": "(value: ICascaderPanelNodeValue[]) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "clearCheckedNodes",
        "description": "Clears the selected nodes",
        "params": "() => void",
        "description_zh": "清空选中的节点",
        "value": ""
      },
      {
        "name": "getCheckedNodes",
        "description": "Get the selected node; parameter (leafOnly) is false or not, the default value is false",
        "params": "(leafOnly: boolean = false) => ICascaderPanelNode[]",
        "description_zh": "获取选中的节点;参数为 (leafOnly) 是否只是获取子节点，默认值为 false",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "自定义备选项的节点内容,参数为 { node: ICascaderPanelNode, data: ICascaderPanelData },分别为当前节点的 Node 对象和数据",
        "description_zh": "自定义备选项的节点内容,参数为 { node: ICascaderPanelNode, data: ICascaderPanelData },分别为当前节点的 Node 对象和数据"
      }
    ],
    "filename": "CascaderPanel"
  },
  {
    "name": "TinyCheckbox",
    "props": {
      "border": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a border",
        "description_zh": "是否显示边框"
      },
      "checked": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "This option is selected by default",
        "description_zh": "是否默认勾选"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "false-label": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "There is no value when checked",
        "description_zh": "没有选中时的值"
      },
      "indeterminate": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set the indeterminate state, which is only responsible for style control",
        "description_zh": "设置 indeterminate 状态，只负责样式控制"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string | number | boolean",
        "description": "The value of the selected state (only valid in checkbox-group or if the binding object type is array)",
        "description_zh": "选中状态的值（只有在 checkbox-group 中或者绑定对象类型为 array 时有效）"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number | boolean",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native name attribute",
        "description_zh": "原生 name 属性"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "filter",
        "description": "Filter mode",
        "description_zh": "过滤器模式"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "checkbox, which is only valid if the border is true",
        "description_zh": "checkbox 的尺寸，仅在 border 为真时有效"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The text displayed by the checkbox",
        "description_zh": "复选框显示的文本"
      },
      "true-label": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "The value when selected",
        "description_zh": "选中时的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "typeDetail": {
      "ICheckboxGroupOptions": "interface ICheckboxGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  disabled?: boolean // 是否禁用\n  checked?: boolean // 是否默认选中\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "An event that is triggered when a binding value changes",
        "description_zh": "当绑定值变化时触发的事件",
        "params": "(value: string | number | boolean) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "checkbox",
        "description_zh": "checkbox 的内容"
      }
    ],
    "filename": "Checkbox"
  },
  {
    "name": "TinyCheckboxGroup",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "fill": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The fill color and border color of the checkbox in the form of a button",
        "description_zh": "按钮形式的 checkbox 激活时的填充色和边框色"
      },
      ":max": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The maximum number of checkboxes that can be checked",
        "description_zh": "可被勾选的 checkbox 的最大数量"
      },
      ":min": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The minimum number of checkboxes that can be checked",
        "description_zh": "可被勾选的 checkbox 的最小数量"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string[] | number[]",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "ICheckboxGroupOptions[]",
        "description": "checkbox-group 子项配置列表",
        "description_zh": "checkbox-group 子项配置列表"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "filter",
        "description": "Filter mode",
        "description_zh": "过滤器模式"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "The checkbox group size, which is only valid for checkboxes in the form of buttons or checkboxes with borders",
        "description_zh": "多选框组尺寸，仅对按钮形式的 checkbox 或带有边框的 checkbox 有效"
      },
      "text-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The color of the text when the checkbox in the form of a button is activated",
        "description_zh": "按钮形式的 checkbox 激活时的文本颜色"
      },
      "type": {
        "default": "'checkbox'",
        "value": "",
        "type": "button / checkbox",
        "description": "The checkbox group child component type needs to be used in conjunction with the options property",
        "description_zh": " 复选框组子项组件类型，需配合 options 属性使用"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set how the components are arranged, and set whether the checkboxes are arranged vertically",
        "description_zh": "设置组件排列方式，设置复选框是否垂直排列"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "typeDetail": {
      "ICheckboxGroupOptions": "interface ICheckboxGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  disabled?: boolean // 是否禁用\n  checked?: boolean // 是否默认选中\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "An event that is triggered when a binding value changes",
        "description_zh": "当绑定值变化时触发的事件",
        "params": "(value: string[] |number[]) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "checkbox-group 的内容",
        "description_zh": "checkbox-group 的内容"
      }
    ],
    "filename": "CheckboxGroup"
  },
  {
    "name": "TinyCheckboxButton",
    "props": {
      "checked": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "This option is selected by default",
        "description_zh": "是否默认勾选"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "events": {
        "default": "--",
        "value": "",
        "type": "ICheckboxGroupOptions.events",
        "description": "Native events",
        "description_zh": "原生事件"
      },
      "false-label": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "There is no value when checked",
        "description_zh": "没有选中时的值"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string | number | boolean",
        "description": "The value of the selected state (only valid in checkbox-group or if the binding object type is array)",
        "description_zh": "选中状态的值（只有在 checkbox-group 中或者绑定对象类型为array时有效）"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number | boolean",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native name attribute",
        "description_zh": "原生 name 属性"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Checkbox text",
        "description_zh": "复选框文本"
      },
      "true-label": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "The value when selected",
        "description_zh": "选中时的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/checkbox",
    "typeDetail": {
      "ICheckboxGroupOptions": "interface ICheckboxGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  disabled?: boolean // 是否禁用\n  checked?: boolean // 是否默认选中\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "checkbox-button 的内容",
        "description_zh": "checkbox-button 的内容"
      }
    ],
    "filename": "CheckboxButton"
  },
  {
    "name": "TinyColorPicker",
    "props": {
      "alpha": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether alpha selection is enabled",
        "description_zh": "是否启用alpha选择"
      },
      "history": {
        "default": "undefined",
        "value": "",
        "type": "string[] | undefined",
        "description": "Enable history",
        "description_zh": "启用历史记录"
      },
      "predefine": {
        "default": "undefined",
        "value": "",
        "type": "string[] | undefined",
        "description": "Enable predefined colors",
        "description_zh": "启用预定义颜色"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "定义color-picker尺寸; 该属性的可选值为 large / medium / small / mini",
        "description_zh": "定义color-picker尺寸; 该属性的可选值为 large / medium / small / mini"
      },
      "visible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认显示color-select",
        "description_zh": "是否默认显示color-select"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color-picker",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color-picker",
    "typeDetail": {},
    "events": [
      {
        "name": "cancel",
        "description": "The event is triggered when you press cancel or tap on the external one",
        "description_zh": "按下取消或点击外部的时触发该事件",
        "params": "()=>void",
        "value": ""
      },
      {
        "name": "confirm",
        "description": "The event is triggered when you press confirm",
        "description_zh": "按下确认时触发该事件",
        "params": "(hex:string) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "ColorPicker"
  },
  {
    "name": "TinyColorSelectPanel",
    "props": {
      "alpha": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether alpha selection is enabled",
        "description_zh": "是否启用alpha选择"
      },
      "history": {
        "default": "undefined",
        "value": "",
        "type": "string[] | undefined",
        "description": "It's time to enable history",
        "description_zh": "时候启用历史记录"
      },
      "predefine": {
        "default": "undefined",
        "value": "",
        "type": "string[] | undefined",
        "description": "It's time to enable history",
        "description_zh": "时候启用历史记录"
      },
      "visible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "是否默认显示color select panel",
        "description_zh": "是否默认显示color select panel"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color-select-panel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/color-select-panel",
    "typeDetail": {},
    "events": [
      {
        "name": "cancel",
        "description": "The event is triggered when you press cancel or tap on the external one",
        "description_zh": "按下取消或点击外部的时触发该事件",
        "params": "()=>void",
        "value": ""
      },
      {
        "name": "color-update",
        "description": "",
        "description_zh": "",
        "params": "(color:Color) => void",
        "value": ""
      },
      {
        "name": "confirm",
        "description": "The event is triggered when you press confirm",
        "description_zh": "按下确认时触发该事件",
        "params": "(hex:string) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "ColorSelectPanel"
  },
  {
    "name": "TinyDatePicker",
    "props": {
      "align": {
        "default": "'left'",
        "value": "",
        "type": "left / center / right",
        "description": "The alignment of the date selection panel and the input box",
        "description_zh": "日期选择面板和输入框的对齐方式"
      },
      "clear-icon": {
        "default": "IconOperationfaild",
        "value": "",
        "type": "Component",
        "description": "Customize the clear icon",
        "description_zh": "自定义清空图标"
      },
      "clearable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a clear button",
        "description_zh": "是否显示清除按钮"
      },
      "default-time": {
        "default": "'00:00:00' | ['00:00:00', '00:00:00']",
        "value": "",
        "type": "string | string[]",
        "description": "type=\"datetime\", default-time is a string that is used to set the default value in the time input box after selecting a date. type=\"datetimerange\", default-time is an array of strings that sets the default values in the start and end time input boxes when a date range is selected",
        "description_zh": "type=\"datetime\" 时，default-time 是一个字符串，用于设置选择一个日期后，时间输入框中的默认值；type=\"datetimerange\" 时，default-time 是一个字符串数组，用于设置选择一个日期范围后，开始和结束时间输入框中的默认值"
      },
      "default-value": {
        "default": "new Date()",
        "value": "",
        "type": "string | Date",
        "description": "When the selected date value is empty, the default time displayed when the selector panel is opened, which can be in date format or a string that can be parsed by new Date().",
        "description_zh": "当选中的日期值为空时，选择器面板打开时默认显示的时间，可以是日期格式或者能被 new Date() 解析的字符串"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "disable",
        "description_zh": "禁用"
      },
      "editable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Text boxes can be entered",
        "description_zh": "文本框可输入"
      },
      "end-placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "The placeholder content for the end date when the scope is selected",
        "description_zh": "范围选择时结束日期的占位内容"
      },
      "format": {
        "default": "'yyyy-MM-dd'",
        "value": "",
        "type": "string",
        "description": "The format that appears in the input box",
        "description_zh": "显示在输入框中的格式"
      },
      "format-weeks": {
        "default": "--",
        "value": "",
        "type": "(customWeeks: number, weekFirstDays: string[]) => string",
        "description": "The callback function has two parameters, customWeeks is used to get the sequence number of the custom week, and weekFirstDays is used to get the first date of the week",
        "description_zh": "格式化周次序号，该回调函数有两个参数，customWeeks 用来获取自定义周次的序号，weekFirstDays 用来获取每周次中的首个日期"
      },
      "isutc8": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "The default value is false, and when it is set to true, the default time zone of the system is switched, and the time is still displayed as the time in the East 8 zone, and the applicable scenario is the time in the East 8 zone in overseas regions",
        "description_zh": "默认值为 false，设置为 true 时切换系统默认时区，时间依然显示为东八区时间，适用场景为海外地区显示东八区时间"
      },
      "label": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "When the shape=\"filter\" property is set, it represents the title displayed in filter mode, and a separate label property allows the label to be placed at the beginning of the component",
        "description_zh": "设置 shape=\"filter\" 属性之后，代表过滤器模式下显示的标题，单独设置 label 属性可以使 label 放置在组件的开始位置"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "Date | string | number | Array",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "name": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "Native attributes",
        "description_zh": "原生属性"
      },
      "picker-options": {
        "default": "--",
        "value": "",
        "type": "IPickerOptions",
        "description": "配置部分禁用、快捷选项等，包含 firstDayOfWeek / disabledDate / onPick / shortcuts 属性，详细用法可参考 IPickerOptions 类型声明",
        "description_zh": "配置部分禁用、快捷选项等，包含 firstDayOfWeek / disabledDate / onPick / shortcuts 属性，详细用法可参考 IPickerOptions 类型声明"
      },
      "placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "Placeholder content when not scoped",
        "description_zh": "非范围选择时的占位内容"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to insert a pop-up into the body element, and if there is a problem with the positioning of the pop-up, you can set this property to false (see Select Component)",
        "description_zh": "是否将弹出框插入至 body 元素，在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The class class name added to the DatePicker drop-down box",
        "description_zh": "为 DatePicker 下拉弹框添加的 class 类名"
      },
      "range-separator": {
        "default": "'-'",
        "value": "",
        "type": "string",
        "description": "Separator when selecting a range",
        "description_zh": "选择范围时的分隔符"
      },
      "readonly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Specifies whether the calendar component is read-only",
        "description_zh": "设置日历组件是否只读"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Switch to filter mode via the shape=\"filter\" attribute",
        "description_zh": "通过 shape=\"filter\" 属性切换至过滤器模式"
      },
      "show-timezone": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the time zone selection in the date selection panel",
        "description_zh": "是否开启设置日期选择面板时区选择"
      },
      "show-week-number": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the week number",
        "description_zh": "是否展示周次序号"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "Enter the size of the field",
        "description_zh": "输入框尺寸"
      },
      "start-placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "The placeholder content for the start date when the range is selected",
        "description_zh": "范围选择时开始日期的占位内容"
      },
      "step": {
        "default": "--",
        "value": "",
        "type": "IStep",
        "description": "After setting the type=\"datetime\" or type=\"datetimerange\" property, you can configure the step size of the time by step, which is an object that contains three properties: hour, minute, and second, which are used to configure the step size of hours, minutes, and seconds, respectively",
        "description_zh": "设置 type=\"datetime\" 或者 type=\"datetimerange\" 属性之后，可以通过 step 配置时间的步长，step 是一个对象，包含三个属性：hour、minute、second，分别用来配置时、分、秒的步长"
      },
      "suffix-icon": {
        "default": "IconCalendar",
        "value": "",
        "type": "Component",
        "description": "Customize the back icon of the selector",
        "description_zh": "自定义选择器的后置图标"
      },
      "time-arrow-control": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Time selection is controlled by the arrow buttons, used when type is datetime, datetimerange, and the default is time selection by scrolling through the mouse wheel",
        "description_zh": "通过箭头按钮控制时间选择，当 type 为 datetime、datetimerange 时使用，默认为 通过鼠标滚轮滚动选择时间"
      },
      "time-format": {
        "default": "'HH:mm:ss'",
        "value": "",
        "type": "string",
        "description": "If the custom format cannot automatically distinguish between time and date, this option can be configured to help determine the format",
        "description_zh": "当自定义的 format 格式无法自动区分时间与日期时，可配置该选项用来辅助确定格式"
      },
      "tip": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Prompt information displayed in filter mode",
        "description_zh": "过滤器模式下显示的提示信息"
      },
      "type": {
        "default": "'date'",
        "value": "",
        "type": "IType",
        "description": "Display type, the optional value of which can be found by referring to the IType type declaration",
        "description_zh": "显示类型，该属性的可选值可参考 IType 类型声明"
      },
      "unlink-panels": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Cancel the linkage between the two date panels in the range selector",
        "description_zh": "在范围选择器里取消两个日期面板之间的联动"
      },
      "validate-event": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Sets whether the date picker triggers a form validation when entered",
        "description_zh": "设置日期选择器在输入时是否会触发表单校验"
      },
      "value-format": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Specifies the format of the bound value, or if it is not specified, the bound value is a Date object",
        "description_zh": "指定绑定值的格式，不指定则绑定值为 Date 对象"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/date-picker",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/date-picker",
    "typeDetail": {
      "IPickerOptions": "interface IPickerOptions {\n  // 每周的第一天是星期几，默认值是7，也就是星期天\n  firstDayOfWeek: number\n  // 实现部分禁用，此时只能选择一部分日期\n  disabledDate: (time: Date) => boolean\n  // 选中日期后执行的回调，需要与 daterange 或 datetimerange 类型配合使用才生效\n  onPick: (range: { minDate: Date, maxDate: Date }) => void\n  // 快捷选项\n  shortcuts: {\n    text: string\n    onClick: (picker: { $emit: (type: string, date: Date) => void }) => void\n    type: 'startFrom' | 'EndAt'\n    startDate: Date\n    endDate: Date\n  }[]\n}",
      "IType": "type IType = 'date' | 'dates' | 'daterange' | 'datetime' | 'datetimerange' | 'week' | 'month' | 'monthrange' | 'quarter' | 'year' | 'years' | 'yearrange'"
    },
    "events": [
      {
        "name": "blur",
        "description": "Triggers when input loses focus",
        "description_zh": "当 input 失去焦点时触发",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "Triggered when the user confirms the selected value",
        "description_zh": "用户确认选定的值时触发",
        "params": "(value: Date) => void",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Triggers when input gains focus",
        "description_zh": "当 input 获得焦点时触发",
        "params": "() => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "abort",
        "description": "Cancel the upload request",
        "params": "() => void",
        "description_zh": "取消上传请求",
        "value": ""
      },
      {
        "name": "clearFiles",
        "description": "Clear the list of uploaded files (this method cannot be called in before-upload)",
        "params": "() => void",
        "description_zh": "清空已上传的文件列表（该方法不支持在 before-upload 中调用）",
        "value": ""
      },
      {
        "name": "submit",
        "description": "Manually upload a list of files",
        "params": "() => void",
        "description_zh": "手动上传文件列表",
        "value": ""
      }
    ],
    "slots": [],
    "filename": "DatePicker"
  },
  {
    "name": "TinyDropTimes",
    "props": {
      "disabled": {
        "default": " false",
        "value": "",
        "type": "boolean",
        "description": "Disabled state",
        "description_zh": "禁用状态"
      },
      ":end": {
        "default": " 1440",
        "value": "",
        "type": "number",
        "description": "End time, calculated in minutes",
        "description_zh": "结束时间，以分钟计算"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the prompt placeholder text in the input box",
        "description_zh": "设置输入框内的提示占位文本"
      },
      "popper-append-to-body": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "Whether to insert a popover into the body element. If there is a problem with the positioning of the pop-up, you can set this property to false (see Select Component)",
        "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The class class name added to the DropTimes drop-down box",
        "description_zh": "为 DropTimes 下拉弹框添加的 class 类名"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Enter the size of the field",
        "description_zh": "输入框尺寸"
      },
      ":start": {
        "default": " 0",
        "value": "",
        "type": "number",
        "description": "Start time, in minutes",
        "description_zh": "开始时间，以分钟计算"
      },
      ":step": {
        "default": " 15",
        "value": "",
        "type": "number",
        "description": "Intervals, calculated in minutes",
        "description_zh": "间隔时间，以分钟计算"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/drop-times",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/drop-times",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "This event is triggered after the drop-down switches the current time",
        "description_zh": "下拉切换当前时间后触发该事件",
        "params": "(value: string) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "DropTimes"
  },
  {
    "name": "TinyFileUpload",
    "props": {
      "accept": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Restrict file types (this parameter is invalid in thumbnail-mode mode)",
        "description_zh": "限制文件类型（thumbnail-mode 模式下此参数无效）"
      },
      "action": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The uploaded address is a required parameter",
        "description_zh": "上传的地址，必填参数"
      },
      "auto-upload": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to upload files as soon as they are selected",
        "description_zh": "是否在选取文件后立即进行上传"
      },
      "before-add-file": {
        "default": "--",
        "value": "",
        "type": "(callback: () => void) => void",
        "description": "If the hook before file selection returns false or returns a Promise and is rejected, the file will be stopped. If you don't use the above two methods, you can also continue to upload by executing the callback function in the parameters [new in version 3.13.0]",
        "description_zh": "文件选择之前的钩子，若返回 false 或者返回 Promise 且被 reject，则停止添加文件。如果不用以上 2 种方式，也可以通过执行参数中的回调函数继续进行上传【3.13.0版本新增】"
      },
      "before-remove": {
        "default": "--",
        "value": "",
        "type": "(file: IFile, fileList: IFile[]) => boolean | Promise",
        "description": "The checkmark before deleting a file, the parameter is the uploaded file and file list, if it returns false or returns a promise and is rejected, the deletion will be stopped",
        "description_zh": "删除文件前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除"
      },
      "before-upload": {
        "default": "--",
        "value": "",
        "type": "(file: IFile) => boolean | Promise",
        "description": "If the hook before uploading the file is the uploaded file, if it returns false or returns a Promise and is rejected, the upload will be stopped",
        "description_zh": "上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "IData",
        "description": "Extra parameters attached to the upload, parameter customization",
        "description_zh": "上传时附带的额外参数，参数自定义"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "drag": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable drag-and-drop uploads",
        "description_zh": "是否启用拖拽上传"
      },
      "encrypt-config": {
        "default": "--",
        "value": "",
        "type": "IEncryptConfig",
        "description": "Set up watermarks and encryption pop-ups",
        "description_zh": "设置水印和加密弹窗"
      },
      "file-list": {
        "default": "--",
        "value": "",
        "type": "IFileListItem[]",
        "description": "A list of uploaded files",
        "description_zh": "上传的文件列表"
      },
      "headers": {
        "default": "--",
        "value": "",
        "type": "IHeaders",
        "description": "Set the header of the uploaded request; Request information for the headers by setting the headers",
        "description_zh": "设置上传的请求头部;通过设置 headers 为头部请求信息"
      },
      "http-request": {
        "default": "--",
        "value": "",
        "type": "(file: IFile) => Promise",
        "description": "Override the default upload behavior, and you can customize the implementation of the upload; Since TinyVue's official website is a mock upload, the upload cannot be performed",
        "description_zh": "覆盖默认的上传行为，可以自定义上传的实现; 由于 TinyVue 官网为 Mock 上传不能执行上传"
      },
      "is-hidden": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "When the maximum number of uploads is reached, whether to hide the upload button is not hidden by default",
        "description_zh": "达到最大上传个数时，是否隐藏上传按钮，默认不隐藏"
      },
      ":limit": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The maximum number of uploads allowed",
        "description_zh": "最大允许上传个数"
      },
      "list-type": {
        "default": "'text'",
        "value": "",
        "type": "IListType",
        "description": "The type of file list",
        "description_zh": "文件列表的类型"
      },
      ":max-name-length": {
        "default": "20",
        "value": "",
        "type": "number",
        "description": "The maximum number of characters in the file name of a list item is hidden by default if it exceeds 20 characters",
        "description_zh": "列表项的文件名最大字符数，默认超出20个字符隐藏"
      },
      "merge-service": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "If merge-service is set to true and multi-file upload is enabled, the default service will merge multiple upload services into one service upload",
        "description_zh": "配置 merge-service 为 true 且开启多文件上传走默认服务会将多个上传服务合并为一个服务上传"
      },
      "multiple": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether multi-select files are supported",
        "description_zh": "是否支持多选文件"
      },
      "name": {
        "default": "'file'",
        "value": "",
        "type": "string",
        "description": "The name of the uploaded file field",
        "description_zh": "上传的文件字段名"
      },
      "open-download-file": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable Click to download files, it is not enabled by default",
        "description_zh": "是否开启点击下载文件，默认不开启"
      },
      "paste-upload": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the paste key shortcut upload function [new in version 3.11.0]",
        "description_zh": "是否启用粘贴键快捷上传功能【3.11.0版本新增】"
      },
      "re-upload-tip": {
        "default": "--",
        "value": "",
        "type": "(count: number) => string",
        "description": "Customize the prompt text on the left side of the re-upload, which needs to be used with re-uploadable [new in version 3.12.0]",
        "description_zh": "自定义重新上传的左侧提示文字，需要与 re-uploadable 搭配使用【3.12.0版本新增】"
      },
      "re-uploadable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the re-upload function [new in version 3.12.0]",
        "description_zh": "是否启用重新上传功能【3.12.0版本新增】"
      },
      "show-file-list": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display a list of uploaded files",
        "description_zh": "是否显示已上传文件列表"
      },
      "thumb-option": {
        "default": "--",
        "value": "",
        "type": "IThumbOption",
        "description": "This parameter is configured if the display type of the file list is thumb",
        "description_zh": "文件列表的显示类型为 thumb 时的相关配置"
      },
      "with-credentials": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Support for sending cookie credential information",
        "description_zh": "支持发送 cookie 凭证信息"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/file-upload",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/file-upload",
    "typeDetail": {
      "IData": "interface IData {\n  [propsName?: any]: any // 上传参数可自定义\n}",
      "IFile": "interface IFile {\n  name: string // 上传文件名\n  percentage: string // 上传进度百分比\n  raw: File // 原始文件信息\n  size: number // 文件大小\n  status: string // 上传状态\n  uid: string // uid \n}",
      "IEncryptConfig": "interface IEncryptConfig {\n  enabled: boolean // 是否开启设置，默认关闭\n  encrypt: boolean // 是否加密，默认否\n  watermark: string // 水印文字，默认为空\n}",
      "IFileListItem": "interface IFileListItem {\n  name: string // 文件名\n  url: string // 文件url 例如：'https://xxx.cdn.com/xxx.jpg'\n}",
      "IHeaders": "interface IHeaders {\n  'Accept-Language'?: string // 比如等于：'en,zh'\n  Authorization?: string // 比如等于：'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\n  [props: string]: any // headers的属性和属性值自定义\n}",
      "IListType": "type IListType = 'text' | 'picture' | 'picture-card' | 'thumb' | 'saas' // saas为3.14.0版本新增",
      "IThumbOption": "interface IThumbOption {\n  width: number // 弹窗宽度，默认270\n  showDownload: boolean // 是否显示下载按钮，默认false\n  showDel: boolean // 是否显示删除按钮，布尔false\n  showTooltip: boolean // 文件名超出隐藏显示时是否启用tip，默认false\n  popperClass: string // 弹窗列表自定义类名\n  downloadFile: (file) => void // 点击下载按钮执行函数\n  icon: string | Component // 列表结果前 icon ，默认为 'icon-attachment'\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "Events that are triggered when the file status changes, including when a file is added, when the upload is successful, and when the upload fails",
        "description_zh": "文件状态改变时触发的事件，添加文件、上传成功和上传失败时都会被触发",
        "params": "(file: IFile, fileList: IFile[]) => void",
        "value": ""
      },
      {
        "name": "drop-error",
        "description": "The event triggered when the file is dragged and dragged is failed, and is valid when the drag and drop is enabled. file indicates the file information that failed to be uploaded",
        "description_zh": "拖拽文件失败时触发的事件，开启拖拽时有效； file 为上传失败文件信息",
        "params": "(file: IFile) => void",
        "value": ""
      },
      {
        "name": "error",
        "description": "Events that are triggered when a file upload fails; message is the error message event object, file is the current upload failed file information, and fileList is the upload success file array",
        "description_zh": "文件上传失败时触发的事件； message 为错误信息事件对象，file 为当前上传失败文件信息，fileList 为上传成功 file 数组",
        "params": "(message: ProgressEvent, file: IFile, fileList: IFile[]) => void",
        "value": ""
      },
      {
        "name": "exceed",
        "description": "An event that is triggered when the number of files exceeds the limit; files is the uploaded file",
        "description_zh": "文件超出个数限制时触发的事件； files 为上传的文件",
        "params": "(files: File | File[], fileList: IFile[]) => void",
        "value": ""
      },
      {
        "name": "hash-progress",
        "description": "An event triggered by a hash value generated by a file upload; percentage is the progress value generated",
        "description_zh": "文件上传生成 hash 值触发的事件； percentage 为生成的进度值",
        "params": "(percentage: number) => void",
        "value": ""
      },
      {
        "name": "preview",
        "description": "An event that is triggered when you click on an uploaded file in the file list",
        "description_zh": "点击文件列表中已上传的文件时触发的事件",
        "params": "(file: IFile) => void",
        "value": ""
      },
      {
        "name": "progress",
        "description": "events that are triggered when a file is uploaded; message is a progress bar event object",
        "description_zh": "文件上传时触发的事件； message 为进度条事件对象",
        "params": "(message: ProgressEvent, file: IFile) => void",
        "value": ""
      },
      {
        "name": "remove",
        "description": "Events that are triggered when a file is removed from the file list; file is the information about the file that is currently being removed",
        "description_zh": "从文件列表移除文件时触发的事件； file 为当前移除的文件信息",
        "params": "(file: IFile) => void",
        "value": ""
      },
      {
        "name": "success",
        "description": "The event that is triggered when a file is successfully uploaded; res is the response information event object after the upload is successful, file is the currently uploaded file, and fileList is an array of all uploaded files",
        "description_zh": "文件上传成功时触发的事件； res 为上传成功后的响应信息事件对象，file 为当前上传的文件，fileList 为所有上传文件数组",
        "params": "(res: ProgressEvent, file: IFile, fileList: IFile[]) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "abort",
        "description": "Cancel the upload request",
        "params": "() => void",
        "description_zh": "取消上传请求",
        "value": ""
      },
      {
        "name": "clearFiles",
        "description": "Clear the list of uploaded files (this method cannot be called in before-upload)",
        "params": "() => void",
        "description_zh": "清空已上传的文件列表（该方法不支持在 before-upload 中调用）",
        "value": ""
      },
      {
        "name": "submit",
        "description": "Manually upload a list of files",
        "params": "() => void",
        "description_zh": "手动上传文件列表",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "file",
        "description": "Define what the file displays",
        "description_zh": "定义文件显示内容"
      },
      {
        "name": "tip",
        "description": "Prompt caption",
        "description_zh": "提示说明文字"
      },
      {
        "name": "trigger",
        "description": "Triggers the contents of the file selection box",
        "description_zh": "触发文件选择框的内容"
      }
    ],
    "filename": "FileUpload"
  },
  {
    "name": "TinyForm",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "If this parameter is set to true, the disabled attribute on the form component will no longer take effect",
        "description_zh": "是否禁用该表单内的所有表单组件，若设置为 true，则表单内组件上的 disabled 属性不再生效"
      },
      "display-only": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable display-only mode",
        "description_zh": "是否开启仅展示模式"
      },
      "hide-required-asterisk": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to hide the red asterisk next to the label of the required field, the default value is true under the SMB subject",
        "description_zh": "是否隐藏必填字段的标签旁边的红色星号，SMB 主题下默认值为true"
      },
      "inline": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Inline layout mode",
        "description_zh": "行内布局模式"
      },
      "inline-message": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "When validate-type is set to text, whether to display the verification information in the form of inline (message-type is recommended)",
        "description_zh": "当 validate-type 设置为 text 时，是否以行内形式展示校验信息(推荐使用 message-type 设置)"
      },
      "label-align": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "When a required asterisk appears, whether the label text is aligned or not, is valid when label-position is 'right'",
        "description_zh": "当出现必填星号时，标签文本是否对齐，当 label-position 为 'right' 时有效"
      },
      "label-position": {
        "default": "'right'",
        "value": "",
        "type": "right / left / top",
        "description": "The position of the layout of the labels in the form",
        "description_zh": "表单中标签的布局位置"
      },
      "label-suffix": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Label suffix in the form",
        "description_zh": "表单中标签后缀"
      },
      "label-width": {
        "default": "'80px'",
        "value": "",
        "type": "string",
        "description": "The width of the label in the form",
        "description_zh": "表单中标签占位宽度"
      },
      "message-type": {
        "default": "--",
        "value": "",
        "type": "inline / block",
        "description": "When validate-type is set to text, configure the text type error type, which can be configured at the in-line or block-level, and if not set, it will be set to absolute",
        "description_zh": "当 validate-type 设置为 text 时，配置文本类型错误类型，可配置行内或者块级，不设置则为 absolute 定位"
      },
      "model": {
        "default": "--",
        "value": "",
        "type": "{ [prop: string]: any }",
        "description": "Form data object",
        "description_zh": "表单数据对象"
      },
      "overflow-title": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the label is too long or not",
        "description_zh": "标签超长是否显示提示"
      },
      "popper-options": {
        "default": "--",
        "value": "",
        "type": "Popover.IPopperOption",
        "description": "The configuration is transmitted to the popover component when the verification error message is displayed",
        "description_zh": "校验错误提示配置，透传至 Popover 组件"
      },
      "rules": {
        "default": "--",
        "value": "",
        "type": "{ [prop: string]: IFormRules | IFormRules[]  }",
        "description": "Form validation rules",
        "description_zh": "表单验证规则"
      },
      "show-message": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether a verification error message is displayed",
        "description_zh": "是否显示校验错误信息"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "The size of the component in the form is the default size if not set",
        "description_zh": "表单内组件的尺寸，不设置则为默认尺寸"
      },
      "validate-on-rule-change": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to trigger a validation as soon as the rules property is changed",
        "description_zh": "是否在 rules 属性改变后立即触发一次验证"
      },
      "validate-position": {
        "default": "'right'",
        "value": "",
        "type": "IFormPosition",
        "description": "Specifies where the check prompt box is displayed",
        "description_zh": "指定校验提示框显示的位置"
      },
      "validate-type": {
        "default": "'tip'",
        "value": "",
        "type": "tip / text",
        "description": "Check type",
        "description_zh": "校验类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/form",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/form",
    "typeDetail": {
      "IFormPosition": "type IFormPosition = 'top-start' | 'top' | 'top-end' | 'left-start' | 'left' | 'left-end' | 'right-start' | 'right' | 'right-end' | 'bottom-start' | 'bottom' | 'bottom-end'",
      "IFormRules": "// 表单项检验触发时机\ntype IFormTrigger = 'change' | 'blur'\n\ninterface IFormRules {\n  required?: boolean // 是否必填\n  message?: number // 校验错误的提示\n  // 内置的类型校验\n  type?: 'date' | 'dateTime' | 'float' | 'array' | 'string' | 'number' | 'url' | 'time' | 'email' | 'object' | 'boolean' | 'enum'\n  // 校验触发时机， 默认为 ['change', 'blur'] 两种场景都触发，如果仅在主动调用校验方式时触发，可设置为空数组 []。\n  trigger?: IFormTrigger | IFormTrigger[] \n  // 同步检验函数，调用回调传递错误信息。\n  validator?: (\n    rule: IFormInnerRule, // from内部处理后的rule\n    value: any, // 表单model对应的值，根据表单项prop获取\n    callback: (e: Error) => void\n    data: object, // prop和value构造的对象\n    options: object // 检验配置，一般不需要用到\n  ) => void\n  // 异步校验函数，resolve则表示校验成功，reject表示校验失败。\n  asyncValidator?: (\n    rule: IFormInnerRule,\n    value: any,\n    callback: (e: Error) => void\n    data: object,\n    options: object\n  ) => Promise<any>\n}\n\ninterface IFormInnerRule {\n  field: string // 表单项prop\n  fullField: string // 表单项完整prop（嵌套检验时有用）\n  type: string // 内部使用\n}",
      "IFormError": "// 校验错误返回对象\ninterface IFormError {\n  [prop: string]: IFormErrorField[]\n}\ninterface IFormErrorField {\n  message: string // 校验错误提示\n  field: string // 校验失败的prop\n}",
      "IFormValidateMethod": "function IFormValidateMethod(callback: (isValid: boolean, fields: IFormError) => void ): Promise<boolean>",
      "IFormValidateFieldMethod": "function IFormValidateFieldMethod(\n  prop: string | string[],\n  callback: (msg: string, field: IFormError) => void\n): void"
    },
    "events": [
      {
        "name": "validate",
        "description": "Triggered when any form item is verified",
        "description_zh": "任一表单项被校验后触发",
        "params": "(prop: string, isValid: boolean, message: string) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "clearValidate",
        "description": "To remove the verification result of a form item, you can pass in the prop of the form item to be removed, or an array of props, if not, the verification result of the entire form will be removed",
        "params": "(prop: string | string[]) => void",
        "description_zh": "移除表单项的校验结果，可传入待移除的表单项的 prop ，或者 prop 组成的数组，如不传则移除整个表单的校验结果",
        "value": ""
      },
      {
        "name": "resetFields",
        "description": "Reset the entire form, reset all field values to their default values, and remove the validation results",
        "params": "() => void",
        "description_zh": "对整个表单进行重置，将所有字段值重置为初始值并移除校验结果",
        "value": ""
      },
      {
        "name": "validate",
        "description": "The method of verifying the entire form, the parameter is a callback function (the callback function will be called after the verification is completed, and two parameters will be passed in: 1, whether the verification is successful, 2, and the field that failed the verification) returns a promise",
        "params": "IFormValidateMethod",
        "description_zh": "对整个表单进行校验的方法，参数为一个回调函数（该回调函数会在校验结束后被调用，并传入两个参数：1、是否校验成功 2、未通过校验的字段）返回一个 promise",
        "value": ""
      },
      {
        "name": "validateField",
        "description": "The first parameter is a single prop or prop array, and the second parameter is a callback function, which will be called sequentially after each form item is verified",
        "params": "IFormValidateFieldMethod",
        "description_zh": "对部分表单字段进行校验的方法, 第一个参数为单个 prop 或者 prop 数组，第二个参数是回调函数，每个表单项检验完后会依次调用该回调",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "Default slots, custom form content",
        "description_zh": "默认插槽，自定义表单内容"
      }
    ],
    "filename": "Form"
  },
  {
    "name": "TinyFormItem",
    "props": {
      "error": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Form item error text, which changes the form validation status to Error",
        "description_zh": "表单项错误文本，设置该值会使表单验证状态变为 error"
      },
      "extra": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Extra hints for form items",
        "description_zh": "表单项额外提示"
      },
      "inline-message": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the verification information in the form of inline (message-type is recommended)",
        "description_zh": "是否以行内形式展示校验信息(推荐使用 message-type 设置)"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Label text",
        "description_zh": "标签文本"
      },
      "label-width": {
        "default": "'80px'",
        "value": "",
        "type": "string",
        "description": "The width of the form field label",
        "description_zh": "表单域标签的的宽度"
      },
      "message-type": {
        "default": "--",
        "value": "",
        "type": "inline / block",
        "description": "Configure the text type error type, which can be configured at the in-line or block-level, and if you do not configure it, it will be absolute positioning",
        "description_zh": "配置文本类型错误类型，可配置行内或者块级，不配置则为 absolute 定位"
      },
      "prop": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Corresponding to the form field model field, this attribute is required if you want to use form validation",
        "description_zh": "对应表单域 model 字段，如需使用表单校验，该属性是必填的"
      },
      "required": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "If not, it will be automatically generated based on the validation rules",
        "description_zh": "是否必填，如不设置，则会根据校验规则自动生成"
      },
      "rules": {
        "default": "--",
        "value": "",
        "type": "IFormRules",
        "description": "Form item validation rules",
        "description_zh": "表单项验证规则"
      },
      "show-message": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether a verification error message is displayed",
        "description_zh": "是否显示校验错误信息"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "It is used to control the size of the component under this form field, and it is the default size if it is not set",
        "description_zh": "用于控制该表单域下组件的尺寸，不设置则为默认尺寸"
      },
      "validate-debounce": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable check stabilization or not, in the case of continuous input, the verification will not start until the end of the last input",
        "description_zh": "是否开启校验防抖，在连续输入的情况下，会在最后一次输入结束时才开始校验"
      },
      "validate-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "The icon of the verification prompt box, whose type is component",
        "description_zh": "校验提示框的图标，类型为组件"
      },
      "validate-position": {
        "default": "'top-end'",
        "value": "",
        "type": "IFormPosition",
        "description": "Specifies where the check prompt box is displayed",
        "description_zh": "指定校验提示框显示的位置"
      },
      "validate-type": {
        "default": "'tip'",
        "value": "",
        "type": "text / tip",
        "description": "The type of display that the verification prompt is displayed",
        "description_zh": "校验提示显示类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/form",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/form",
    "typeDetail": {
      "IFormPosition": "type IFormPosition = 'top-start' | 'top' | 'top-end' | 'left-start' | 'left' | 'left-end' | 'right-start' | 'right' | 'right-end' | 'bottom-start' | 'bottom' | 'bottom-end'",
      "IFormRules": "// 表单项检验触发时机\ntype IFormTrigger = 'change' | 'blur'\n\ninterface IFormRules {\n  required?: boolean // 是否必填\n  message?: number // 校验错误的提示\n  // 内置的类型校验\n  type?: 'date' | 'dateTime' | 'float' | 'array' | 'string' | 'number' | 'url' | 'time' | 'email' | 'object' | 'boolean' | 'enum'\n  // 校验触发时机， 默认为 ['change', 'blur'] 两种场景都触发，如果仅在主动调用校验方式时触发，可设置为空数组 []。\n  trigger?: IFormTrigger | IFormTrigger[] \n  // 同步检验函数，调用回调传递错误信息。\n  validator?: (\n    rule: IFormInnerRule, // from内部处理后的rule\n    value: any, // 表单model对应的值，根据表单项prop获取\n    callback: (e: Error) => void\n    data: object, // prop和value构造的对象\n    options: object // 检验配置，一般不需要用到\n  ) => void\n  // 异步校验函数，resolve则表示校验成功，reject表示校验失败。\n  asyncValidator?: (\n    rule: IFormInnerRule,\n    value: any,\n    callback: (e: Error) => void\n    data: object,\n    options: object\n  ) => Promise<any>\n}\n\ninterface IFormInnerRule {\n  field: string // 表单项prop\n  fullField: string // 表单项完整prop（嵌套检验时有用）\n  type: string // 内部使用\n}",
      "IFormError": "// 校验错误返回对象\ninterface IFormError {\n  [prop: string]: IFormErrorField[]\n}\ninterface IFormErrorField {\n  message: string // 校验错误提示\n  field: string // 校验失败的prop\n}",
      "IFormValidateMethod": "function IFormValidateMethod(callback: (isValid: boolean, fields: IFormError) => void ): Promise<boolean>",
      "IFormValidateFieldMethod": "function IFormValidateFieldMethod(\n  prop: string | string[],\n  callback: (msg: string, field: IFormError) => void\n): void"
    },
    "events": [
      {
        "name": "validate",
        "description": "Triggered when any form item is verified",
        "description_zh": "任一表单项被校验后触发",
        "params": "(prop: string, isValid: boolean, message: string) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "clearValidate",
        "description": "Removes the validation result of the form item",
        "params": "() => void",
        "description_zh": "移除该表单项的校验结果",
        "value": ""
      },
      {
        "name": "resetField",
        "description": "Reset the form item, reset its value to the initial value, and remove the check result",
        "params": "() => void",
        "description_zh": "对该表单项进行重置，将其值重置为初始值并移除校验结果",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      },
      {
        "name": "error",
        "description": "Error message content",
        "description_zh": "错误提示内容"
      },
      {
        "name": "label",
        "description": "The content of the label text",
        "description_zh": "标签文本的内容"
      }
    ],
    "filename": "FormItem"
  },
  {
    "name": "TinyInput",
    "props": {
      "autocomplete": {
        "default": "'off'",
        "value": "",
        "type": "string",
        "description": "Native autocomplete property",
        "description_zh": "原生 autocomplete 属性"
      },
      "autofocus": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Native attributes, when the page loads, the focus is automatically obtained",
        "description_zh": "原生属性，页面加载时，自动获取焦点"
      },
      "autosize": {
        "default": "false",
        "value": "",
        "type": "boolean | { minRows: number, maxRows: number }",
        "description": "Adaptive content height, only valid for type=\"textarea\". Objects can be passed in, e.g., { minRows: 2, maxRows: 6 }",
        "description_zh": "自适应内容高度，只对 type=\"textarea\" 有效。可传入对象，如，{ minRows: 2, maxRows: 6 }"
      },
      "clearable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether to display a clear button, which does not apply to type=\"textarea\"",
        "description_zh": "是否显示清除按钮，该属性不适用于 type=\"textarea\""
      },
      "cols": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native property, which sets the width, is valid when type = \"textarea\".",
        "description_zh": "原生属性，设置宽度，在 type =\"textarea\" 时有效"
      },
      "counter": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the word count is only valid if type = \"text\" or type = \"textarea\".",
        "description_zh": "是否显示字数统计，只在 type = \"text\" 或 type = \"textarea\" 时有效"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "display-only": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Set the text read-only state",
        "description_zh": "设置文本只读态"
      },
      "display-only-content": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "When the text content area is set to read-only, if it is not used, the value of modelVale will be used as the read-only text",
        "description_zh": "设置只读态时的文本内容区，如果没有则会使用 modelVale 的值作为只读文本"
      },
      "form": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native attributes",
        "description_zh": "原生属性"
      },
      "hover-expand": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Setting the text field to be expanded/collapsed by mouse hover, only works for 'type=textarea', preferably with autosize",
        "description_zh": "设置文本域鼠标悬浮展开/收起，只对 `type=textarea` 有效，最好搭配 autosize 一起使用"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "等价于原生 input aria-label 属性",
        "description_zh": "等价于原生 input aria-label 属性"
      },
      "mask": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Mask function is enabled, and only takes effect in the disabled and display-only states",
        "description_zh": "启用掩码功能，只在 disabled 和 display-only 状态下生效"
      },
      ":max": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Native attributes, set the maximum value",
        "description_zh": "原生属性，设置最大值"
      },
      ":maxlength": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Native property, maximum input length",
        "description_zh": "原生属性，最大输入长度"
      },
      ":memory-space": {
        "default": "5",
        "value": "",
        "type": "number",
        "description": "Set the addMemory method to the maximum number of entries that can be saved",
        "description_zh": "设置 addMemory 方法中，最大能保存条目的数量"
      },
      ":min": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Native attributes, set the minimum value",
        "description_zh": "原生属性，设置最小值"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "Sets the binding value for the text",
        "description_zh": "设置文本的绑定值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生 input name 属性",
        "description_zh": "原生 input name 属性"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Input box placeholder text",
        "description_zh": "输入框占位文本"
      },
      "prefix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Input box header icon",
        "description_zh": "输入框头部图标"
      },
      "readonly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Native attributes, whether they are read-only",
        "description_zh": "原生属性，是否只读"
      },
      "resize": {
        "default": "--",
        "value": "",
        "type": "both / horizontal / vertical / none",
        "description": "Controls whether it can be scaled by the user",
        "description_zh": "控制是否能被用户缩放"
      },
      ":rows": {
        "default": "2",
        "value": "",
        "type": "number",
        "description": "Enter the number of lines in the box, which is valid only for type=\"textarea\".",
        "description_zh": "输入框行数，只对 type=\"textarea\" 有效"
      },
      "show-password": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the switch password icon",
        "description_zh": "是否显示切换密码图标"
      },
      "show-word-limit": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the input word count is only valid when type = \"text\" or type = \"textarea\".",
        "description_zh": "是否显示输入字数统计，只在 type = \"text\" 或 type = \"textarea\" 时有效"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "Enter the size of the box, which is only valid when type!=\"textarea\".",
        "description_zh": "输入框尺寸，只在 type!=\"textarea\" 时有效"
      },
      ":step": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Native property, which sets the legal numerical interval for the input field",
        "description_zh": "原生属性，设置输入字段的合法数字间隔"
      },
      "suffix-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Input box end icon",
        "description_zh": "输入框尾部图标"
      },
      "tabindex": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native property, the tabindex of the input box",
        "description_zh": "原生属性，输入框的 tabindex"
      },
      "type": {
        "default": "'text'",
        "value": "",
        "type": "text / textarea / password / InputHTMLAttributes.type",
        "description": "Set the type property of the input box, which defaults to \"text\", and optionally values \"text\", \"textarea\", and the type values of other native inputs",
        "description_zh": "设置 input 框的 type 属性，默认为 \"text\",可选值 \"text\"，\"textarea\" 和其他 原生 input 的 type 值"
      },
      "validate-event": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the validation of the form is triggered when input",
        "description_zh": "输入时是否触发表单的校验"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/input",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/input",
    "typeDetail": {},
    "events": [
      {
        "name": "blur",
        "description": "Triggers when Input loses focus",
        "description_zh": "在 Input 失去焦点时触发",
        "params": "(event: FocusEvent) => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "Triggers when the Input value changes",
        "description_zh": "在 Input 值改变时触发",
        "params": "(value: string | number) => void",
        "value": ""
      },
      {
        "name": "clear",
        "description": "Triggers when the Clear button generated by the clearable property is clicked",
        "description_zh": "在点击由 clearable 属性生成的清空按钮时触发",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Triggers when Input gets focus",
        "description_zh": "在 Input 获得焦点时触发",
        "params": "(event: FocusEvent) => void",
        "value": ""
      },
      {
        "name": "input",
        "description": "An event is triggered when a value is entered",
        "description_zh": "输入值时触发事件",
        "params": "(event: InputEvent) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "addMemory",
        "description": "How to memorize historical inputs",
        "params": "(value: string) => void",
        "description_zh": "历史输入内容的记忆方法",
        "value": ""
      },
      {
        "name": "blur",
        "description": "Makes the input out of focus",
        "params": "() => void",
        "description_zh": "使 input 失去焦点",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Make input get focus",
        "params": "() => void",
        "description_zh": "使 input 获取焦点",
        "value": ""
      },
      {
        "name": "select",
        "description": "Select the text in input",
        "params": "() => void",
        "description_zh": "选中 input 中的文字",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "append",
        "description": "The content after the input box is only valid for type=\"text\".",
        "description_zh": "输入框后置内容，只对 type=\"text\" 有效"
      },
      {
        "name": "prefix",
        "description": "The content of the input box header is only valid for type=\"text\".",
        "description_zh": "输入框头部内容，只对 type=\"text\" 有效"
      },
      {
        "name": "prepend",
        "description": "The input box is preceded by the content, which is only valid for type=\"text\".",
        "description_zh": "输入框前置内容，只对 type=\"text\" 有效"
      },
      {
        "name": "suffix",
        "description": "The content at the end of the input box is only valid for type=\"text\".",
        "description_zh": "输入框尾部内容，只对 type=\"text\" 有效"
      }
    ],
    "filename": "Input"
  },
  {
    "name": "TinyIpAddress",
    "props": {
      "delimiter": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Set the separator between IP segments, and the default icon is IconDotIpv4",
        "description_zh": "设置 ip 段之间的分隔符，默认图标为 IconDotIpv4 "
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Sets the disabled properties of the text",
        "description_zh": "设置文本的禁用属性"
      },
      "readonly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Sets the read-only properties of the text",
        "description_zh": "设置文本的只读属性"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "The size of the address input box",
        "description_zh": "地址输入框大小"
      },
      "type": {
        "default": "'IPv4'",
        "value": "",
        "type": "IPv4 / IPv6",
        "description": "Set the type of IP address input box",
        "description_zh": "设置 ip 地址输入框的类型"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the binding value of the address input box",
        "description_zh": "设置地址输入框的绑定值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/ip-address",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/ip-address",
    "typeDetail": {},
    "events": [
      {
        "name": "blur",
        "description": "Triggers an event when a text box loses focus",
        "description_zh": "文本框失去焦点时触发事件",
        "params": "(value: string, index: number) => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "The content of the text box changes after the event",
        "description_zh": "文本框内容改变后事件",
        "params": "(value: string) => void",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Triggers an event when a text box gets focus",
        "description_zh": "文本框获取焦点时触发事件",
        "params": "(value: string, index: number) => void",
        "value": ""
      },
      {
        "name": "input",
        "description": "An event is triggered when the text box content is entered",
        "description_zh": "文本框内容输入时触发事件",
        "params": "(event: InputEvent) => void",
        "value": ""
      },
      {
        "name": "select",
        "description": "An event is triggered when the text box content is selected",
        "description_zh": "文本框内容选中时触发事件",
        "params": "(value: string, index: number) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slots, separators between custom IP segments",
        "description_zh": "默认插槽，自定义 ip 段之间的分隔符"
      }
    ],
    "filename": "IpAddress"
  },
  {
    "name": "TinyNumeric",
    "props": {
      "allow-empty": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Content can be cleared",
        "description_zh": "内容可清空"
      },
      "blank": {
        "default": "true",
        "value": "",
        "type": "string",
        "description": "The filter background is set to transparent, and the default value is true",
        "description_zh": "过滤器背景设置为透明，默认值为true"
      },
      "change-compat": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set whether to trigger a change event when the value is changed, except for the addition and subtraction buttons and the direct input value",
        "description_zh": "设置除加减按钮及直接输入数值之外，值改变后是否触发change事件"
      },
      "circulate": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "After reaching the maximum value upwards, whether to start from the minimum value, or vice versa",
        "description_zh": "向上到达最大值后，是否从最小值开始，或反过来"
      },
      "controls": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to use the plus or minus buttons",
        "description_zh": "是否使用加减按钮"
      },
      "controls-position": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The position of the plus and minus buttons, the optional value is right, which means that the plus and minus buttons are all located on the far right",
        "description_zh": "加减按钮位置，可选值为 right，表示加减按钮均位于最右侧"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "disable",
        "description_zh": "禁用"
      },
      "empty-value": {
        "default": "undefined",
        "value": "",
        "type": "any",
        "description": "Set the counter to be clearable, and the binding value of the component after emptying",
        "description_zh": "设置计数器在可清空下，清空后组件的绑定值"
      },
      "format": {
        "default": "--",
        "value": "",
        "type": "INumericFormat",
        "description": "Numeric formatting placements",
        "description_zh": "数字格式化置项"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "组件arial-label属性取值",
        "description_zh": "组件arial-label属性取值"
      },
      ":max": {
        "default": "Infinity",
        "value": "",
        "type": "number",
        "description": "Specifies the maximum value that can be entered into the component, specifies the range of legal values, and supports integers and decimals",
        "description_zh": "规定组件可输入的最大数值，指定合法值的范围，支持整数和小数"
      },
      ":min": {
        "default": "-Infinity",
        "value": "",
        "type": "number",
        "description": "Specifies the minimum value that can be entered into the component, specifies a range of legal values, and supports integers and decimals",
        "description_zh": "规定组件可输入的最小数值，指定合法值的范围，支持整数和小数"
      },
      "mouse-wheel": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the mouse scrolls the wheel to change the value",
        "description_zh": "鼠标滚动滑轮是否改变数值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native attributes",
        "description_zh": "原生属性"
      },
      "placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "Prompt placeholder text in the input box",
        "description_zh": "输入框内的提示占位文本"
      },
      ":precision": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Numerical precision",
        "description_zh": "数值精度"
      },
      "shape": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the input shape='filter, switch to filter mode'",
        "description_zh": "设置输入的shape='filter,切换至过滤器模式'"
      },
      "show-left": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Set the left alignment",
        "description_zh": "设置左对齐"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "计数器尺寸，该属性的可选值为 medium | small | mini",
        "description_zh": "计数器尺寸，该属性的可选值为 medium | small | mini"
      },
      ":step": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "Step",
        "description_zh": "步长"
      },
      "step-strictly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether you can enter only multiples of step",
        "description_zh": "是否只能输入 step 的倍数"
      },
      "string-mode": {
        "default": "--",
        "value": "",
        "type": "Boolean",
        "description": "String mode is used, and it is used when the accuracy exceeds the JS limit",
        "description_zh": "使用字符串模式，精度超过JS限制时使用"
      },
      "unit": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The unit of the numeric value. When setting units, the plus and minus buttons will not be available",
        "description_zh": "数值的单位。在设置单位时，加减按钮将不可用"
      },
      ":v-model": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Sets the default value for the input component, which defaults to 0",
        "description_zh": "设置输入组件的默认值，默认为 0"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/numeric",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/numeric",
    "typeDetail": {
      "INumericFormat": "interface INumericFormat {\n  fraction: 4, // 保留小数位数\n  rounding: 0, // 舍入点，0-9之间的数字，如配置为7时则为6舍7入，默认为5（四舍五入）;配置为0或>9将会进行截取\n  prefix: '$', // 前置标识\n  groupSize: 3, // 整数部分分组间隔，即第一个分组位数\n  secondaryGroupSize: 2, // 整数部分第二级分组间隔，不设置或为0时 自动取groupSize\n  groupSeparator: ',', // 整数部分分组分隔符\n  decimalSeparator: '.', // 小数点符号\n  fractionGroupSize: 0, // 小数部分分组间隔\n  fractionGroupSeparator: '', // 小数分组分隔符\n  suffix: '@' // 后置标识\n}"
    },
    "events": [
      {
        "name": "blur",
        "description": "A callback function that is triggered when a component loses focus",
        "description_zh": "组件失去焦点时触发的回调函数",
        "params": "(event: FocusEvent) => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "A callback function that is triggered when the value of a component changes",
        "description_zh": "组件的值变化时触发的回调函数",
        "params": "(newVal: number | undefined, oldVal: number | undefined) => void",
        "value": ""
      },
      {
        "name": "filter-change",
        "description": "Select the callback function for the filter panel value",
        "description_zh": "选择过滤器面板值的回调函数",
        "params": "(label) => void",
        "value": ""
      },
      {
        "name": "focus",
        "description": "A callback function that is triggered when a component gains focus",
        "description_zh": "组件获得焦点时触发的回调函数",
        "params": "(event: FocusEvent) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "Numeric"
  },
  {
    "name": "TinyPopEditor",
    "props": {
      "auto-lookup": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether data is automatically requested at initialization",
        "description_zh": "初始化时是否自动请求数据"
      },
      "auto-reset": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "After filtering, click Close to automatically reset the filter criteria",
        "description_zh": "筛选后点击关闭是否自动重置筛选条件"
      },
      "before-close": {
        "default": "--",
        "value": "",
        "type": "() => boolean",
        "description": "You can configure a method to close the blocking pop-up window. If the method returns a false value, the interception pop-up window is closed, otherwise it is not blocked",
        "description_zh": "可以配置一个拦截弹窗关闭的方法。如果方法返回 false 值，则拦截弹窗关闭，否则不拦截"
      },
      "before-reset": {
        "default": "--",
        "value": "",
        "type": "() => boolean",
        "description": "Hook function before reset",
        "description_zh": "重置前的钩子函数"
      },
      "conditions": {
        "default": "--",
        "value": "",
        "type": "IConditions[]",
        "description": "If the pop-up panel is configured with a table, set the form query items in the pop-up panel",
        "description_zh": "当弹出面板配置的是表格时，设置弹出面板中的表单查询项"
      },
      "dialog-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Customize the class name of the pop-up window",
        "description_zh": "自定义配置弹窗类名"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Disabled state",
        "description_zh": "禁用状态"
      },
      "draggable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Sets whether the pop-up window is draggable",
        "description_zh": "设置弹出窗口是否可拖动"
      },
      "grid-op": {
        "default": "--",
        "value": "",
        "type": "InstanceType<typeof TinyGrid>['$props']",
        "description": "Set the configuration information of the table component in the pop-up panel",
        "description_zh": "设置弹出面板中表格组件的配置信息"
      },
      "icon": {
        "default": "IconPopup",
        "value": "",
        "type": "Component",
        "description": "Customize the icon at the end of the selection box",
        "description_zh": "自定义选择框尾部图标"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "multi": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Sets whether the data in the pop-up panel can be multi-selected",
        "description_zh": "设置弹出面板中的数据是否可多选"
      },
      "pager-op": {
        "default": "--",
        "value": "",
        "type": "InstanceType<typeof TinyPager>['$props']",
        "description": "Set up the paging configuration",
        "description_zh": "设置分页配置"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Placeholders",
        "description_zh": "占位符"
      },
      "popseletor": {
        "default": "'grid'",
        "value": "",
        "type": "string",
        "description": "Sets the tree or table components that can be displayed in the pop-up panel",
        "description_zh": "设置弹出面板中可显示的树或者表格组件"
      },
      "radio-change-close": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Select whether to close the pop-up window when selected",
        "description_zh": "单选选中后是否关闭弹窗"
      },
      "readonly": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Set whether to read-only, set [3.0] to false, and click the Input box to pop up the selection box",
        "description_zh": "设置是否只读，【3.0】设置为 false 后点击 Input 框可以弹出选择框"
      },
      "remote-search": {
        "default": "--",
        "value": "",
        "type": "IRemoteSearch",
        "description": "Configure remote search",
        "description_zh": "配置远程搜索"
      },
      "resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the full-screen button in the pop-up box",
        "description_zh": "是否显示弹框全屏按钮"
      },
      "selected-box-op": {
        "default": "--",
        "value": "",
        "type": "ISelectedBoxOption",
        "description": "通过属性 selected-box-op 指定 SelectedBox 组件配置,可以把已选表格显示为已选栏",
        "description_zh": "通过属性 selected-box-op 指定 SelectedBox 组件配置,可以把已选表格显示为已选栏"
      },
      "show-clear-btn": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Sets whether to display a clear button on the right side of the input box",
        "description_zh": "设置输入框中右侧是否显示清除按钮"
      },
      "show-history": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "When the pop-up panel is configured with a table, set whether the table is displayed on the History tab",
        "description_zh": "当弹出面板配置的是表格时，设置历史记录标签页是否显示表格"
      },
      "show-pager": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Showcase pagination",
        "description_zh": "展示分页"
      },
      "show-selected-box": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "For multi-select scenes, whether to display the selected table as a selected column",
        "description_zh": "多选场景，是否将已选表格显示为已选栏"
      },
      "size": {
        "default": "''",
        "value": "",
        "type": "medium / small / / mini",
        "description": "size",
        "description_zh": "尺寸"
      },
      "suggest": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Configure suggest to enable the prediction function, which will automatically trigger the prediction query after entering the input box, which needs to be used in conjunction with remote-search",
        "description_zh": "配置 suggest 开启联想功能，输入框输入后自动触发联想查询，该功能需要联合 remote-search 使用"
      },
      "tabindex": {
        "default": "'1'",
        "value": "",
        "type": "string",
        "description": "Set the order of focus gain via the Tab key (valid when the readonly property is set to false)",
        "description_zh": "设置通过 Tab 键获焦及获焦顺序（readonly 属性设置为 false 时有效）"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "Set the field to display the text in the input box, and the displayed text will not be submitted when data is submitted",
        "description_zh": "设置输入框中显示文本的字段，提交数据时，不提交该显示文本"
      },
      "text-split": {
        "default": "'/'",
        "value": "",
        "type": "string",
        "description": "In the case of multiple selections, set the separator when multiple data is to be displayed in the input box",
        "description_zh": "在多选的情况下，设置输入框中要显示多个数据时的分隔符"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the title of the pop-up panel and support internationalization",
        "description_zh": "设置弹出面板的标题，并且支持国际化"
      },
      "trigger": {
        "default": "'default'",
        "value": "",
        "type": "default / cell / row",
        "description": "The pop-up table shows the selected configuration of radio when radio is selected, configurable: default (default), cell (click on the cell to trigger), row (click on the row to trigger)",
        "description_zh": "弹框表格中为单选时 radio 的选中配置，可配置：default（默认）, cell（点击单元格触发）, row（点击行触发）"
      },
      "value-field": {
        "default": "'id'",
        "value": "",
        "type": "string",
        "description": "Set the fields in the input box to submit data",
        "description_zh": "设置输入框要提交数据的字段"
      },
      "value-split": {
        "default": "';'",
        "value": "",
        "type": "string",
        "description": "In the case of multiple selection, set the separator when the input box is to submit multiple data",
        "description_zh": "在多选的情况下，设置输入框要提交多个数据时的分隔符"
      },
      "width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "Set the width of the popup panel in pixels, with a minimum width of 900px when the component's multi = true, and a minimum width of 600px otherwise",
        "description_zh": "设置弹出面板的宽度（单位像素），当组件的 multi = true 时，宽度最小为 900px，否则宽度最小为 600px"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popeditor",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popeditor",
    "typeDetail": {
      "IConditions": "interface IConditions {\n  field: string\n  label: string\n}",
      "IRemoteSearch": "type IRemoteSearch = ({ page: { currentPage: number, pageSize: number }, conditions: { [K in IConditions['field']]: string } }) => void"
    },
    "events": [
      {
        "name": "change",
        "description": "数据发生变化的事件，commitValue 为选中数据的索引（value-field 配置的字段），selectedDatas 为选中的数据项",
        "description_zh": "数据发生变化的事件，commitValue 为选中数据的索引（value-field 配置的字段），selectedDatas 为选中的数据项",
        "params": "(commitValue: number, selectedDatas: Object) => void",
        "value": ""
      },
      {
        "name": "close",
        "description": "An event that is triggered when the pop-up box is closed",
        "description_zh": "弹框关闭时触发的事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "page-change",
        "description": "In the tabular mode pagination switching event, page is the page number of the pagination switch",
        "description_zh": "表格模式分页切换事件，page 为分页切换页码",
        "params": "(page: number) => void",
        "value": ""
      },
      {
        "name": "popup",
        "description": "An event that is triggered when a pop-up box is opened",
        "description_zh": "弹框打开时触发的事件",
        "params": "() => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "footer",
        "description": "Bottom area slots",
        "description_zh": "底部区域插槽"
      },
      {
        "name": "search",
        "description": "Query criteria slot",
        "description_zh": "查询条件插槽"
      }
    ],
    "filename": "PopEditor"
  },
  {
    "name": "TinyPopUpload",
    "props": {
      "accept": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Accept the file type to be uploaded",
        "description_zh": "接受上传的文件类型"
      },
      "action": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Required parameters: Set the upload URL",
        "description_zh": "必选参数，设置上传的地址"
      },
      "before-remove": {
        "default": "--",
        "value": "",
        "type": "(file: IFile) => void",
        "description": "Delete the hook function between files, if it returns false or returns a Promise and is rejected, the deletion will be canceled, otherwise the deletion will be executed; The input parameter is the file information that you click to delete",
        "description_zh": "删除文件之间的钩子函数，若返回 false 或者返回 Promise 且被 reject，则取消删除，反之则执行删除；入参为点击删除的文件信息"
      },
      "before-upload": {
        "default": "--",
        "value": "",
        "type": "(file: IFile) => void",
        "description": "If the hook before uploading the file returns false or returns a Promise and is rejected, the upload will be stopped, otherwise the upload will continue. The input parameter is the uploaded file information",
        "description_zh": "上传文件之前的钩子，若返回 false 或者返回 Promise 且被 reject，则停止上传，反之则继续上传；入参为上传的文件信息"
      },
      "cancel-button-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the text of the cancel button in the file upload pop-up box; The default is Cancel",
        "description_zh": "设置文件上传弹框中取消按钮的文本；默认为 取消"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "ICustomObject",
        "description": "Extra parameters that come with the upload",
        "description_zh": "上传时附带的额外参数"
      },
      "dialog-title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the title of the file upload pop-up box; The default is File Upload",
        "description_zh": "设置文件上传弹框的标题;默认为 文件上传"
      },
      "disabled": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "whether it is disabled or not; Defaults to false",
        "description_zh": "是否禁用;默认为 false"
      },
      "headers": {
        "default": "--",
        "value": "",
        "type": "ICustomObject",
        "description": "Set the header of the uploaded request",
        "description_zh": "设置上传的请求头部"
      },
      "http-request": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "Override the default upload behavior, and you can customize the implementation of the upload",
        "description_zh": "覆盖默认的上传行为，可以自定义上传的实现"
      },
      ":limit": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The maximum number of uploads allowed",
        "description_zh": "最大允许上传个数"
      },
      ":max-upload-file-size": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Maximum upload file size",
        "description_zh": "最大上传文件大小"
      },
      "multiple": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether multi-select files are supported",
        "description_zh": "是否支持多选文件"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the component size",
        "description_zh": "设置组件大小"
      },
      "submit-button-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the text of the submit button in the file upload pop-up box; The default is Start Upload",
        "description_zh": "设置文件上传弹框中提交按钮的文本;默认为 开始上传"
      },
      "upload-button-text": {
        "default": "'选择文件'",
        "value": "",
        "type": "string",
        "description": "Open the text configuration property of the pop-up button",
        "description_zh": "打开弹出框的按钮的文本配置属性"
      },
      "upload-file-type": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "The type of the uploaded file that is validated, e.g. ['.png', '.jpg']",
        "description_zh": "对上传文件进行校验的类型，比如 ['.png', '.jpg']"
      },
      "upload-name": {
        "default": "'file'",
        "value": "",
        "type": "string",
        "description": "The name of the uploaded file field",
        "description_zh": "上传的文件字段名"
      },
      "with-credentials": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Support for sending cookie credential information",
        "description_zh": "支持发送 cookie 凭证信息"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/pop-upload",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/pop-upload",
    "typeDetail": {
      "ICustomObject": "interface ICustomObject {\n  [propName: string]: any // 自定义属性\n}"
    },
    "events": [
      {
        "name": "error",
        "description": "Events that are triggered when a file upload fails; file indicates the information about the file that has failed to be uploaded",
        "description_zh": "文件上传失败时触发的事件； file 为当前上传失败文件信息",
        "params": "(file: IFile) => void",
        "value": ""
      },
      {
        "name": "exceed",
        "description": "An event that is triggered when the number of files exceeds the limit; files is the uploaded file",
        "description_zh": "文件超出个数限制时触发的事件； files 为上传的文件",
        "params": "(files: File | File[], fileList: IFile[]) => void",
        "value": ""
      },
      {
        "name": "progress",
        "description": "An event that is triggered when a file is uploaded",
        "description_zh": "文件上传时触发的事件",
        "params": "(file: IFile) => void",
        "value": ""
      },
      {
        "name": "remove",
        "description": "Events that are triggered when a file is removed from the file list; file is the information about the file that is currently being removed",
        "description_zh": "从文件列表移除文件时触发的事件； file 为当前移除的文件信息",
        "params": "(file: IFile, fileList: IFile[]) => void",
        "value": ""
      },
      {
        "name": "success",
        "description": "The event that is triggered when a file is successfully uploaded; res is the response information event object after the upload is successful, and the file is the currently uploaded file",
        "description_zh": "文件上传成功时触发的事件； res 为上传成功后的响应信息事件对象，file 为当前上传的文件",
        "params": "(res: ProgressEvent, file: IFile) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "PopUpload"
  },
  {
    "name": "TinyRadio",
    "props": {
      "border": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a border",
        "description_zh": "是否显示边框"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "display-only": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is read-only",
        "description_zh": "是否只读状态"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "boolean | number | string",
        "description": "The value of radio when selected",
        "description_zh": "radio 选中时的值"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "boolean | number | string",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native name attribute",
        "description_zh": "原生 name 属性"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "The size of the radio, which is only valid if the border is true",
        "description_zh": "radio 的尺寸，仅在 border 为真时有效"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Radio box text content",
        "description_zh": "单选框文本内容"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "typeDetail": {
      "IRadioGroupOptions": "interface IRadioGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "An event that is triggered when the binding value changes",
        "description_zh": "绑定值变化时触发的事件",
        "params": "(value: boolean | number | string) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "The default slot for radio",
        "description_zh": "radio 的默认插槽"
      }
    ],
    "filename": "Radio"
  },
  {
    "name": "TinyRadioGroup",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable radio groups",
        "description_zh": "是否禁用单选组"
      },
      "display-only": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is read-only",
        "description_zh": "是否只读状态"
      },
      "fill": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "button form to select the background color when selected",
        "description_zh": "按钮形式单选选中时的背景颜色"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string[] | number[]",
        "description": "The radio group binding",
        "description_zh": "单选组绑定值"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "IRadioGroupOptions[]",
        "description": "A list of configurable radio group settings",
        "description_zh": "配置式单选组设置列表"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "Radio group size",
        "description_zh": "单选组尺寸"
      },
      "text-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The color of the text when the button form radio is activated",
        "description_zh": "按钮形式单选激活时的文本颜色"
      },
      "type": {
        "default": "'radio'",
        "value": "",
        "type": "radio / button",
        "description": "The display form of a configurable radio group",
        "description_zh": "配置式单选组的展示形式"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Displays radio groups vertically",
        "description_zh": "垂直显示单选组"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "typeDetail": {
      "IRadioGroupOptions": "interface IRadioGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "An event that is triggered when the binding value changes",
        "description_zh": "绑定值变化时触发的事件",
        "params": "(value: number[] | string[]) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "radio-group 的默认插槽",
        "description_zh": "radio-group 的默认插槽"
      }
    ],
    "filename": "RadioGroup"
  },
  {
    "name": "TinyRadioButton",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "boolean | number | string",
        "description": "Radio 的 value",
        "description_zh": "Radio 的 value"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native name attribute",
        "description_zh": "原生name属性"
      },
      "text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Radio box text content",
        "description_zh": "单选框文本内容"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/radio",
    "typeDetail": {
      "IRadioGroupOptions": "interface IRadioGroupOptions {\n  label: string // 选中时对应的值\n  text?: number // 描述文本\n  events?: {\n    click?: (e: Event) => void // 点击事件\n    change?: (e: Event) => void // change事件\n  }\n}"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "RadioButton"
  },
  {
    "name": "TinyRate",
    "props": {
      "allow-half": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to allow half selection",
        "description_zh": "是否允许半选"
      },
      "colors": {
        "default": "['#FADB14', '#FADB14', '#FADB14']",
        "value": "",
        "type": "[string, string, string]",
        "description": "icon's color array, which corresponds to the three sections of Threshold",
        "description_zh": "icon 的颜色数组，为 Threshold 三个分段所对应的颜色"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is read-only",
        "description_zh": "是否为只读"
      },
      "disabled-void-color": {
        "default": "'#D9D9D9'",
        "value": "",
        "type": "string",
        "description": "The color of the icon is not selected when disabled",
        "description_zh": "禁用状态下未选中 icon 的颜色"
      },
      "disabled-void-icon-class": {
        "default": "'icon-starActive'",
        "value": "",
        "type": "IRateIconName",
        "description": "The name of the icon style that is unselected in the read-only state",
        "description_zh": "只读状态下未选中的图标样式名"
      },
      ":high-threshold": {
        "default": "4",
        "value": "",
        "type": "number",
        "description": "The cut-off value for the high and medium scores, and the value itself is divided into the high score",
        "description_zh": "高分和中等分数的界限值，值本身被划分在高分中"
      },
      "icon-classes": {
        "default": "['icon-starActive', 'icon-starActive', 'icon-starActive']",
        "value": "",
        "type": "[IRateIconName, IRateIconName, IRateIconName]",
        "description": "The icon style name corresponding to the three sections",
        "description_zh": "三个分段对应的图标样式名"
      },
      ":low-threshold": {
        "default": "2",
        "value": "",
        "type": "number",
        "description": "The cut-off values for low and medium scores, and the values themselves are divided into low scores",
        "description_zh": "低分和中等分数的界限值，值本身被划分在低分中"
      },
      ":max": {
        "default": "5",
        "value": "",
        "type": "number",
        "description": "Maximum score",
        "description_zh": "最大分值"
      },
      ":modelValue / v-model": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "radio": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Score other forms of single selection",
        "description_zh": "评分其他形态单选"
      },
      "score-template": {
        "default": "'{value}'",
        "value": "",
        "type": "string",
        "description": "Score display template, with \"{value}\" representing the score",
        "description_zh": "分数显示模板，用“{value}”代表分数"
      },
      "show-score": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to show the current score, show-score and show-text cannot be true at the same time",
        "description_zh": "是否显示当前分数，show-score 和 show-text 不能同时为真"
      },
      "show-text": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display auxiliary text, if true, the text content corresponding to the current score will be selected from the texts array",
        "description_zh": "是否显示辅助文字，若为真，则会从 texts 数组中选取当前分数对应的文字内容"
      },
      "size": {
        "default": "'18px'",
        "value": "",
        "type": "string",
        "description": "Icon font size",
        "description_zh": "图标字体大小"
      },
      "space": {
        "default": "'24px'",
        "value": "",
        "type": "string",
        "description": "The width of each icon",
        "description_zh": "每个图标所占宽度"
      },
      "text-color": {
        "default": "'#666666'",
        "value": "",
        "type": "string",
        "description": "The color of the secondary text",
        "description_zh": "辅助文字的颜色"
      },
      "text-on-bottom": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the corresponding text under the icon",
        "description_zh": "是否在图标下显示对应的文字"
      },
      "texts": {
        "default": "['很差', '差', '一般', '好', '很好']",
        "value": "",
        "type": "string[]",
        "description": "Auxiliary text array, the number of words should be the same as the max property",
        "description_zh": "辅助文字数组，文字的数量应该与max属性一致"
      },
      "void-color": {
        "default": "'#BFBFBF'",
        "value": "",
        "type": "string",
        "description": "The color of the icon is unchecked",
        "description_zh": "未选中 icon 的颜色"
      },
      "void-icon-class": {
        "default": "'icon-starDisable'",
        "value": "",
        "type": "IRateIconName",
        "description": "The icon style name for icon is unchecked",
        "description_zh": "未选中 icon 的图标样式名"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/rate",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/rate",
    "typeDetail": {
      "IRateIconName": "type IRateIconName = 'icon-starDisable' | 'icon-starActive' | 'icon-frown' | 'icon-meh' | 'icon-smile'"
    },
    "events": [
      {
        "name": "change",
        "description": "Triggered when the score is changed",
        "description_zh": "分值改变时触发",
        "params": "(value: number) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "Rate"
  },
  {
    "name": "TinyRichTextEditor",
    "props": {
      "customToolBar": {
        "default": "[]",
        "value": "",
        "type": "Array",
        "description": "传入需要展示的工具栏按钮配置，设置时，显示全量的工具栏。 可配置的项目有：'bold','italic', 'underline', 'strike', 'quote', 'code', 'codeBlock', 'unorderedlist', 'orderedlist', 'taskList', 'subscript', 'superscript', 'undo', 'redo', 'left', 'center', 'right', 'h-box', 'font-size', 'line-height', 'highlight', 'color', 'backgroundColor', 'formatClear', 'link', 'unlink', 'img', 'table'",
        "description_zh": "传入需要展示的工具栏按钮配置，设置时，显示全量的工具栏。 可配置的项目有：'bold','italic', 'underline', 'strike', 'quote', 'code', 'codeBlock', 'unorderedlist', 'orderedlist', 'taskList', 'subscript', 'superscript', 'undo', 'redo', 'left', 'center', 'right', 'h-box', 'font-size', 'line-height', 'highlight', 'color', 'backgroundColor', 'formatClear', 'link', 'unlink', 'img', 'table'"
      },
      "modelValue": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Default rich text content",
        "description_zh": "默认富文本内容"
      },
      "options": {
        "default": "{}",
        "value": "",
        "type": "Object",
        "description": "参见tiptap扩展说明,会覆盖useEditor配置项",
        "description_zh": "参见tiptap扩展说明,会覆盖useEditor配置项"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "Stirng",
        "description": "Placeholder, which is displayed when the v-model is empty",
        "description_zh": "占位符，在v-model为空时展示"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/rich-text-editor",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/rich-text-editor",
    "typeDetail": {},
    "events": [
      {
        "name": "beforeCreate",
        "description": "",
        "description_zh": "",
        "params": "当编辑器视图创造之前，将会触发该事件",
        "value": ""
      },
      {
        "name": "blur",
        "description": "",
        "description_zh": "",
        "params": "当编辑器失去焦点，将会触发该事件",
        "value": ""
      },
      {
        "name": "create",
        "description": "",
        "description_zh": "",
        "params": "当编辑器已经挂载好，将会触发该事件",
        "value": ""
      },
      {
        "name": "destroy",
        "description": "",
        "description_zh": "",
        "params": "当编辑器编辑器销毁了，将会触发该事件",
        "value": ""
      },
      {
        "name": "focus",
        "description": "",
        "description_zh": "",
        "params": "当编辑器获得焦点，将会触发该事件",
        "value": ""
      },
      {
        "name": "selectionUpdate",
        "description": "",
        "description_zh": "",
        "params": "当编辑器选区改变，将会触发该事件",
        "value": ""
      },
      {
        "name": "transaction",
        "description": "",
        "description_zh": "",
        "params": "当编辑器状态改变，将会触发该事件。",
        "value": ""
      },
      {
        "name": "update",
        "description": "",
        "description_zh": "",
        "params": "当编辑器状态改变完成后，将会触发该事件",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "toolBar",
        "description": "toolBar添加按钮,会传出editor实例,详情见tiptap",
        "description_zh": "toolBar添加按钮,会传出editor实例,详情见tiptap"
      }
    ],
    "filename": "RichTextEditor"
  },
  {
    "name": "TinySearch",
    "props": {
      "clearable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the Clear icon button",
        "description_zh": "是否显示清空图标按钮"
      },
      "is-enter-search": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "是否在按下键盘 Enter 键时触发 search 事件",
        "description_zh": "是否在按下键盘 Enter 键时触发 search 事件"
      },
      ":maxlength": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The native property of the input box, limiting the maximum number of input characters [new in 3.14.0]",
        "description_zh": "input 框的原生属性，限制最大输入字符数【3.14.0新增】"
      },
      "mini": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is mini mode or not, when configured to true, it will be displayed as a round button with an icon by default, which will be expanded after clicking",
        "description_zh": "是否为迷你模式，配置为 true 时，默认显示为一个带图标的圆形按钮，点击后展开"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Search for the prompt placeholder text in the input box",
        "description_zh": "搜索输入框内的提示占位文本"
      },
      "search-types": {
        "default": "[]",
        "value": "",
        "type": "ITypeValue[]",
        "description": "A list of options for the search type",
        "description_zh": "搜索类型的选项列表"
      },
      "transparent": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is transparent mode, which is generally used in scenes with backgrounds",
        "description_zh": "是否为透明模式，此模式一般用在带有背景的场景"
      },
      "type-value": {
        "default": "--",
        "value": "",
        "type": "ITypeValue",
        "description": "The default value for the search type. The default is the first item of the search type [new in 3.11.0]",
        "description_zh": "搜索类型的默认值。默认为搜索类型的第一项【3.11.0新增】"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Bind a search value",
        "description_zh": "绑定搜索值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/search",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/search",
    "typeDetail": {
      "ITypeValue": "interface ITypeValue {\n  text: string\n  value: number\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "Enter a callback function that is triggered when it completes; value is the search type, and input is the current input value",
        "description_zh": "输入完成时触发的回调函数； value 为搜索类型，input 为当前输入值",
        "params": "(value: ITypeValue, input: string) => void",
        "value": ""
      },
      {
        "name": "clear",
        "description": "The callback function triggered by the clear value",
        "description_zh": "清空值触发的回调函数",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "input",
        "description": "Enter a callback function that is triggered in real time; input is the current input value, value is the search type [new in 3.9.1]",
        "description_zh": "输入实时触发的回调函数； input 为当前输入值，value 为搜索类型【3.9.1新增】",
        "params": "(input: string, value: ITypeValue) => void",
        "value": ""
      },
      {
        "name": "search",
        "description": "In the expansion mode, the callback function triggered when you click the search button; value is the search type, and input is the current input value",
        "description_zh": "展开模式下，点击搜索按钮时触发的回调函数； value 为搜索类型，input 为当前输入值",
        "params": "(value: ITypeValue, input: string) => void",
        "value": ""
      },
      {
        "name": "select",
        "description": "a callback function that is triggered when the type is switched; value is the search type",
        "description_zh": "切换类型时触发的回调函数； value 为搜索类型",
        "params": "(value: ITypeValue) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "poplist",
        "description": "Search for a pop-up list of slots",
        "description_zh": "搜索的弹出列表插槽"
      },
      {
        "name": "prefix",
        "description": "Left slot",
        "description_zh": "左侧插槽"
      },
      {
        "name": "text",
        "description": "Default search type slot",
        "description_zh": "默认搜索类型插槽"
      }
    ],
    "filename": "Search"
  },
  {
    "name": "TinySelect",
    "props": {
      "all-text": {
        "default": "--",
        "value": "",
        "type": "string ",
        "description": "When you display all in the drop-down drop-down, you can customize all the displayed text. If not specified, All is displayed by default",
        "description_zh": "当下拉中显示全部时，自定义全部的显示文本。不指定时，则默认显示\"全部\""
      },
      "allow-copy": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to copy the contents of the input box is applicable to single-select searchable scenarios",
        "description_zh": "是否允许复制输入框的内容，适用单选可搜索场景"
      },
      "allow-create": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to allow the creation of new entries needs to be used in conjunction with filterables. If the search field is not in the list of options, it can be created as a new option",
        "description_zh": "是否允许创建新条目，需配合 filterable 使用。若搜索字段不在选项列表中，可创建为新的选项"
      },
      "autocomplete": {
        "default": "'off'",
        "value": "",
        "type": "string ",
        "description": "The native autocomplete property of the input box",
        "description_zh": "输入框的原生 autocomplete 属性"
      },
      "cache-op": {
        "default": "<pre>\n{\n  key: '',\n  sortBy: 'frequency',\n  sort: 'desc',\n  dataKey: 'value',\n  highlightClass: \n  'memorize-highlight',\n  highlightNum: Infinity,\n  cacheNum: Infinity,\n  serialize: JSON.stringify\n  deserialize: JSON.parse\n}\n</pre>",
        "value": "",
        "type": "ICacheOp ",
        "description": "Enable the configuration of the local cache option (continue to store sorting based on the number of times the user clicked on the selection, the last time to save the selection)",
        "description_zh": "启用本地缓存已选项的功能配置（根据用户点击选择的次数、最后时间继续存储排序)"
      },
      "clear-no-match-value": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether or not auto-clear the value of the match could not be found in options",
        "description_zh": "是否自动清空无法在 options 中找到匹配项的值"
      },
      "clearable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to enable the one-click clearing function",
        "description_zh": "是否启用一键清除的功能"
      },
      "click-expend": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Click to expand or collapse the infully displayed option. For multi-select only",
        "description_zh": "点击可展开或收起显示不全的选项。仅用于多选"
      },
      "collapse-tags": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to collapse multiple labels. Only multi-select is applicable",
        "description_zh": "是否将多个标签折叠显示。仅适用多选"
      },
      "copyable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to enable the one-click replication feature. Click the copy button to copy the text content of all tags with one click and separate them with commas, which is only applicable to multiple selection",
        "description_zh": "是否启用一键复制的功能。点击复制按钮一键复制所有标签的文本内容并以逗号分隔，仅适用于多选"
      },
      "default-first-option": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to enable the ability to press Enter to select the first match. Requires use with filterable or remote",
        "description_zh": "是否启用按 Enter 键选择第一个匹配项的功能。需配合 filterable 或 remote 使用"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "dropdown-icon": {
        "default": "--",
        "value": "",
        "type": "Component ",
        "description": "Customize the drop-down icon",
        "description_zh": "自定义下拉图标"
      },
      "dropdown-style": {
        "default": "--",
        "value": "",
        "type": "String ",
        "description": "Customize the drop-down option style",
        "description_zh": "自定义下拉选项样式"
      },
      "filter-method": {
        "default": "--",
        "value": "",
        "type": "(query: string) => void ",
        "description": "Customize the filtering method",
        "description_zh": "自定义过滤方法"
      },
      "filterable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether it is searchable",
        "description_zh": "是否可搜索"
      },
      "grid-op": {
        "default": "--",
        "value": "",
        "type": "IGridOption ",
        "description": "When you drop down a table, the configuration of the built-in table is the same as that of the Grid component. It needs to be used in conjunction with the render-type attribute",
        "description_zh": "下拉表格时，内置表格的配置，用法同 Grid 组件。需结合 render-type 属性使用"
      },
      "init-label": {
        "default": "--",
        "value": "",
        "type": "string ",
        "description": "Use the <code>init-label</code> property to set the initialized <code>label </code>value to be displayed when remote search or nested sloth load data is not obtained.",
        "description_zh": "通过 <code>init-label</code> 属性设置远程搜索或者嵌套树懒加载数据未获取到时显示的初始化 <code>label </code>值。"
      },
      "input-box-type": {
        "default": "'input'",
        "value": "",
        "type": "input / underline ",
        "description": "The type of display of the input box",
        "description_zh": "输入框的显示类型"
      },
      "is-drop-inherit-width": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Check whether the width of the drop-down box is the same as that of the input box. By default, when the width of the input box is exceeded, the content is stretched out",
        "description_zh": "下拉弹框的宽度是否跟输入框保持一致。默认超出输入框宽度时由内容撑开"
      },
      "loading": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether or not it is loading, it is applicable to remote search scenarios",
        "description_zh": "是否加载中，适用于远程搜索场景"
      },
      "loading-text": {
        "default": "'加载中'",
        "value": "",
        "type": "string ",
        "description": "The text that is displayed when loaded remotely",
        "description_zh": "远程加载时显示的文本"
      },
      "max-visible-rows": {
        "default": "1",
        "value": "",
        "type": "number ",
        "description": "The default maximum number of rows for multiple rows is automatically hidden",
        "description_zh": "多行默认最大显示行数，超出后选项自动隐藏"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number | Array<string|number> ",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "multiple": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether multiple options are allowed",
        "description_zh": "是否允许选择多个选项"
      },
      "multiple-limit": {
        "default": "0",
        "value": "",
        "type": "number ",
        "description": "The maximum number of items that can be selected when multiple selections is 0 by default",
        "description_zh": "多选时最多可选择的个数，默认为 0 不限制"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string ",
        "description": "输入框的原生 name 属性",
        "description_zh": "输入框的原生 name 属性"
      },
      "no-data-text": {
        "default": "'暂无相关数据'",
        "value": "",
        "type": "string ",
        "description": "The text that appears when the picklist is empty, can also be set using the empty slot",
        "description_zh": "选项列表为空时显示的文本，也可以使用 empty 插槽设置"
      },
      "no-match-text": {
        "default": "'无匹配数据'",
        "value": "",
        "type": "string ",
        "description": "The text that is displayed when the search criteria do not match, can also be set using the empty slot",
        "description_zh": "搜索条件无匹配时显示的文本，也可以使用 empty 插槽设置"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "IOption[] ",
        "description": "Option list configuration, you don't need to configure tiny-option after use",
        "description_zh": "选项列表配置，使用后不需要再配置 tiny-option"
      },
      "placeholder": {
        "default": "'请选择'",
        "value": "",
        "type": "string ",
        "description": "Placeholders",
        "description_zh": "占位符"
      },
      "placement": {
        "default": "'bottom-start'",
        "value": "",
        "type": "IPlacement ",
        "description": "The drop-down pop-up box is relative to the pop-up position of the trigger source",
        "description_zh": "下拉弹框相对于触发源的弹出位置"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean ",
        "description": "Whether to insert the DOM element of the popover box into the body element",
        "description_zh": "是否将弹出框的 dom 元素插入至 body 元素"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string ",
        "description": "Customize the class name of the drop-down box to customize the style",
        "description_zh": "自定义下拉框的类名，用于自定义样式"
      },
      "remote": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether it is a remote search",
        "description_zh": "是否为远程搜索"
      },
      "remote-method": {
        "default": "--",
        "value": "",
        "type": "(query:string) => void ",
        "description": "Methods of remote search",
        "description_zh": "远程搜索的方法"
      },
      "render-type": {
        "default": "--",
        "value": "",
        "type": "tree / grid ",
        "description": "渲染为下拉表格或下拉树,需结合 grid-op / tree-op 使用",
        "description_zh": "渲染为下拉表格或下拉树,需结合 grid-op / tree-op 使用"
      },
      "reserve-keyword": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "If you select multiple searches, whether to retain the current search terms even after selecting an option",
        "description_zh": "多选可搜索时，是否在选中一个选项后仍然保留当前的搜索关键词"
      },
      "searchable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to enable drop-down panel search",
        "description_zh": "是否启用下拉面板搜索"
      },
      "show-all-text-tag": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "After specifying that the multi-select mode is all selected, in the input box, whether to display only the tag specified by all-text. The default value is <code>false</code>, and all options are cycled through the input box.",
        "description_zh": "指定多选模式全选后，在输入框中，是否只显示 all-text 指定的Tag。 默认值为 <code>false</code>，所有选项循环显示在输入框。"
      },
      "show-alloption": {
        "default": "true",
        "value": "",
        "type": "boolean ",
        "description": "Whether or not to show the \"Select All\" option",
        "description_zh": "是否展示 “全选” 选项"
      },
      "show-empty-image": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to display an empty data image",
        "description_zh": "是否显示空数据图片"
      },
      "show-limit-text": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "When the multi-check box is displayed, when the number of records is restricted, the number of records and the proportion of the total number of restricted records are selected. This property takes precedence over the <code>show-proportion</code> property.",
        "description_zh": "是否展示多选框开启多选限制选择数量时，选中条数和限制总条数的占比的文字提示。 该属性的优先级大于<code>show-proportion</code> 属性。"
      },
      "show-proportion": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to display a text prompt that indicates the proportion of the number of records and the total number of records in the multi-check box",
        "description_zh": "是否展示多选框选中条数和总条数的占比的文字提示"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini ",
        "description": "Enter the size of the field.",
        "description_zh": "输入框尺寸。"
      },
      "tag-selectable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether the label in the input box can be copied by mouse selection",
        "description_zh": "输入框中的标签是否可通过鼠标选中复制"
      },
      "tag-type": {
        "default": "--",
        "value": "",
        "type": "success / info / warning / danger ",
        "description": "Label type, only multi-select is applicable. When using the Aurora theme, set the property to info",
        "description_zh": "标签类型，仅多选适用。使用 aurora 主题时设置该属性为 info"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string ",
        "description": "Displays the value field",
        "description_zh": "显示值字段"
      },
      "text-split": {
        "default": "','",
        "value": "",
        "type": "string ",
        "description": "Customize the separator of the copied text, which needs to be used in conjunction with the copyable attribute",
        "description_zh": "自定义复制文本的分隔符，需结合 copyable 属性使用"
      },
      "top-create": {
        "default": "--",
        "value": "",
        "type": "boolean ",
        "description": "Whether to display a new button at the top of the drop-down box, clicking the button will throw a top-create-click event, and you can customize some behaviors in the event",
        "description_zh": "是否显示下拉框顶部新增按钮，点击按钮会抛出一个 top-create-click 事件，可以在事件中自定义一些行为"
      },
      "tree-op": {
        "default": "--",
        "value": "",
        "type": "ITreeOption ",
        "description": "When you drop down a tree, the configuration of the built-in tree component is the same as that of the tree component. It needs to be used in conjunction with the render-type attribute",
        "description_zh": "下拉树时，内置树组件的配置，用法同 Tree 组件。需结合 render-type 属性使用"
      },
      "value-field": {
        "default": "'value'",
        "value": "",
        "type": "string ",
        "description": "Binding value field",
        "description_zh": "绑定值字段"
      },
      "value-key": {
        "default": "'value'",
        "value": "",
        "type": "string ",
        "description": "As a key name that is uniquely identified by value, it is required if the binding value is an object type",
        "description_zh": "作为 value 唯一标识的键名，绑定值为对象类型时必填"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/select",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/select",
    "typeDetail": {
      "IOption": "interface IOption {\n  value?: string | number\n  label?: string\n  disabled?: boolean\n  icon?: Component\n  required?:boolean\n}",
      "ICacheOp": "interface ICacheItem {\n  frequency: number\n  key: string\n  time: number\n}\n\ninterface ICacheOp {\n  key: string // 本地缓存的唯一 key 值\n  sortBy?: 'frequency' | 'time' // 排序的字段，默认 frequency (频次)\n  sort?: 'desc' | 'asc' // 排序方式，默认 desc (降序)\n  dataKey?: string // 数据中的唯一标识的 key 名称,默认 value\n  highlightClass?: string // 个性化高亮 class 名称，默认：memorize-highlight\n  highlightNum?: number // 高亮个性化的条数,默认：Infinity\n  cacheNum?: number // 存储个性化的条数,默认：Infinity\n  serialize?: ()=> string  // 本地存储序列化方法,默认：JSON.stringify\n  deserialize?: ()=> ICacheItem[] // 本地存储序反列化方法，默认：JSON.parse\n}",
      "IGridOption": "interface IGridOption {\n  data: any[]    // 表格数据，用法同 Grid\n  columns: any[] // 列配置，用法同 Grid\n}",
      "ITreeOption": "interface ITreeNode {\n  label: string         // 默认树节点的文本字段\n  id: number|string     // 树节点唯一标识\n  children: ITreeNode[] // 子节点\n}\n\ninterface ITreeOption {\n  data: ITreeNode[] // 树数据，用法同 Tree\n}",
      "IPlacement": "type IPlacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [
      {
        "name": "blur",
        "description": "Listen for an out-of-focus event in the input box",
        "description_zh": "监听输入框失去焦点事件",
        "params": "(event:MouseEvent) => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "Listen for binding value change events",
        "description_zh": "监听绑定值变更事件",
        "params": "(value:string|number|Array, list:Array) => void",
        "value": ""
      },
      {
        "name": "clear",
        "description": "Listen for one-click clearing events",
        "description_zh": "监听一键清除事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Listen to the input box to get the focus event",
        "description_zh": "监听输入框获取焦点事件",
        "params": "(event:MouseEvent) => void",
        "value": ""
      },
      {
        "name": "remove-tag",
        "description": "Listen for the removal of tags when multi-selection",
        "description_zh": "监听多选时移除标签事件",
        "params": "(tag:string|number) => void",
        "value": ""
      },
      {
        "name": "top-create-click",
        "description": "Listen for a new button click event at the top, which is used with the top-create property",
        "description_zh": "监听顶部新增按钮点击事件，同 top-create 属性一起使用",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "visible-change",
        "description": "Listen to the display and hiding status of the drop-down pop-up box",
        "description_zh": "监听下拉弹框的显示隐藏状态",
        "params": "(status:boolean) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "blur",
        "description": "Makes the input box lose focus",
        "params": "() => void",
        "description_zh": "使输入框失去焦点",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Makes the input box get focus",
        "params": "() => void",
        "description_zh": "使输入框获取焦点",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "optionDefault slot",
        "description_zh": "选项默认插槽"
      },
      {
        "name": "empty",
        "description": "Empty data slots",
        "description_zh": "空数据插槽"
      },
      {
        "name": "footer",
        "description": "Pull down the slot at the bottom of the pop-up box",
        "description_zh": "下拉弹框底部插槽"
      },
      {
        "name": "prefix",
        "description": "Input box prefix slot",
        "description_zh": "输入框前缀插槽"
      },
      {
        "name": "reference",
        "description": "Trigger the source slot",
        "description_zh": "触发源插槽"
      }
    ],
    "filename": "Select"
  },
  {
    "name": "TinyBaseSelect",
    "props": {
      "all-text": {
        "default": "--",
        "value": "",
        "type": "string ",
        "description": "When you display all in the drop-down drop-down, you can customize all the displayed text. If not specified, All is displayed by default",
        "description_zh": "当下拉中显示全部时，自定义全部的显示文本。不指定时，则默认显示\"全部\""
      },
      "allow-copy": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to copy the contents of the input box is applicable to single-select searchable scenarios",
        "description_zh": "是否允许复制输入框的内容，适用单选可搜索场景"
      },
      "allow-create": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to allow the creation of new entries needs to be used in conjunction with filterables. If the search field is not in the list of options, it can be created as a new option",
        "description_zh": "是否允许创建新条目，需配合 filterable 使用。若搜索字段不在选项列表中，可创建为新的选项"
      },
      "autocomplete": {
        "default": "'off'",
        "value": "",
        "type": "string ",
        "description": "The native autocomplete property of the input box",
        "description_zh": "输入框的原生 autocomplete 属性"
      },
      "cache-op": {
        "default": "<pre>\n{\n  key: '',\n  sortBy: 'frequency',\n  sort: 'desc',\n  dataKey: 'value',\n  highlightClass: \n  'memorize-highlight',\n  highlightNum: Infinity,\n  cacheNum: Infinity,\n  serialize: JSON.stringify\n  deserialize: JSON.parse\n}\n</pre>",
        "value": "",
        "type": "ICacheOp ",
        "description": "Enable the configuration of the local cache option (continue to store sorting based on the number of times the user clicked on the selection, the last time to save the selection)",
        "description_zh": "启用本地缓存已选项的功能配置（根据用户点击选择的次数、最后时间继续存储排序)"
      },
      "clear-no-match-value": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether or not auto-clear the value of the match could not be found in options",
        "description_zh": "是否自动清空无法在 options 中找到匹配项的值"
      },
      "clearable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to enable the one-click clearing function",
        "description_zh": "是否启用一键清除的功能"
      },
      "click-expend": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Click to expand or collapse the infully displayed option. For multi-select only",
        "description_zh": "点击可展开或收起显示不全的选项。仅用于多选"
      },
      "collapse-tags": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to collapse multiple labels. Only multi-select is applicable",
        "description_zh": "是否将多个标签折叠显示。仅适用多选"
      },
      "copyable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to enable the one-click replication feature. Click the copy button to copy the text content of all tags with one click and separate them with commas, which is only applicable to multiple selection",
        "description_zh": "是否启用一键复制的功能。点击复制按钮一键复制所有标签的文本内容并以逗号分隔，仅适用于多选"
      },
      "default-first-option": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to enable the ability to press Enter to select the first match. Requires use with filterable or remote",
        "description_zh": "是否启用按 Enter 键选择第一个匹配项的功能。需配合 filterable 或 remote 使用"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "dropdown-icon": {
        "default": "--",
        "value": "",
        "type": "Component ",
        "description": "Customize the drop-down icon",
        "description_zh": "自定义下拉图标"
      },
      "dropdown-style": {
        "default": "--",
        "value": "",
        "type": "String ",
        "description": "Customize the drop-down option style",
        "description_zh": "自定义下拉选项样式"
      },
      "filter-method": {
        "default": "--",
        "value": "",
        "type": "(query: string) => void ",
        "description": "Customize the filtering method",
        "description_zh": "自定义过滤方法"
      },
      "filterable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether it is searchable",
        "description_zh": "是否可搜索"
      },
      "input-box-type": {
        "default": "'input'",
        "value": "",
        "type": "input / underline ",
        "description": "The type of display of the input box",
        "description_zh": "输入框的显示类型"
      },
      "is-drop-inherit-width": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Check whether the width of the drop-down box is the same as that of the input box. By default, when the width of the input box is exceeded, the content is stretched out",
        "description_zh": "下拉弹框的宽度是否跟输入框保持一致。默认超出输入框宽度时由内容撑开"
      },
      "loading": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether or not it is loading, it is applicable to remote search scenarios",
        "description_zh": "是否加载中，适用于远程搜索场景"
      },
      "loading-text": {
        "default": "'加载中'",
        "value": "",
        "type": "string ",
        "description": "The text that is displayed when loaded remotely",
        "description_zh": "远程加载时显示的文本"
      },
      "max-visible-rows": {
        "default": "1",
        "value": "",
        "type": "number ",
        "description": "The default maximum number of rows for multiple rows is automatically hidden",
        "description_zh": "多行默认最大显示行数，超出后选项自动隐藏"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number | Array<string|number> ",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "multiple": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether multiple options are allowed",
        "description_zh": "是否允许选择多个选项"
      },
      "multiple-limit": {
        "default": "0",
        "value": "",
        "type": "number ",
        "description": "The maximum number of items that can be selected when multiple selections is 0 by default",
        "description_zh": "多选时最多可选择的个数，默认为 0 不限制"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string ",
        "description": "输入框的原生 name 属性",
        "description_zh": "输入框的原生 name 属性"
      },
      "no-data-text": {
        "default": "'暂无相关数据'",
        "value": "",
        "type": "string ",
        "description": "The text that appears when the picklist is empty, can also be set using the empty slot",
        "description_zh": "选项列表为空时显示的文本，也可以使用 empty 插槽设置"
      },
      "no-match-text": {
        "default": "'无匹配数据'",
        "value": "",
        "type": "string ",
        "description": "The text that is displayed when the search criteria do not match, can also be set using the empty slot",
        "description_zh": "搜索条件无匹配时显示的文本，也可以使用 empty 插槽设置"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "IOption[] ",
        "description": "Option list configuration, you don't need to configure tiny-option after use",
        "description_zh": "选项列表配置，使用后不需要再配置 tiny-option"
      },
      "placeholder": {
        "default": "'请选择'",
        "value": "",
        "type": "string ",
        "description": "Placeholders",
        "description_zh": "占位符"
      },
      "placement": {
        "default": "'bottom-start'",
        "value": "",
        "type": "IPlacement ",
        "description": "The drop-down pop-up box is relative to the pop-up position of the trigger source",
        "description_zh": "下拉弹框相对于触发源的弹出位置"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean ",
        "description": "Whether to insert the DOM element of the popover box into the body element",
        "description_zh": "是否将弹出框的 dom 元素插入至 body 元素"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string ",
        "description": "Customize the class name of the drop-down box to customize the style",
        "description_zh": "自定义下拉框的类名，用于自定义样式"
      },
      "remote": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether it is a remote search",
        "description_zh": "是否为远程搜索"
      },
      "remote-method": {
        "default": "--",
        "value": "",
        "type": "(query:string) => void ",
        "description": "Methods of remote search",
        "description_zh": "远程搜索的方法"
      },
      "reserve-keyword": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "If you select multiple searches, whether to retain the current search terms even after selecting an option",
        "description_zh": "多选可搜索时，是否在选中一个选项后仍然保留当前的搜索关键词"
      },
      "searchable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to enable drop-down panel search",
        "description_zh": "是否启用下拉面板搜索"
      },
      "show-alloption": {
        "default": "true",
        "value": "",
        "type": "boolean ",
        "description": "Whether or not to show the \"Select All\" option",
        "description_zh": "是否展示 “全选” 选项"
      },
      "show-empty-image": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to display an empty data image",
        "description_zh": "是否显示空数据图片"
      },
      "show-limit-text": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "When the multi-check box is displayed, when the number of records is restricted, the number of records and the proportion of the total number of restricted records are selected. The property takes precedence over the <code>show-proportion</code> property, while setting it only",
        "description_zh": "是否展示多选框开启多选限制选择数量时，选中条数和限制总条数的占比的文字提示。 该属性的优先级大于<code>show-proportion</code> 属性，同时设置只"
      },
      "show-proportion": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether to display a text prompt that indicates the proportion of the number of records and the total number of records in the multi-check box",
        "description_zh": "是否展示多选框选中条数和总条数的占比的文字提示"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini ",
        "description": "Enter the size of the field.",
        "description_zh": "输入框尺寸。"
      },
      "tag-selectable": {
        "default": "false",
        "value": "",
        "type": "boolean ",
        "description": "Whether the label in the input box can be copied by mouse selection",
        "description_zh": "输入框中的标签是否可通过鼠标选中复制"
      },
      "tag-type": {
        "default": "--",
        "value": "",
        "type": "success / info / warning / danger ",
        "description": "Label type, only multi-select is applicable. When using the Aurora theme, set the property to info",
        "description_zh": "标签类型，仅多选适用。使用 aurora 主题时设置该属性为 info"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string ",
        "description": "Displays the value field",
        "description_zh": "显示值字段"
      },
      "text-split": {
        "default": "','",
        "value": "",
        "type": "string ",
        "description": "Customize the separator of the copied text, which needs to be used in conjunction with the copyable attribute",
        "description_zh": "自定义复制文本的分隔符，需结合 copyable 属性使用"
      },
      "top-create": {
        "default": "--",
        "value": "",
        "type": "boolean ",
        "description": "Whether to display a new button at the top of the drop-down box, clicking the button will throw a top-create-click event, and you can customize some behaviors in the event",
        "description_zh": "是否显示下拉框顶部新增按钮，点击按钮会抛出一个 top-create-click 事件，可以在事件中自定义一些行为"
      },
      "value-field": {
        "default": "'value'",
        "value": "",
        "type": "string ",
        "description": "Binding value field",
        "description_zh": "绑定值字段"
      },
      "value-key": {
        "default": "'value'",
        "value": "",
        "type": "string ",
        "description": "As a key name that is uniquely identified by value, it is required if the binding value is an object type",
        "description_zh": "作为 value 唯一标识的键名，绑定值为对象类型时必填"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/base-select",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/base-select",
    "typeDetail": {},
    "events": [
      {
        "name": "",
        "description": "(event:MouseEvent) => void ",
        "description_zh": "（event：MouseEvent） => 无效",
        "params": "blur",
        "value": ""
      },
      {
        "name": "",
        "description": "(value:string|number|Array<string|number>, list:Array<IOption|ITreeNode>) => void ",
        "description_zh": "（value：string|number|Array<string|number>， list：Array<IOption|ITreeNode>） => void",
        "params": "change",
        "value": ""
      },
      {
        "name": "",
        "description": "() => void ",
        "description_zh": "（） => 无效",
        "params": "clear",
        "value": ""
      },
      {
        "name": "",
        "description": "(event:MouseEvent) => void ",
        "description_zh": "（event：MouseEvent） => 无效",
        "params": "focus",
        "value": ""
      },
      {
        "name": "",
        "description": "(tag:string|number) => void ",
        "description_zh": "（标签：字符串|数字） => void",
        "params": "remove-tag",
        "value": ""
      },
      {
        "name": "",
        "description": "() => void ",
        "description_zh": "（） => 无效",
        "params": "top-create-click",
        "value": ""
      },
      {
        "name": "",
        "description": "(status:boolean) => void ",
        "description_zh": "（状态：布尔值） => 无效",
        "params": "visible-change",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "",
        "description": "() => void ",
        "params": "blur",
        "description_zh": "（） => 无效",
        "value": ""
      },
      {
        "name": "",
        "description": "() => void ",
        "params": "focus",
        "description_zh": "（） => 无效",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "",
        "description": "default",
        "description_zh": "违约"
      },
      {
        "name": "",
        "description": "empty",
        "description_zh": "空"
      },
      {
        "name": "",
        "description": "footer",
        "description_zh": "页脚"
      },
      {
        "name": "",
        "description": "panel",
        "description_zh": "面板"
      },
      {
        "name": "",
        "description": "prefix",
        "description_zh": "前缀"
      },
      {
        "name": "",
        "description": "reference",
        "description_zh": "参考"
      }
    ],
    "filename": "BaseSelect"
  },
  {
    "name": "TinyOption",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "option whether to disable it",
        "description_zh": "选项是否禁用"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Customize the icons of the options",
        "description_zh": "自定义选项的图标"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The display text for the option",
        "description_zh": "选项的显示文本"
      },
      "required": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the option is mandatory",
        "description_zh": "选项是否必选"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The value of the option",
        "description_zh": "选项的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/select",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/select",
    "typeDetail": {
      "IOption": "interface IOption {\n  value?: string | number\n  label?: string\n  disabled?: boolean\n  icon?: Component\n  required?:boolean\n}",
      "ICacheOp": "interface ICacheItem {\n  frequency: number\n  key: string\n  time: number\n}\n\ninterface ICacheOp {\n  key: string // 本地缓存的唯一 key 值\n  sortBy?: 'frequency' | 'time' // 排序的字段，默认 frequency (频次)\n  sort?: 'desc' | 'asc' // 排序方式，默认 desc (降序)\n  dataKey?: string // 数据中的唯一标识的 key 名称,默认 value\n  highlightClass?: string // 个性化高亮 class 名称，默认：memorize-highlight\n  highlightNum?: number // 高亮个性化的条数,默认：Infinity\n  cacheNum?: number // 存储个性化的条数,默认：Infinity\n  serialize?: ()=> string  // 本地存储序列化方法,默认：JSON.stringify\n  deserialize?: ()=> ICacheItem[] // 本地存储序反列化方法，默认：JSON.parse\n}",
      "IGridOption": "interface IGridOption {\n  data: any[]    // 表格数据，用法同 Grid\n  columns: any[] // 列配置，用法同 Grid\n}",
      "ITreeOption": "interface ITreeNode {\n  label: string         // 默认树节点的文本字段\n  id: number|string     // 树节点唯一标识\n  children: ITreeNode[] // 子节点\n}\n\ninterface ITreeOption {\n  data: ITreeNode[] // 树数据，用法同 Tree\n}",
      "IPlacement": "type IPlacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Option"
  },
  {
    "name": "TinySlider",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "format-tooltip": {
        "default": "--",
        "value": "",
        "type": "(currentValue: number) => string",
        "description": "Format the tooltip prompt",
        "description_zh": "格式化 tooltip 提示"
      },
      "height": {
        "default": "'300px'",
        "value": "",
        "type": "string",
        "description": "The height of the Slider component, which is valid when vertical is true",
        "description_zh": "Slider 组件的高度，当 vertical 为 true 时有效"
      },
      "marks": {
        "default": "--",
        "value": "",
        "type": "{ [key:number]: string }",
        "description": "Sets the scale value of the slider",
        "description_zh": "设置滑杆的刻度值"
      },
      ":max": {
        "default": "100",
        "value": "",
        "type": "number",
        "description": "Set the maximum value, which must be an integer, which can be negative, and must be greater than the minimum value set",
        "description_zh": "设置最大值，必需是整数，可以负数，必需大于所设置的最小值"
      },
      ":min": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Set a minimum value",
        "description_zh": "设置最小值"
      },
      ":num-pages": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "设置总步数，即按快捷键 PageDown/PageUp 时，每次移动的距离是 \"⌈(max-min)/num-pages⌉\"",
        "description_zh": "设置总步数，即按快捷键 PageDown/PageUp 时，每次移动的距离是 \"⌈(max-min)/num-pages⌉\""
      },
      "show-input": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the input box",
        "description_zh": "是否显示输入框"
      },
      "show-tip": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the tooltip",
        "description_zh": "是否显示 tooltip"
      },
      ":step": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "When setting the slider to move, the displacement distance of each step must be a positive integer greater than 0",
        "description_zh": "设置滑块移动时，每步位移距离，必需是大于0的正整数"
      },
      "unit": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "The units displayed after the input box are only valid in input box mode",
        "description_zh": "输入框后面显示的单位，仅在输入框模式下有效"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "number | [number, number]",
        "description": "Sets the current value of a single slider, which must be an integer or an array",
        "description_zh": "设置单滑块的当前值，必需是整数或数组"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to be in portrait mode",
        "description_zh": "是否竖向模式"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/slider",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/slider",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "Triggered when the value is changed (when dragging with the mouse, it only triggers when the mouse is released)",
        "description_zh": "值改变时触发（使用鼠标拖曳时，只在松开鼠标后触发）",
        "params": "(value: number | [number, number]) => void",
        "value": ""
      },
      {
        "name": "start",
        "description": "Sets the event to be triggered when the slider slide starts",
        "description_zh": "设置滑块滑动开始时，触发该事件",
        "params": "(event: Event, value: number | [number, number]) => void",
        "value": ""
      },
      {
        "name": "stop",
        "description": "Sets the event to be triggered at the end of the slider slide",
        "description_zh": "设置滑块滑动结束时，触发该事件",
        "params": "(value: number | [number, number]) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "显示滑块值的插槽，仅仅 v-model 是单数值时才有效，插槽参数为：slotArg: { slotScope: number }",
        "description_zh": "显示滑块值的插槽，仅仅 v-model 是单数值时才有效，插槽参数为：slotArg: { slotScope: number }"
      }
    ],
    "filename": "Slider"
  },
  {
    "name": "TinySwitch",
    "props": {
      "before-change": {
        "default": "--",
        "value": "",
        "type": "(done: () => void) => void",
        "description": "Pre-processing of switch value changes",
        "description_zh": "开关值变化前置处理"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "false-value": {
        "default": "false",
        "value": "",
        "type": "boolean | string | number",
        "description": "The value when the switch is off",
        "description_zh": "switch 关闭时的值"
      },
      "mini": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set whether to display it in mini mode, the contents of the slot will not be displayed in mini mode",
        "description_zh": "设置是否显示为 mini 模式，mini 模式下不会显示 slot 的内容"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "boolean | string | number",
        "description": "The switch binding value",
        "description_zh": "开关绑定值"
      },
      "show-text": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the switch displays the text in the content",
        "description_zh": "switch 是否显示内容里面的文字"
      },
      "true-value": {
        "default": "true",
        "value": "",
        "type": "boolean | string | number",
        "description": "The value when the switch is on",
        "description_zh": "switch 打开时的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/switch",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/switch",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "A callback function when the switch state changes",
        "description_zh": "switch 状态发生变化时的回调函数",
        "params": "(value: boolean | string | number) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "close",
        "description": "Closes the content, which works when show-text is true",
        "description_zh": "关闭内容，当 show-text 为 true 时有效"
      },
      {
        "name": "open",
        "description": "Turn on content, which works when show-text is true",
        "description_zh": "开启内容，当 show-text 为 true 时有效"
      }
    ],
    "filename": "Switch"
  },
  {
    "name": "TinyTimePicker",
    "props": {
      "arrow-control": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to use arrows for time selection",
        "description_zh": "是否使用箭头进行时间选择"
      },
      "clear-icon": {
        "default": "IconOperationfaild",
        "value": "",
        "type": "Component",
        "description": "Customize the clear icon",
        "description_zh": "自定义清空图标"
      },
      "clearable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a clear button",
        "description_zh": "是否显示清除按钮"
      },
      "default-value": {
        "default": "--",
        "value": "",
        "type": "Date | string | number | Array",
        "description": "If the selected date value is empty, the default time displayed when the selector panel is opened needs to be set to a value that can be parsed by new Date().",
        "description_zh": "当选中的日期值为空时，选择器面板打开时默认显示的时间，需设置为可被 new Date() 解析的值"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "disable",
        "description_zh": "禁用"
      },
      "editable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Text boxes can be entered",
        "description_zh": "文本框可输入"
      },
      "end-placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The placeholder content for the end date when the scope is selected",
        "description_zh": "范围选择时结束日期的占位内容"
      },
      "is-range": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to select a time range",
        "description_zh": "是否为时间范围选择"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "Date | string | number | Array",
        "description": "Date value selected by the date picker to set the initial value of the selector",
        "description_zh": "日期选择器选中的日期值，可设置选择器的初始值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "原生 input name 属性",
        "description_zh": "原生 input name 属性"
      },
      "picker-options": {
        "default": "--",
        "value": "",
        "type": "IPickerOptions",
        "description": "Configure the optional time range and format displayed in the drop-down list",
        "description_zh": "配置可选的时间范围、下拉框中显示的格式"
      },
      "placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "Placeholder content when not scoped",
        "description_zh": "非范围选择时的占位内容"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to insert a popup into the body element, if there is a problem with the positioning of the popup, you can set this property to false",
        "description_zh": "是否将弹出框插入至 body 元素，在弹出框的定位出现问题时，可将该属性设置为 false"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "TimePicker 下拉框的 class 类名",
        "description_zh": "TimePicker 下拉框的 class 类名"
      },
      "range-separator": {
        "default": "'-'",
        "value": "",
        "type": "string",
        "description": "Separator when selecting a range",
        "description_zh": "选择范围时的分隔符"
      },
      "size": {
        "default": "''",
        "value": "",
        "type": "medium / small / / mini",
        "description": "Enter the size of the field",
        "description_zh": "输入框尺寸"
      },
      "start-placeholder": {
        "default": "''",
        "value": "",
        "type": "string",
        "description": "The placeholder content for the start date when the range is selected",
        "description_zh": "范围选择时开始日期的占位内容"
      },
      "step": {
        "default": "--",
        "value": "",
        "type": "IStep",
        "description": "Customize the time, minute, and second steps",
        "description_zh": "自定义时分秒步长"
      },
      ":suffix-icon": {
        "default": "IconCalendar",
        "value": "",
        "type": "object",
        "description": "Customize the class name of the head icon",
        "description_zh": "自定义头部图标的类名"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-picker",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-picker",
    "typeDetail": {
      "IStep": "interface IStep {\n  hour: number\n  minute: number\n  second: number\n}",
      "IPickerOptions": "interface IPickerOptions {\n  // 可选的时间范围\n  selectableRange: string\n  // 下拉框中显示的格式\n  format: string\n}"
    },
    "events": [
      {
        "name": "blur",
        "description": "Triggers when input loses focus",
        "description_zh": "当 input 失去焦点时触发",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "Triggered when the user confirms the selected value",
        "description_zh": "用户确认选定的值时触发",
        "params": "(date: Date | Date[]) => void",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Triggers when input gains focus",
        "description_zh": "当 input 获得焦点时触发",
        "params": "() => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "focus",
        "description": "Make input get focus",
        "params": "() => void",
        "description_zh": "使 input 获取焦点",
        "value": ""
      }
    ],
    "slots": [],
    "filename": "TimePicker"
  },
  {
    "name": "TinyTimeSelect",
    "props": {
      "clear-icon": {
        "default": "IconOperationfaild",
        "value": "",
        "type": "string",
        "description": "Customize the clear icon",
        "description_zh": "自定义清空图标"
      },
      "clearable": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "Whether the Clear button is displayed",
        "description_zh": "清除按钮是否显示"
      },
      "default-value": {
        "default": "--",
        "value": "",
        "type": "Date",
        "description": "Optionally, if the selected date value is empty, the default time displayed when the selector panel is opened must be set to a value that can be parsed by new Date().",
        "description_zh": "可选，当选中的日期值为空时，选择器面板打开时默认显示的时间，需设置为可被new Date()解析的值"
      },
      "disabled": {
        "default": " false",
        "value": "",
        "type": "boolean",
        "description": "Whether the time selector is disabled",
        "description_zh": "时间选择器是否禁用"
      },
      "editable": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "Whether the text box can be entered manually",
        "description_zh": "文本框是否可手动输入"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "date(DatePicker) / array(DateRangePicker)",
        "description": "Date value selected by the date picker to set the initial value of the selector",
        "description_zh": "日期选择器选中的日期值，可设置选择器的初始值"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Native attributes",
        "description_zh": "原生属性"
      },
      ":picker-options": {
        "default": "{}",
        "value": "",
        "type": "object",
        "description": "Refer to the following table for options specific to the current time and date selector",
        "description_zh": "当前时间日期选择器特有的选项参考下表"
      },
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Input the content of the prompt placeholder",
        "description_zh": "输入框的提示占位内容"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to insert a popover into the body element. If there is a problem with the positioning of the popover, you can set this property to false",
        "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "TimePicker 下拉框的 class 类名",
        "description_zh": "TimePicker 下拉框的 class 类名"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "输入框尺寸; 该属性的可选值为 medium、small、mini",
        "description_zh": "输入框尺寸; 该属性的可选值为 medium、small、mini"
      },
      "suffix-icon": {
        "default": "IconCalendar",
        "value": "",
        "type": "string",
        "description": "Customize the head icon",
        "description_zh": "自定义头部图标"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-select",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-select",
    "typeDetail": {},
    "events": [
      {
        "name": "blur",
        "description": "Triggers when input loses focus",
        "description_zh": "当 input 失去焦点时触发",
        "params": "( ) => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "Triggers when the value of the input binding changes",
        "description_zh": "当 input 绑定的值发生改变时触发",
        "params": "(value: string) => void",
        "value": ""
      },
      {
        "name": "focus",
        "description": "Triggers when input gains focus",
        "description_zh": "当 input 获得焦点时触发",
        "params": "( ) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "focus",
        "description": "Make input get focus",
        "params": "( ) => void",
        "description_zh": "使 input 获取焦点",
        "value": ""
      }
    ],
    "slots": [],
    "filename": "TimeSelect"
  },
  {
    "name": "TinyTransfer",
    "props": {
      "button-texts": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "By passing in an array of strings with 2 values, you can customize the text of the left and right shuttle buttons",
        "description_zh": "通过传入一个2值的字符串数组，自定义左右穿梭按钮的文案"
      },
      "columns": {
        "default": "--",
        "value": "",
        "type": "IColumnConfig",
        "description": "When the render type is table, set the column configuration for the shuttle box table",
        "description_zh": "在渲染类型为 table 时，设置穿梭框表格的列配置"
      },
      "data": {
        "default": "[]",
        "value": "",
        "type": "ITransferData[]",
        "description": "Full data sources in the left and right lists",
        "description_zh": "左右列表的全量数据源"
      },
      "drop-config": {
        "default": "--",
        "value": "",
        "type": "IDropConfig",
        "description": "For details about how to set the draggable parameters of the shuttle box list items, see sortablejs plug-in",
        "description_zh": "设置穿梭框列表项可拖拽的参数，参见sortablejs插件"
      },
      "filter-method": {
        "default": "--",
        "value": "",
        "type": "(query:string, item:object) => boolean",
        "description": "Set the search filter function of the shuttle box, which is only valid when the default list and nested tables are used\n              When nesting a tree, use treeConfig for search configuration",
        "description_zh": "\n              设置穿梭框的搜索过滤函数，仅在默认列表和嵌套表时有效\n              嵌套树时，请使用treeConfig进行搜索配置\n            "
      },
      "filter-placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "When search is enabled, the search box occupies placeholder text",
        "description_zh": "启用搜索时，搜索框占位文本"
      },
      "filterable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to enable the ability to search",
        "description_zh": "是否启用搜索的功能"
      },
      ":format": {
        "default": "{    noChecked:'${checked}/${total}',    hasChecked: '${checked}/${total}' }",
        "value": "",
        "type": "object",
        "description": "Check the status text at the top of the list",
        "description_zh": "列表顶部勾选状态文案"
      },
      "left-columns": {
        "default": "--",
        "value": "",
        "type": "IColumnConfig",
        "description": "When the rendering type is table, the columns in the left table take precedence over columns",
        "description_zh": "在渲染类型为 table 时，左边表格的列配置,优先级高于 columns"
      },
      "left-default-checked": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "The default left list is an array of keys with ticked options",
        "description_zh": "默认左侧列表的已勾选项的 key 数组"
      },
      "pager-op": {
        "default": "{ mode: 'fixed',pageVO: {currentPage: 1,pageSize: 10}",
        "value": "",
        "type": "IPagerOp",
        "description": "When the render type is table, set the pagination configuration for the table",
        "description_zh": "在渲染类型为 table 时，设置表格的分页配置"
      },
      "props": {
        "default": "--",
        "value": "",
        "type": "{key:string, label:string, disabled:string}",
        "description": "Field alias mapping configuration for the data source",
        "description_zh": "数据源的字段别名映射配置"
      },
      "render": {
        "default": "--",
        "value": "",
        "type": "Table | Tree",
        "description": "To set the rendering type for the left and right areas, the Table and Tree objects need to import the corresponding component variables from the component package. When the plugin value of this property value is set to Table, it is set to render as a table. The value of the property of the plugin is set to Tree, rendered as a tree",
        "description_zh": "设置左右区域的渲染类型,Table 和 Tree 对象需要从组件包中引入相应的组件变量。该属性值的plugin设置为Table时设置渲染为表格;该属性值的 plugin 设置为Tree渲染为树"
      },
      "render-content": {
        "default": "--",
        "value": "",
        "type": "(h: Vue.h, item: any) => vnode",
        "description": "Custom rendering functions for data items",
        "description_zh": "数据项的自定义渲染函数"
      },
      "right-columns": {
        "default": "--",
        "value": "",
        "type": "IColumnConfig",
        "description": "When the rendering type is table, the columns on the right table take precedence over columns",
        "description_zh": "在渲染类型为 table 时，右边表格的列配置,优先级高于 columns"
      },
      "right-default-checked": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "The default array of keys with checks on the right side of the list",
        "description_zh": "默认右侧列表的已勾选项的 key 数组"
      },
      "show-all-btn": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the Move All button",
        "description_zh": "是否显示全部移动按钮"
      },
      "show-pager": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "When the render type is table, set whether the table displays pagination",
        "description_zh": "在渲染类型为 table 时，设置表格是否显示分页"
      },
      "target-order": {
        "default": "\"original\"",
        "value": "",
        "type": "\"original\" / \"push\" / \"unshift\"",
        "description": "Insertion sort strategy for the list element on the right\n                  If it is original, it is in the same order as the data source \n                  If it is push, the new element will be added last \n                  If it is unshift, the new element will be added first.",
        "description_zh": " 右侧列表元素的插入排序策略\n                  若为 original，则保持与数据源相同的顺序 \n                  若为 push，则新加入的元素排在最后 \n                  若为 unshift，则新加入的元素排在最前。"
      },
      "titles": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "Customize the title of the list; When titles are not set, the titles of the left and right lists are displayed by default: List 1, List 2",
        "description_zh": "自定义列表的标题；不设置titles时，左右列表的标题默认显示为：  列表 1， 列表 2"
      },
      "to-left-disable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "If the component is not selected in the initialization state, the default button is disabled",
        "description_zh": "组件初始化状态下未选中时，默认按钮显示禁用状态"
      },
      "to-right-disable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "If the component is not selected in the initialization state, the default button is disabled",
        "description_zh": "组件初始化状态下未选中时，默认按钮显示禁用状态"
      },
      "tree-op": {
        "default": "--",
        "value": "",
        "type": "Tree props",
        "description": "When the render type is tree, set the relevant configuration properties for the tree",
        "description_zh": "在渲染类型为 tree 时，设置树的相关配置属性"
      },
      "v-model / modelValue": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "Move the value of the key of the data item to the right list",
        "description_zh": "移动到右列表的数据项的key的数组值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/transfer",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/transfer",
    "typeDetail": {
      "ITransferData": "interface ITransferData {\n  key: string,\n  label: string,\n  disabled: string,\n  [other:string]: any\n}",
      "IDropConfig": "interface IDropConfig {\n  plugin: object // 指定拖放排序的插件Sortable, 该变量通过 import Sortable from 'sortablejs' 导入\n}",
      "IPagerOp": "interface IPagerOp {\n  mode: string  // 通过 mode 设置分页组件组件渲染模式，不同模式是组件内置的 layout 设置， mode 优先级高于 layout\n  pagerCount:number  // 总页数\n  pageVo:{\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    layout: string   // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n  }\n}"
    },
    "events": [
      {
        "name": "change",
        "description": "The event that is triggered when the list element changes on the right;                value: The list of data values on the right side of the shuttle box move: The direction in which the data is moving, whether it is left or right keyArray: The list of data values that are being moved",
        "description_zh": "右侧列表元素变化时触发的事件;                value: 穿梭框右侧数据值列表                move: 数据移动方向，是left或者right                keyArray: 被移动的数据值列表",
        "params": "(value:string[], move:string, keyArray:string[])=>void",
        "value": ""
      },
      {
        "name": "left-check-change",
        "description": "The event that is triggered when the list element on the left is selected;              checked: List of selected data values on the left side of the checkoff box statusChanged: The list of data values whose status has changed on the left side of the check-in box",
        "description_zh": "左侧列表元素选择时触发的事件;              checked: 穿梭框左侧被选中的数据值列表              statusChanged: 穿梭框左侧选中状态发生变化的数据值列表",
        "params": "(checked:string[], statusChanged:string[]) => void",
        "value": ""
      },
      {
        "name": "right-check-change",
        "description": "The event that is triggered when the list element on the right is selected;              checked: List of selected data values on the right side of the shuttle box statusChanged: The list of selected data values whose status has changed on the right side of the shuttle box",
        "description_zh": "右侧列表元素选择时触发的事件;              checked: 穿梭框右侧被选中的数据值列表              statusChanged: 穿梭框右侧选中状态发生变化的数据值列表",
        "params": "(checked:string[], statusChanged:string[]) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "clearQuery",
        "description": "When the filter function is enabled, clear the search keywords in the left and right panels",
        "params": "(name: string) => void",
        "description_zh": "开启过滤功能时，清空左右面板的搜索关键词",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "button-panel",
        "description": "Shuttle button slots",
        "description_zh": "穿梭按钮插槽"
      },
      {
        "name": "default",
        "description": "The content slot of the data item, the slot data context is: { option }",
        "description_zh": "数据项的内容插槽，插槽数据上下文为： { option }"
      },
      {
        "name": "left-footer",
        "description": "Content slots at the bottom of the list on the left",
        "description_zh": "左侧列表底部的内容插槽"
      },
      {
        "name": "left-panel",
        "description": "Custom content slot on the left",
        "description_zh": "左侧自定义内容插槽"
      },
      {
        "name": "right-footer",
        "description": "Content slots at the bottom of the list on the right",
        "description_zh": "右侧列表底部的内容插槽"
      },
      {
        "name": "right-panel",
        "description": "Custom content slot on the right",
        "description_zh": "右侧自定义内容插槽"
      }
    ],
    "filename": "Transfer"
  },
  {
    "name": "TinyGrid",
    "props": {
      "align": {
        "default": "'left'",
        "value": "",
        "type": "left / center / right",
        "description": "The alignment of all table columns",
        "description_zh": "所有表格列的对齐方式"
      },
      "auto-load": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the automatic request service is valid when fetch-data is configured",
        "description_zh": "是否开启自动请求服务，配置 fetch-data 时有效"
      },
      "auto-resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Parent Responsive Listening (may be used in scenarios where the parent element may be dynamically changing)",
        "description_zh": "父元素响应式监听（对于父元素可能存在动态变化的场景可能会用到）"
      },
      "border": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not it comes with a longitudinal border",
        "description_zh": "是否带有纵向边框"
      },
      "cell-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "Append a className to a cell, which can also be a function",
        "description_zh": "给单元格附加 className，也可以是函数"
      },
      "column-key": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the key property needs to be set for each column's VNode (not required unless in special cases)",
        "description_zh": "是否需要为每一列的 VNode 设置 key 属性（非特殊情况下不需要使用）"
      },
      "column-min-width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "Set the minimum width that can be adjusted, and when not set, it defaults to the width of the column header span + 36 (fixed width of the header); All minimum column widths; The remaining space is automatically proportionalized; The optional value for this property is integer, px,%",
        "description_zh": "设置可以调整到的最小宽度，不设置时默认为列头 span 的宽度 + 36（头部固定宽度） ；所有最小列宽度；会自动将剩余空间按比例分配；该属性的可选值为 整数, px，%"
      },
      "column-width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "All column widths; The optional value for this property is integer, px,%",
        "description_zh": "所有列宽度；该属性的可选值为 整数, px，%"
      },
      "columns": {
        "default": "--",
        "value": "",
        "type": "IColumnConfig[]",
        "description": "For details about the configuration information of table columns, see Column configuration items",
        "description_zh": "表格列的配置信息，具体参考列配置项"
      },
      "context-menu": {
        "default": "--",
        "value": "",
        "type": "IContextMenuConfig",
        "description": "Quick menu configuration item",
        "description_zh": "快捷菜单配置项"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "Row[]",
        "description": "Set the data for the table",
        "description_zh": "设置表格的数据"
      },
      "delete-data": {
        "default": "--",
        "value": "",
        "type": "IDataHandler",
        "description": "Server-side data deletion method",
        "description_zh": "服务端数据删除方法"
      },
      "drop-config": {
        "default": "--",
        "value": "",
        "type": "IDropConfig",
        "description": "Drag and drop configuration items from the table",
        "description_zh": "表格拖拽配置项"
      },
      "edit-config": {
        "default": "--",
        "value": "",
        "type": "IEditConfig",
        "description": "Edit configuration items in a table",
        "description_zh": "表格编辑配置项"
      },
      "edit-rules": {
        "default": "--",
        "value": "",
        "type": "IValidRules",
        "description": "Verify the rule configuration item",
        "description_zh": "校验规则配置项"
      },
      "events": {
        "default": "--",
        "value": "",
        "type": "IEventsConfig",
        "description": "Event objects",
        "description_zh": "事件对象"
      },
      "expand-config": {
        "default": "--",
        "value": "",
        "type": "IExpandConfig",
        "description": "Expand the row configuration item",
        "description_zh": "展开行配置项"
      },
      "fetch-data": {
        "default": "--",
        "value": "",
        "type": "IDataHandler",
        "description": "Server-side data query method",
        "description_zh": "服务端数据查询方法"
      },
      "fit": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the widths of all columns are self-stretching",
        "description_zh": "所有列的宽度是否自撑开"
      },
      "footer-align": {
        "default": "'left'",
        "value": "",
        "type": "left / center / right",
        "description": "The alignment of all the columns at the end of the table",
        "description_zh": "所有的表尾列的对齐方式"
      },
      "footer-cell-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "Append className to the cells in the footer, which can also be a function",
        "description_zh": "给表尾的单元格附加 className，也可以是函数"
      },
      "footer-method": {
        "default": "--",
        "value": "",
        "type": "({columns: IColumnConfig[], data: IRow[]}) => string[][]",
        "description": "Calculation method of the total in the footer columns: all column configuration data, data: all current table data",
        "description_zh": "表尾合计的计算方法 columns:所有的列配置数据, data： 当前所有的表格数据"
      },
      "footer-row-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "给表尾的行附加 className",
        "description_zh": "给表尾的行附加 className"
      },
      "footer-span-method": {
        "default": "--",
        "value": "",
        "type": "(args: ISpanMethodArgs) => { rowspan: number, colspan: number }",
        "description": "表尾合并行或列，该函数返回计算后的值；通过 footer-method 和 footer-span-method 设置表尾合计行或列逻辑 必须配置 show-footer",
        "description_zh": "表尾合并行或列，该函数返回计算后的值；通过 footer-method 和 footer-span-method 设置表尾合计行或列逻辑 必须配置 show-footer"
      },
      "header-align": {
        "default": "'left'",
        "value": "",
        "type": "left / center / right",
        "description": "The alignment of all header columns",
        "description_zh": "所有的表头列的对齐方式"
      },
      "header-cell-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "Append className to the cells in the header, which can also be a function",
        "description_zh": "给表头的单元格附加 className，也可以是函数"
      },
      "header-row-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "The row in the header is appended to the className, which can also be a function",
        "description_zh": "表头的行附加 className，也可以是函数"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "Sets the height of the table content area (excluding the table header and bottom). When not set, the height of the table content area is adaptive; the height of the table; It supports the full coverage of the parent container or fixed width and height; The optional value for this property is integer, px,%",
        "description_zh": "设置表格内容区域（不含表格头部，底部）的高度。 不设置时，表格内容区域的高度度自适应；表格的高度；支持铺满父容器或者固定宽高；该属性的可选值为 整数, px，%"
      },
      "highlight-cell": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "It is only valid when editConfig is configured, whether to highlight the cell border when editing",
        "description_zh": "只对 editConfig 配置时有效，是否在编辑时高亮单元格边框"
      },
      "highlight-current-column": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether you want to highlight the current column",
        "description_zh": "是否要高亮当前列"
      },
      "highlight-current-row": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether you want to highlight the current row",
        "description_zh": "是否要高亮当前行"
      },
      "highlight-hover-column": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Mouse over the column to see if you want to highlight it",
        "description_zh": "鼠标移到列是否要高亮显示"
      },
      "highlight-hover-row": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Mouse over the row to see if you want to highlight it",
        "description_zh": "鼠标移到行是否要高亮显示"
      },
      "is-async-column": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Set whether the columns of the table are lazy loaded; Whether to enable the asynchronous column function and use it with scrollLoad",
        "description_zh": "设置表格的列是否延迟加载；是否开启异步列功能，配合 scrollLoad 一起使用"
      },
      "is-before-page-change": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether to turn on the pre-processing feature when the page is changed. When the value is true, the page turning operation or changing the page size operation will not take effect immediately, leaving it to the user to process the business logic, and then make it effective or invalid by calling the reserved callback or rollback, see the event before-page-change for details",
        "description_zh": "是否打开页面改变时的前置处理特性。在值为 true 时，翻页操作或者改变页大小操作不会立即生效，留给用户处理业务逻辑，之后通过调用预留的 callback 或者 rollback 使之生效或者失效，详看事件 before-page-change "
      },
      "keyboard-config": {
        "default": "--",
        "value": "",
        "type": "IKeyboardConfig",
        "description": "button configuration items",
        "description_zh": "按键配置项"
      },
      "loading": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the table is loading",
        "description_zh": "表格是否显示加载中"
      },
      "loading-component": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Custom table loading",
        "description_zh": "自定义表格 loading "
      },
      "max-height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "Set the maximum height of the table content area (excluding the table header and bottom); The optional values for this property are: integer, px,%",
        "description_zh": "设置表格内容区域（不含表格头部，底部）的最大高度；该属性的可选值为：整数, px，%"
      },
      "min-height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "Sets the minimum height of the table content area (excluding the table header and bottom).",
        "description_zh": "设置表格内容区域（不含表格头部，底部）的最小高度"
      },
      "mouse-config": {
        "default": "--",
        "value": "",
        "type": "IMouseConfig",
        "description": "Mouse configuration items",
        "description_zh": "鼠标配置项"
      },
      "optimization": {
        "default": "--",
        "value": "",
        "type": "IOptimizationConfig",
        "description": "Optimized configuration items for virtual scrolling of tables",
        "description_zh": "表格虚拟滚动的优化配置项"
      },
      "pager": {
        "default": "--",
        "value": "",
        "type": "IPagerConfig",
        "description": "Paginated configuration items",
        "description_zh": "分页配置项"
      },
      "radio-config": {
        "default": "--",
        "value": "",
        "type": "IRadioConfig",
        "description": "A radio box configuration item",
        "description_zh": "单选框配置项"
      },
      "remote-filter": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether all columns use server-side filtering, if set to true, the data will not be processed",
        "description_zh": "所有列是否使用服务端筛选，如果设置为 true 则不会对数据进行处理"
      },
      "remote-sort": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to sort all data on the server. Defaults to false and does not do server-side sorting",
        "description_zh": "是否将服务端的全部数据进行排序。默认为 false 不进行服务端排序"
      },
      "render-empty": {
        "default": "--",
        "value": "",
        "type": "()=> string | VNode",
        "description": "Empty data rendering",
        "description_zh": "空数据渲染"
      },
      "resizable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Sets whether to allow column widths to be adjusted",
        "description_zh": "设置是否允许调整列宽"
      },
      "row-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs) => string",
        "description": "Customize the table row class name, which is used to customize the row style of the table. You can set the string class name directly, or you can use a function",
        "description_zh": "自定义表格行类名，用于自定义表格的行样式的场景。可以直接设置字符串类名，也可以是用函数"
      },
      "row-group": {
        "default": "--",
        "value": "",
        "type": "IRowGroup",
        "description": "The row-group attribute can be used to configure row grouping, and row grouping will display columns with the same value in groups",
        "description_zh": "row-group 属性可以配置行分组，行分组会将具有相同值的列进行分组展示"
      },
      "row-id": {
        "default": "'_RID'",
        "value": "",
        "type": "string",
        "description": "Customize the field name of the unique primary key of the row data (the row data must have a unique primary key, which is automatically generated by default)",
        "description_zh": "自定义行数据唯一主键的字段名（行数据必须要有唯一主键，默认自动生成）"
      },
      "row-span": {
        "default": "--",
        "value": "",
        "type": "{ field: string }[]",
        "description": "Sets row merge, which is only available for normal tables and cannot be used in conjunction with tree-config",
        "description_zh": "设置行合并,该属性仅适用于普通表格，不可与 tree-config 同时使用"
      },
      "save-data": {
        "default": "--",
        "value": "",
        "type": "IDataHandler",
        "description": "The method of saving data on the server",
        "description_zh": "服务端数据保存方法"
      },
      "select-config": {
        "default": "--",
        "value": "",
        "type": "ISelectConfig",
        "description": "check box configuration item",
        "description_zh": "复选框配置项"
      },
      "seq-serial": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set whether the line number is sequential, which is valid when pagination is enabled, and seqSerial is valid when showSeq is true",
        "description_zh": "设置行序号是否连续，开启分页时有效, seqSerial 当 showSeq 为 true 时有效"
      },
      "show-footer": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the bottom total",
        "description_zh": "是否显示表尾合计"
      },
      "show-header": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the header",
        "description_zh": "是否显示表头"
      },
      "show-header-overflow": {
        "default": "--",
        "value": "",
        "type": "boolean / ellipsis / tooltip / title",
        "description": "Set the header to display an ellipsis when all the contents are too long; The optional values for this property are ellipsis (which shows only the ellipsis), title (and appears as the native title), tooltip (and appears as a tooltip hint)",
        "description_zh": "设置表头所有内容过长时显示为省略号；该属性的可选值为 ellipsis（只显示省略号）,title（并且显示为原生 title）,tooltip（并且显示为 tooltip 提示）"
      },
      "show-overflow": {
        "default": "--",
        "value": "",
        "type": "boolean / ellipsis / tooltip / title",
        "description": "Set all content to be displayed as ellipsis when it is too long (if it is a fixed column, it is recommended to set this value to improve the rendering speed); The optional values for this property are ellipsis (which shows only the ellipsis), title (and appears as the native title), tooltip (and appears as a tooltip hint)",
        "description_zh": "设置所有内容过长时显示为省略号（如果是固定列建议设置该值，提升渲染速度）；该属性的可选值为 ellipsis（只显示省略号）,title（并且显示为原生 title）,tooltip（并且显示为 tooltip 提示）"
      },
      "show-save-msg": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether to prompt when there is unsaved data when switching pagination",
        "description_zh": "切换分页时有未保存的数据时是否进行提示"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "The size of the table",
        "description_zh": "表格的尺寸"
      },
      "sort-config": {
        "default": "--",
        "value": "",
        "type": "ISortConfig",
        "description": "Sort configuration items",
        "description_zh": "排序配置项"
      },
      "sort-method": {
        "default": "--",
        "value": "",
        "type": "(row1: IRow, row2: IRow)=> boolean",
        "description": "Customize the sorting method of all columns, and when the sorting is triggered, the function will be called to return the sorted result. Custom sorting method, similar to the native sort sorting",
        "description_zh": "自定义所有列的排序方法，当触发排序时会调用该函数返回排序后的结果；自定义排序方法，类似原生的sort排序"
      },
      "sortable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Specify whether to allow column data sorting. Defaults to true to sortable",
        "description_zh": "设置是否允许列数据排序。默认为 true 可排序"
      },
      "span-method": {
        "default": "{ rowspan: 1, colspan: 1 }",
        "value": "",
        "type": "(args: ISpanMethodArgs) => { rowspan: number, colspan: number }",
        "description": "Merge rows or columns, and the function returns the calculated value",
        "description_zh": "合并行或列，该函数返回计算后的值"
      },
      ":start-index": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Valid only for columns with type=index, the starting value of the dynamic index",
        "description_zh": "只对 type=index 的列有效，动态索引的起始值"
      },
      "stripe": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it has zebra stripes or not",
        "description_zh": "是否带有斑马纹"
      },
      "summary-config": {
        "default": "--",
        "value": "",
        "type": "ISummaryConfig",
        "description": "The configuration item of the table statistics function",
        "description_zh": "表格统计功能配置项"
      },
      "sync-resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Responsive follow of a property (may be used in scenes where a property is used to control the show/hide toggle)",
        "description_zh": "响应式跟随某个属性（对于通过某个属性来控制显示/隐藏切换的场景可能会用到）"
      },
      "toolbar": {
        "default": "--",
        "value": "",
        "type": "IToolbarConfig",
        "description": "Toolbar configuration",
        "description_zh": "工具栏配置"
      },
      "tooltip-config": {
        "default": "--",
        "value": "",
        "type": "IToolTipConfig",
        "description": "For details about the built-in tooltip configuration item of Grid, see Tooltip Properties",
        "description_zh": "Grid 内置 tooltip 配置项，请参考 Tooltip 组件属性说明"
      },
      "tree-config": {
        "default": "--",
        "value": "",
        "type": "ITreeConfig",
        "description": "Tree structure configuration items",
        "description_zh": "树形结构配置项"
      },
      "valid-config": {
        "default": "--",
        "value": "",
        "type": "IValidConfig",
        "description": "Verify the configuration item",
        "description_zh": "校验配置项"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "typeDetail": {
      "IRow": "interface IRow {\n  // 表格行数据\n  [filed: string]: any\n}",
      "IColumnConfig": "interface IColumnConfig {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  prop: string\n  rules: IValidRules\n  required: boolean\n  property: string\n  title: string\n  label: string\n  width: string | number\n  minWidth: string | number\n  resizable: boolean\n  fixed: boolean\n  align: 'left' | 'center' | 'right'\n  headerAlign: 'left' | 'center' | 'right'\n  footerAlign: 'left' | 'center' | 'right'\n  showOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showHeaderOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showTip: boolean\n  showHeaderTip: boolean\n  className: string\n  headerClassName: string\n  footerClassName: string\n}",
      "IPagerConfig": "interface IPagerConfig {\n  component?: Component\n  attrs: {\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    total: number\n    // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n    layout: string\n  }\n}",
      "IDataHandler": "interface IDataHandler {\n  api: ()=> Promise\n}",
      "IRowGroup": "interface IRowGroup {\n  // 列标识符，行分组会将具有相同值的列进行分组展示\n  field: string\n}",
      "IToolbarConfig": "interface IToolbarConfig {\n  component: GridToolbar\n  buttons: {\n    code: string\n    name: string\n  }[]\n}",
      "IToolTipConfig": "interface IToolTipConfig {\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'\n  visibleArrow?: boolean\n  enterable?: boolean\n  type?: 'normal' | 'warning' | 'error' | 'info' | 'success'\n  effect?: 'dark' | 'light'\n  // 自定义提示内容\n  contentMethod?: ()=> string | VNode\n}",
      "IContextMenuConfig": "interface IMenuOptions {\n  code: string\n  name: string\n  visible?: boolean\n  disabled?: boolean\n}\n\ninterface IContextMenuConfig {\n  body?: { \n    options: IMenuOptions\n  }\n  footer?: { \n    options: IMenuOptions\n  }\n  visibleMethod?: ()=> boolean\n}",
      "IValidRules": "interface IValidRules {\n [filed:string]: { \n  type?: string\n  required?: boolean\n  validator?: () => boolean\n  message?: string\n  min?: number\n  max?: number\n }\n}[]",
      "IExpandConfig": "interface IExpandConfig {\n  // 默认展开所有行\n  expandAll?: boolean \n  // 触发方式 default（点击按钮触发）,cell（点击单元格触发）,row（点击行触发）\n  trigger?: 'default' | 'row' | cell\n  // 默认展开指定行（需要有 row-id）\n  expandRowKeys?: string[]\n  // 对于同一级的节点，每次只能展开一个\n  accordion?: boolean\n  // 控制是否渲染展开行\n  activeMethod?:({row: IRow})=> boolean\n  // 配置是否显示展开图标\n  showIcon?: boolean \n}",
      "IOptimizationConfig": "interface IOptimizationConfig {\n  animat: boolean\n  delayHover: number\n  scrollX: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 X 虚拟滚动，必须固定所有列宽，否则无法兼容）默认100\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number\n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数\n    vSize?: number\n  }\n  scrollY: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 Y 虚拟滚动，必须固定所有行高，否则无法兼容）默认500\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number \n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数 默认自动计算\n    vSize?: number \n    // 指定行高 默认自动计算\n    rHeight?: number \n    // 自动适配最优的渲染方式 默认true\n    adaptive?: boolean \n  }\n}",
      "IKeyboardConfig": "interface IKeyboardConfig {\n  // 启用方向键功能\n  isArrow?: boolean \n  isDel?: boolean\n  isTab?: boolean \n  isEdit?: boolean\n}",
      "IMouseConfig": "interface IMouseConfig {\n  // 是否开启左键选中单元格功能（只对 editConfig.mode=cell 有效），默认为 false\n  selected: boolean \n}",
      "IRadioConfig": "interface IRadioConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row' \n  // 单选框显示的字段名，可以直接显示在单选框中\n  labelField?: string |\n  // 默认选中指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKey?: string\n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 Radio 是否可以选中\n  checkMethod?: ()=> boolean\n}",
      "ISelectConfig": "interface ISelectConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row'\n  // 复选框显示的字段名，可以直接显示在复选框中\n  labelField?: string\n  // 默认勾选开指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKeys?: string[] \n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 checkbox 是否可以勾选\n  checkMethod?: ()=> boolean \n  // 默认勾选所有（只会在初始化时被触发一次）}\n  checkAll?: boolean\n  // 是否显示全选按钮（如果 checkStrictly=true 则默认为 false）\n  showHeader?: boolean \n  // 是否严格的遵循父子不互相关联的做法\n  checkStrictly?: boolean\n  // 翻页操作是否保留历史选择数据\n  reserve?: boolean\n}",
      "ISortConfig": "interface ISortConfig {\n  // 排序触发方式，可配置为 cell（点击头部单元格触发排序），不配置时默认为点击上下箭头触发排序\n  trigger?: 'cell'\n}",
      "ITreeConfig": "interface ITreeConfig {\n  // 展开子级触发方式：'default'(点击按钮触发)；'cell'(点击单元格触发)；'row'(点击行触发)\n  trigger?: 'default' | 'cell' | 'row'\n  // 子级索引是否按数字递增显示：true(子级索引按数字递增显示，父级1，子级2)；false(子级索引在父级索引基础上增加，父级1，子级1.1)\n  ordered?: boolean\n  // 控制水平缩进距离，默认 16，单位 px\n  indent?: number\n  // 指定子级数据的字段名\n  children?: string\n  // 是否展开所有行\n  expandAll?: boolean\n  // 默认展开所给数组中的指定行，需要有row-id，可以由行的'_RID'属性获取\n  expandRowKeys?: string[]\n  // 对于同一级的多个子节点，是否只能同时展开一个子节点\n  accordion?: boolean\n}",
      "IValidConfig": "interface IValidConfig {\n  // 校验提示类型，'inline'(内置提示)；'tooltip'(tooltip文字提示)\n  message?: 'inline' | 'tooltip'\n}",
      "ISummaryConfig": "interface ISummaryConfig {\n  // 统计字段名 \n  fields: string[]\n  // 小数点后保留的小数位\n  fraction?: boolean\n  // 是否截断，默认为四舍五入，不截断\n  truncate?: boolean\n  // 统计显示的文本\n   text?: string\n}",
      "IScrollLoadConfig": "interface IScrollLoadConfig {\n  // 是否连续\n  isInfinity: boolean\n  // 每次加载多少条\n  pageSize: number\n}",
      "IEventsConfig": "interface IEventsConfig {\n  [field: string]: ()=> void\n}",
      "IDropConfig": "interface IDropConfig {\n  // sortablejs 插件\n  plugin: Sortable\n  // 开启行拖拽\n  row: boolean\n  // 开启列拖拽\n  column: boolean\n  // 拖拽前函数，返回 false 取消拖动\n  onBeforeMove?: ()=> boolean\n  // 拖拽触发源选择器一般是class类名\n  trigger?: string\n  // 根据行的类名来控制是否可以拖动\n  filter?: string\n  // 如果变动了树层级，可以指定是否需要刷新数据\n  refresh?: boolean\n  }",
      "IEditConfig": "interface IEditConfig {\n  // 激活触发方式\n  trigger: 'click' | 'dblclick' | 'manual'\n  // 激活类型单元格激活或者行\n  mode: 'cell' | 'row'\n  // 是否显示状态\n  showStatus?: boolean\n  // 自定义编辑规则，返回true可以编辑返回false则禁止编辑\n  activeMethod?: ({row: IRow, column: IColumnConfig})=> boolean\n}",
      "IRecordset": "interface IRecordset {\n  insertRecords: IRow[]\n  removeRecords: IRow[]\n  updateRecords: IRow[]\n}",
      "IPageChangeArgs": "interface IPageChangeArgs { \n  // table组件vue实例\n  $grid: Component\n  // 当前页码\n  currentPage: number\n  //当前分页组件布局信息 'total, prev, pager, next, jumper, sizes'\n  layout: string\n  // 当前每页显示条数\n  pageSize: number\n  //可切换的每页条数\n  pageSizes: number[] \n  //总数据条数\n  total: number \n}",
      "IBeforePageChangeArgs": "interface IBeforePageChangeArgs { \n  //新页码\n  newPage: number\n  //新的分页大小 \n  newPageSize: number\n  //当前页码\n  currentPage: number\n  //当前的页大小\n  currentPageSize: number\n  //生效回调\n  callback: ()=> void\n  //失效回调\n  rollback: ()=> void\n}",
      "IToolbarButtonClickArgs": "interface IToolbarButtonClickArgs { \n  //表格组件实例对象信息 \n  $grid: Component\n  //按钮信息对象 \n  button: {\n    code: string\n    name: string\n  }[]\n  // 按钮功能类型\n  code: string\n}",
      "ICellClickArgs": "interface ICellClickArgs {\n  // 当前行\n  row: IRow,\n  // 当前行的下标\n  rowIndex: number\n  // 当前列\n  column: IColumnConfig\n  // 当前列的下标\n  columnIndex: number\n}",
      "ICellContextMenuArgs": "interface ICellContextMenuArgs {\n  // 当前行\n  row: IRow\n}",
      "ICellArgs": "interface ICellArgs {\n  //当前行\n  row: IRow\n  //当前行的下标\n  rowIndex: number\n  // 当前列 \n  column: IColumnConfig\n  // 当前列的下标 \n  columnIndex: number\n}",
      "ICurrentChangeArgs": "interface ICurrentChangeArgs {\n  // 当前行\n  row: IRow\n}",
      "IEditActivedArgs": "interface IEditActivedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditClosedArgs": "interface IEditClosedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditDisabledArgs": "interface IEditDisabledArgs {\n  //当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IFilterChangeArgs": "interface IFilterChangeArgs {\n  //表格的信息对象\n  $table: Component\n  //过滤列的过滤数据信息\n  filters: object\n}",
      "IFooterCellClickArgs": "interface IFooterCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点 \n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IContextMenuArgs": "interface IContextMenuArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 配置清除等功能信息\n  options: object[]\n  // 表格区域类型\n  type: 'header' | 'footer' | 'body'\n}",
      "IFooterCellDblClickArgs": "interface IFooterCellDblClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IHeaderCellClickArgs": "interface IHeaderCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 点击表头单元格\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 当前点击节点过滤标识\n  triggerFilter: boolean\n  // 当前点击节点排序标识\n  triggerSort: boolean\n}",
      "IHeaderCellDblClickArgs": "interface IHeaderCellDblClickArgs {\n  // 列数据\n  column: IColumnConfig  \n  // 列索引\n  columnIndex: number\n  // table组件 vue实例 \n  $table: Component\n  // 点击的单元格dom\n  cell: HTMLElement\n}",
      "IResizableChangeArgs": "interface IResizableChangeArgs {\n  // table组件的vue 实例 \n  $table: Component,\n  // 列配置信息 \n  column: IColumnConfig \n  // 拖动列的索引\n  columnIndex: number\n  // 是否固定列\n  fixed: boolean\n}",
      "IScrollArgs": "interface IScrollArgs {\n  // 表格实例对象信息\n  $table: Component\n  fixed: boolean\n  // X轴滚动\n  isX: boolean\n  // Y轴滚动\n  isY: true\n  // X轴滚动距离\n  scrollLeft: number\n  // Y轴滚动距离\n  scrollTop: number\n  type: 'body' | 'header' | 'footer'\n}",
      "ISelectAllArgs": "interface ISelectAllArgs {\n  $columnIndex: number\n  $rowIndex: number\n  $seq: string\n  // 表格实例对象信息\n  $table: Component \n  // 勾选状态\n  checked: boolean\n  // 列信息\n  column: IColumnConfig\n  // 列下标\n  columnIndex: number\n  // 表格数据\n  data: IRow[]\n  fixed: boolean\n  isHidden: boolean\n  level: number\n  // 勾选项的行数据信息\n  row: IRow\n  // 勾选项的行下标\n  rowIndex: number\n  // 选中的数据\n  selection: IRow[]\n  seq: number\n}",
      "IToggleExpandChangeArgs": "interface IToggleExpandChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IToggleTreeChangeArgs": "interface IToggleTreeChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IValidErrorArgs": "interface IValidErrorArgs { \n  // 校验的单元格信息对象\n  cell: Cell\n  //校验单元格所在列的列配置信息对象\n  column: IColumnConfig\n  //校验单元格所在行的信息对象\n  row: IRow\n  // 校验规则信息对象 \n  rule: object\n}",
      "ISortChangeArgs": "interface ISortChangeArgs { \n  // 表格实例对象信息\n  $grid: Component\n  // 列信息\n  column: IColumnConfig\n  // 排序的字段名\n  field: string \n  // 排序类型升序或降序\n  order: 'asc' | 'desc' \n  prop: string\n  property: string\n}",
      "IClassNameArgs": "interface IClassNameArgs {\n  seq: number\n  row: IRow\n  rowIndex: number\n  $rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n  $columnIndex: number\n}",
      "IIndexMethodArgs": "interface IIndexMethodArgs {\n  row: IRow\n  rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IFormatConfig": "interface IFormatConfig {\n  // 列数据源\n  data: IColumnConfig[] \n  // 内置渲染器类型，与 format-text 属性取值相同\n  type: 'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate'\n  // 配置为 true 后，支持动态修改 data 的数据。还可以配置为对象，配置为对象时，对象中可以配置 splitConfig.enabled（是否启用分隔配置）、splitConfig.valueSplit（指定 value 值的分隔符）、splitConfig.textSplit（指定 text 的分隔符）、fetch（列数据异步渲染，请求数据）\n  async: true, \n  // 单元格显示内容的映射\n  label: string\n  // 单元格取值的映射\n  value: string\n}",
      "IButtonClick": "interface IButtonClick { \n  // 表格组件实例对象信息\n  $grid: Component \n  // 按钮列表信息对象   \n  button: {\n    code: string\n    name: string\n  }[]\n   // 按钮类型 \n   code: string\n  }",
      "ISettingConfigs": "interface ISettingConfigs {\n  sortType: 'page' | 'all'\n  pageSize: number\n  columns: {\n    property: string\n    order: 'asc' | 'desc' | null \n    visible: boolean\n    sortable: boolean\n  }[]\n}",
      "ISpanMethodArgs": "interface ISpanMethodArgs {\n  // 行标\n  $rowIndex: number\n  // 列数据  \n  column: IColumnConfig\n  // 列下标 \n  columnIndex: number\n  // 一个数组，保存了当前合并和计算的数据\n  data: (string | number | null)[][]\n}",
      "IExportCsvOptions": "interface IExportCsvOptions {\n  filename: string\n  original: boolean\n  isHeader: boolean\n  data: IRow[]\n}",
      "IEditorConfig": "interface IEditorConfig {\n  // 内置组件名称或者自定义组件实例\n  component: 'input' | 'select' | Component\n  // 传递给组件的事件集合\n  events?: {\n    [event]: ()=> void\n  }\n  // 传递给编辑器组件的属性集合\n  attrs?: {\n    [prop]: any\n  }\n  // select 内置组件独有的下拉数据配置项\n  options?: object[]\n}",
      "IFilterConfig": "interface IFilterConfig {\n  // 设置在显示枚举选项功能是否为多选, 仅在 enumable:true 下有效\n  multi: boolean\n  // 设置在过滤面板中显示枚举选项\n  enumable: boolean\n  // 设置在过滤面板中显示默认的筛选条件\n  defaultFilter: boolean\n  // 设置在过滤面板中显示输入筛选的项\n  inputFilter: boolean\n  // 设置在显示枚举选项功能(enumable)下制定静态数据源，也可以是函数返回一个Promise对象\n  values: {\n    // 设置枚举数据的显示值属性字段， 默认'label'\n    label: string\n    // 设置枚举数据的实际值属性字段， 默认'value'\n    value: string \n  }[] | ()=> Promise\n}",
      "IOPConfig": "interface IOPConfig {\n  editConfig?: IEditConfig\n  pagerConfig?: IPagerConfig\n  columns: IColumnConfig[]\n  data: IRow[]\n}",
      "IFormatText": "'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate' | 'boole' | (params)=> string",
      "IToolbarSetting": "interface IToolbarSetting {\n        remote?: boolean\n        storage?: string\n        sortable?: Sortable \n      }"
    },
    "events": [
      {
        "name": "before-page-change",
        "description": "It is triggered when the page is changed when the page is opened, and when the page is turned or the page size is changed",
        "description_zh": "在打开页面改变时的前置处理特性，并且进行翻页操作或者改变页大小操作时触发",
        "params": "(args: IBeforePageChangeArgs)=> void",
        "value": ""
      },
      {
        "name": "cancel-page-change",
        "description": "When there is unsaved data when switching pagination, the prompt box determines the button event",
        "description_zh": "切换分页时有未保存的数据时，提示框确定按钮事件",
        "params": "($grid: Component)=> void",
        "value": ""
      },
      {
        "name": "cell-click",
        "description": "The event is triggered when a cell is clicked",
        "description_zh": "单元格被点击时会触发该事件",
        "params": "(args: ICellClickArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "cell-context-menu",
        "description": "This event is triggered when a cell is right-clicked",
        "description_zh": "单元格被鼠标右键点击时触发该事件",
        "params": "(args: ICellContextMenuArgs)=> void",
        "value": ""
      },
      {
        "name": "cell-dblclick",
        "description": "The event is triggered when a cell is double-clicked",
        "description_zh": "单元格被双击时会触发该事件",
        "params": "(args: ICellArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "cell-mouseenter",
        "description": "The event is triggered when a cell hover enters",
        "description_zh": "当单元格 hover 进入时会触发该事件",
        "params": "(args: ICellArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "cell-mouseleave",
        "description": "The event is triggered when a cell hover exits",
        "description_zh": "当单元格 hover 退出时会触发该事件",
        "params": "(args: ICellArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "context-menu-click",
        "description": "Valid only when context-menu is configured, and will be triggered when the shortcut menu is clicked",
        "description_zh": "只对 context-menu 配置时有效，当点击快捷菜单时会触发该事件",
        "params": "(args: IContextMenuArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "current-change",
        "description": "Valid only for highlightCurrentRow, an event that fires when a row is manually selected and the value changes",
        "description_zh": "只对 highlightCurrentRow 有效，当手动选中行并且值发生改变时触发的事件",
        "params": "(args: ICurrentChangeArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "edit-actived",
        "description": "The event is triggered when a cell is active for editing",
        "description_zh": "单元格被激活编辑时会触发该事件",
        "params": "(args: IEditActivedArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "edit-closed",
        "description": "This event is triggered when a cell is closed while editing is in the state",
        "description_zh": "单元格编辑状态下被关闭时会触发该事件",
        "params": "(args: IEditClosedArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "edit-disabled",
        "description": "The event is triggered when a cell is active and if it is disabled",
        "description_zh": "当单元格激活时如果是禁用状态时会触发该事件",
        "params": "(args: IEditDisabledArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "filter-change",
        "description": "The event is triggered when the filter conditions change",
        "description_zh": "当筛选条件发生变化时会触发该事件",
        "params": "(args: IFilterChangeArgs)=> void",
        "value": ""
      },
      {
        "name": "footer-cell-click",
        "description": "The event is triggered when a footer cell is clicked",
        "description_zh": "表尾单元格被点击时会触发该事件",
        "params": "(args: IFooterCellClickArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "footer-cell-context-menu",
        "description": "This event is triggered when a footer cell is right-clicked",
        "description_zh": "表尾单元格被鼠标右键点击时触发该事件",
        "params": "(args: IContextMenuArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "footer-cell-dblclick",
        "description": "This event is triggered when a footer cell is double-clicked",
        "description_zh": "表尾单元格被双击时会触发该事件",
        "params": "(args: IFooterCellDblClickArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "fullscreen",
        "description": "The time when triggered when fullscreen is fullscreen or when fullscreen is turned off",
        "description_zh": "全屏时或关闭全屏时触发的时间",
        "params": "()=> void",
        "value": ""
      },
      {
        "name": "header-cell-click",
        "description": "This event is triggered when a header cell is clicked",
        "description_zh": "表头单元格被点击时会触发该事件",
        "params": "(args: IHeaderCellClickArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "header-cell-context-menu",
        "description": "This event is triggered when a header cell is right-clicked",
        "description_zh": "表头单元格被鼠标右键点击时触发该事件",
        "params": "(args: IContextMenuArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "header-cell-dblclick",
        "description": "This event is triggered when a header cell is double-clicked",
        "description_zh": "表头单元格被双击时会触发该事件",
        "params": "(args: IHeaderCellDblClickArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "page-change",
        "description": "This event is only valid when the pager-config configuration is configured, and is triggered when the pagination changes",
        "description_zh": "只对 pager-config 配置时有效，分页发生改变时会触发该事件 ",
        "params": "(args: IPageChangeArgs)=> void",
        "value": ""
      },
      {
        "name": "radio-change",
        "description": "Valid only for type=radio events that are triggered when manually checked and the value changes",
        "description_zh": "只对 type=radio 有效，当手动勾选并且值发生改变时触发的事件",
        "params": "($table: Component, event: Event)=> void",
        "value": ""
      },
      {
        "name": "resizable-change",
        "description": "This event is triggered when the column width drag changes",
        "description_zh": "当列宽拖动发生变化时会触发该事件",
        "params": "(args: IResizableChangeArgs)=> void",
        "value": ""
      },
      {
        "name": "scroll",
        "description": "This event is triggered when the table is scrolling",
        "description_zh": "表格滚动时会触发该事件",
        "params": "(args: IScrollArgs)=> void",
        "value": ""
      },
      {
        "name": "select-all",
        "description": "Valid only for type=selection, which is triggered when you manually check all selections",
        "description_zh": "只对 type=selection 有效，当手动勾选全选时触发的事件",
        "params": "(args: ISelectAllArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "select-change",
        "description": "Valid only for type=selection, an event that is triggered when the value is manually checked and the value is changed",
        "description_zh": "只对 type=selection 有效，当手动勾选并且值发生改变时触发的事件",
        "params": "(args: ISelectChangeArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "sort-change",
        "description": "Click on the column header to trigger the event before data sorting",
        "description_zh": "点击列头，执行数据排序前触发的事件",
        "params": "(args: ISortChangeArgs)=> void",
        "value": ""
      },
      {
        "name": "toggle-expand-change",
        "description": "This event is triggered when a row is expanded or collapsed",
        "description_zh": "当行展开或收起时会触发该事件",
        "params": "(args: IToggleExpandChangeArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "toggle-tree-change",
        "description": "This event is triggered when a tree node is expanded or collapsed",
        "description_zh": "当树节点展开或收起时会触发该事件",
        "params": "(args: IToggleTreeChangeArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "toolbar-button-click",
        "description": "Valid only when toolbar.buttons is configured, and triggers the event when a toolbar button is clicked",
        "description_zh": "只对 toolbar.buttons 配置时有效，当工具栏的按钮被点击时会后触发该事件",
        "params": "(args: IToolbarButtonClickArgs, event: Event)=> void",
        "value": ""
      },
      {
        "name": "valid-error",
        "description": "This event is triggered when the data verification fails",
        "description_zh": "当数据校验不通过时会触发该事件",
        "params": "(args: IValidErrorArgs)=> void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "default",
        "description": "Default Slots (Table Columns)",
        "description_zh": "默认插槽（表格列）",
        "value": ""
      },
      {
        "name": "empty",
        "description": "The text content that is displayed when the data is empty",
        "description_zh": "空数据时显示的文本内容",
        "value": ""
      },
      {
        "name": "toolbar",
        "description": "Toolbar, (contains: zoom, personalization, refresh table, custom buttons)",
        "description_zh": "工具栏，（包含：缩放、个性化、刷新表格、自定义按钮)",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "Default Slots (Table Columns)",
        "description_zh": "默认插槽（表格列）"
      },
      {
        "name": "empty",
        "description": "The text content that is displayed when the data is empty",
        "description_zh": "空数据时显示的文本内容"
      },
      {
        "name": "toolbar",
        "description": "Toolbar, (contains: zoom, personalization, refresh table, custom buttons)",
        "description_zh": "工具栏，（包含：缩放、个性化、刷新表格、自定义按钮)"
      }
    ],
    "filename": "Grid"
  },
  {
    "name": "TinyGridColumn",
    "props": {
      "align": {
        "default": "'left'",
        "value": "",
        "type": "left / center / right",
        "description": "Column alignment",
        "description_zh": "列对齐方式"
      },
      "class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs)=> string",
        "description": "Append a className to a cell, which can also be a function",
        "description_zh": "给单元格附加 className，也可以是函数"
      },
      "editor": {
        "default": "--",
        "value": "",
        "type": "IEditorConfig | (h, {row:Row, column: IColumnConfig})=> Component",
        "description": "Cell edit renders configuration items, or it can be a function that returns a Vue component",
        "description_zh": "单元格编辑渲染配置项，也可以是函数返回 Vue 组件"
      },
      "filter": {
        "default": "false",
        "value": "",
        "type": "boolean | IFilterConfig",
        "description": "Set the filter configuration information for table columns. The default value is false and no filtering information is configured",
        "description_zh": "设置表格列的筛选配置信息。默认值为 false 不配置筛选信息"
      },
      "fixed": {
        "default": "--",
        "value": "",
        "type": "left / right",
        "description": "Pin the column to the left side, where freezable can be frozen and unfrozen, and can be operated in the table personalization panel, while frozen can only be frozen and cannot be unfrozen, and cannot be operated in the personalization panel; Pin the column to the left or right (note: the fixed column should be placed on the left and right sides)",
        "description_zh": "将列固定在左侧，其中 freezable 可冻结可解冻，在表格个性化面板中可操作，而 frozen 只能冻结不能解冻，在个性化面板中不可操作；将列固定在左侧或者右侧（注意：固定列应该放在左右两侧的位置）"
      },
      "footer-align": {
        "default": "'left'",
        "value": "",
        "type": "left / center / right",
        "description": "Alignment of the footer column)",
        "description_zh": "表尾列的对齐方式）"
      },
      "footer-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs)=> string",
        "description": "Append className to the cells in the footer, which can also be a function",
        "description_zh": "给表尾的单元格附加 className，也可以是函数"
      },
      "format-config": {
        "default": "--",
        "value": "",
        "type": "IFormatConfig",
        "description": "Enable asynchronous rendering of data in this column",
        "description_zh": "开启该列数据异步渲染"
      },
      "format-text": {
        "default": "--",
        "value": "",
        "type": "IFormatText",
        "description": "Set the display and edit type of the current table column; Set the display of the current table column to get the edit type, or it can be a function",
        "description_zh": "设置当前表格列的显示获取编辑类型；设置当前表格列的显示获取编辑类型，也可以是函数"
      },
      "header-align": {
        "default": "'left'",
        "value": "",
        "type": "left / center / right",
        "description": "The alignment of the header column",
        "description_zh": "表头列的对齐方式"
      },
      "header-class-name": {
        "default": "--",
        "value": "",
        "type": "string | (args: IClassNameArgs)=> string",
        "description": "Set the column header style name; Append className to the cells in the header, which can also be a function",
        "description_zh": "设置列头样式名称；给表头的单元格附加 className，也可以是函数"
      },
      "index-method": {
        "default": "--",
        "value": "",
        "type": "string | (args: IIndexMethodArgs)=> string",
        "description": "Valid only for type=index, custom indexing method",
        "description_zh": "只对 type=index 有效，自定义索引方法"
      },
      "min-width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "minimum column width; The remaining space is automatically proportionalized; The optional value for this property is integer, px,%",
        "description_zh": "最小列宽度；会自动将剩余空间按比例分配；该属性的可选值为 整数, px，%"
      },
      "multi": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "is a built-in property of the filter object, which allows multiple selections to be filtered; Set whether to display the Select columns check box. Valid when columnType is select",
        "description_zh": "是 filter 对象内置的属性，筛选是否允许多选；设置选择列是否显示复选框。当 columnType 为 select 时有效"
      },
      ":params": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Additional parameters (some custom data parameters, may be used for some special scenarios)",
        "description_zh": "额外的参数（自定义一些数据参数，对于某些特殊的场景可能会用到）"
      },
      "remote-sort": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to use server-side sorting, if set to true, the data will not be processed",
        "description_zh": "是否使用服务端排序，如果设置为 true 则不会对数据进行处理"
      },
      "renderer": {
        "default": "--",
        "value": "",
        "type": "IEditorConfig | (h, {row: IRow, column: IColumnConfig})=> Component",
        "description": "Sets the rendering type of the table column. Its priority is higher than the column's type attribute configuration; The cell renders a configuration item that takes precedence over the column's formatText property configuration",
        "description_zh": "设置表格列的渲染类型。其优先级高于列的 type 属性配置；单元格渲染配置项，其优先级高于列的 formatText 属性配置"
      },
      "required": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "If not, it will be automatically generated based on the validation rules",
        "description_zh": "是否必填，如不设置，则会根据校验规则自动生成"
      },
      "resizable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Set whether the column width can be adjusted; Whether the column allows dragging the column width to resize",
        "description_zh": "设置该列是否可以调整列宽；列是否允许拖动列宽调整大小"
      },
      "rules": {
        "default": "--",
        "value": "",
        "type": "IValidRules",
        "description": "Validation of forms",
        "description_zh": "表单的验证功能"
      },
      "show-header-overflow": {
        "default": "--",
        "value": "",
        "type": "string | boolean",
        "description": "When the header is too long, it is displayed as an ellipsis; The optional values for this property are ellipsis (only the ellipsis is displayed), title (and is displayed as native title), tooltip (and is displayed as a tooltip hint)",
        "description_zh": "当表头内容过长时显示为省略号；该属性的可选值为 ellipsis （只显示省略号）， title （并且显示为原生 title ）， tooltip （并且显示为 tooltip 提示）"
      },
      "show-header-tip": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the table column header needs to be prompted",
        "description_zh": "表格列头是否需要提示"
      },
      "show-icon": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the column header edit icon is valid when editing",
        "description_zh": "是否显示列头编辑图标，在编辑时有效"
      },
      "show-overflow": {
        "default": "--",
        "value": "",
        "type": "string | boolean",
        "description": "When the content is too long, it is displayed as an ellipsis; The optional values for this property are ellipsis (which shows only the ellipsis), title (and appears as the native title), tooltip (and displays it as a tooltip hint)",
        "description_zh": "当内容过长时显示为省略号；该属性的可选值为 ellipsis（只显示省略号）, title（并且显示为原生 title）, tooltip（并且显示为 tooltip 提示）"
      },
      "show-tip": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Table column cells need a prompt",
        "description_zh": "表格列单元格是否需要提示"
      },
      "sort-by": {
        "default": "--",
        "value": "",
        "type": "string | string[]",
        "description": "Only valid for sortable, custom sorted properties",
        "description_zh": "只对 sortable 有效，自定义排序的属性"
      },
      "sort-method": {
        "default": "--",
        "value": "",
        "type": "(row1: IRow, row2: IRow)=> boolean",
        "description": "Customize the sorting method for all columns, which will be called when sorting is triggered",
        "description_zh": "自定义所有列的排序方法，当触发排序时会调用该函数"
      },
      "sortable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Specifies whether the data in the column can be sorted",
        "description_zh": "设置该列数据是否可以排序"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string | (h, params)=> string | VNode",
        "description": "Column headers (internationalization is supported), which can be functions",
        "description_zh": "列标题（支持开启国际化），可以是函数"
      },
      "tree-node": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Valid only when tree-config is configured, specified as a tree node",
        "description_zh": "只对 tree-config 配置时有效，指定为树节点"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "index / selection / radio / expand",
        "description": "Set the type of built-in column",
        "description_zh": "设置内置列的类型"
      },
      "width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "Set the width of the column, which can be pixels or percentages or auto, when set to auto, the column width will automatically adapt; The optional values for this property are integer , px , %",
        "description_zh": "设置列的宽度，可以是像素或者百分比或者 auto ，设置为 auto 时，列宽会自动适应；该属性的可选值为 整数 ， px ，%"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "typeDetail": {
      "IRow": "interface IRow {\n  // 表格行数据\n  [filed: string]: any\n}",
      "IColumnConfig": "interface IColumnConfig {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  prop: string\n  rules: IValidRules\n  required: boolean\n  property: string\n  title: string\n  label: string\n  width: string | number\n  minWidth: string | number\n  resizable: boolean\n  fixed: boolean\n  align: 'left' | 'center' | 'right'\n  headerAlign: 'left' | 'center' | 'right'\n  footerAlign: 'left' | 'center' | 'right'\n  showOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showHeaderOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showTip: boolean\n  showHeaderTip: boolean\n  className: string\n  headerClassName: string\n  footerClassName: string\n}",
      "IPagerConfig": "interface IPagerConfig {\n  component?: Component\n  attrs: {\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    total: number\n    // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n    layout: string\n  }\n}",
      "IDataHandler": "interface IDataHandler {\n  api: ()=> Promise\n}",
      "IRowGroup": "interface IRowGroup {\n  // 列标识符，行分组会将具有相同值的列进行分组展示\n  field: string\n}",
      "IToolbarConfig": "interface IToolbarConfig {\n  component: GridToolbar\n  buttons: {\n    code: string\n    name: string\n  }[]\n}",
      "IToolTipConfig": "interface IToolTipConfig {\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'\n  visibleArrow?: boolean\n  enterable?: boolean\n  type?: 'normal' | 'warning' | 'error' | 'info' | 'success'\n  effect?: 'dark' | 'light'\n  // 自定义提示内容\n  contentMethod?: ()=> string | VNode\n}",
      "IContextMenuConfig": "interface IMenuOptions {\n  code: string\n  name: string\n  visible?: boolean\n  disabled?: boolean\n}\n\ninterface IContextMenuConfig {\n  body?: { \n    options: IMenuOptions\n  }\n  footer?: { \n    options: IMenuOptions\n  }\n  visibleMethod?: ()=> boolean\n}",
      "IValidRules": "interface IValidRules {\n [filed:string]: { \n  type?: string\n  required?: boolean\n  validator?: () => boolean\n  message?: string\n  min?: number\n  max?: number\n }\n}[]",
      "IExpandConfig": "interface IExpandConfig {\n  // 默认展开所有行\n  expandAll?: boolean \n  // 触发方式 default（点击按钮触发）,cell（点击单元格触发）,row（点击行触发）\n  trigger?: 'default' | 'row' | cell\n  // 默认展开指定行（需要有 row-id）\n  expandRowKeys?: string[]\n  // 对于同一级的节点，每次只能展开一个\n  accordion?: boolean\n  // 控制是否渲染展开行\n  activeMethod?:({row: IRow})=> boolean\n  // 配置是否显示展开图标\n  showIcon?: boolean \n}",
      "IOptimizationConfig": "interface IOptimizationConfig {\n  animat: boolean\n  delayHover: number\n  scrollX: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 X 虚拟滚动，必须固定所有列宽，否则无法兼容）默认100\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number\n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数\n    vSize?: number\n  }\n  scrollY: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 Y 虚拟滚动，必须固定所有行高，否则无法兼容）默认500\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number \n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数 默认自动计算\n    vSize?: number \n    // 指定行高 默认自动计算\n    rHeight?: number \n    // 自动适配最优的渲染方式 默认true\n    adaptive?: boolean \n  }\n}",
      "IKeyboardConfig": "interface IKeyboardConfig {\n  // 启用方向键功能\n  isArrow?: boolean \n  isDel?: boolean\n  isTab?: boolean \n  isEdit?: boolean\n}",
      "IMouseConfig": "interface IMouseConfig {\n  // 是否开启左键选中单元格功能（只对 editConfig.mode=cell 有效），默认为 false\n  selected: boolean \n}",
      "IRadioConfig": "interface IRadioConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row' \n  // 单选框显示的字段名，可以直接显示在单选框中\n  labelField?: string |\n  // 默认选中指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKey?: string\n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 Radio 是否可以选中\n  checkMethod?: ()=> boolean\n}",
      "ISelectConfig": "interface ISelectConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row'\n  // 复选框显示的字段名，可以直接显示在复选框中\n  labelField?: string\n  // 默认勾选开指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKeys?: string[] \n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 checkbox 是否可以勾选\n  checkMethod?: ()=> boolean \n  // 默认勾选所有（只会在初始化时被触发一次）}\n  checkAll?: boolean\n  // 是否显示全选按钮（如果 checkStrictly=true 则默认为 false）\n  showHeader?: boolean \n  // 是否严格的遵循父子不互相关联的做法\n  checkStrictly?: boolean\n  // 翻页操作是否保留历史选择数据\n  reserve?: boolean\n}",
      "ISortConfig": "interface ISortConfig {\n  // 排序触发方式，可配置为 cell（点击头部单元格触发排序），不配置时默认为点击上下箭头触发排序\n  trigger?: 'cell'\n}",
      "ITreeConfig": "interface ITreeConfig {\n  // 展开子级触发方式：'default'(点击按钮触发)；'cell'(点击单元格触发)；'row'(点击行触发)\n  trigger?: 'default' | 'cell' | 'row'\n  // 子级索引是否按数字递增显示：true(子级索引按数字递增显示，父级1，子级2)；false(子级索引在父级索引基础上增加，父级1，子级1.1)\n  ordered?: boolean\n  // 控制水平缩进距离，默认 16，单位 px\n  indent?: number\n  // 指定子级数据的字段名\n  children?: string\n  // 是否展开所有行\n  expandAll?: boolean\n  // 默认展开所给数组中的指定行，需要有row-id，可以由行的'_RID'属性获取\n  expandRowKeys?: string[]\n  // 对于同一级的多个子节点，是否只能同时展开一个子节点\n  accordion?: boolean\n}",
      "IValidConfig": "interface IValidConfig {\n  // 校验提示类型，'inline'(内置提示)；'tooltip'(tooltip文字提示)\n  message?: 'inline' | 'tooltip'\n}",
      "ISummaryConfig": "interface ISummaryConfig {\n  // 统计字段名 \n  fields: string[]\n  // 小数点后保留的小数位\n  fraction?: boolean\n  // 是否截断，默认为四舍五入，不截断\n  truncate?: boolean\n  // 统计显示的文本\n   text?: string\n}",
      "IScrollLoadConfig": "interface IScrollLoadConfig {\n  // 是否连续\n  isInfinity: boolean\n  // 每次加载多少条\n  pageSize: number\n}",
      "IEventsConfig": "interface IEventsConfig {\n  [field: string]: ()=> void\n}",
      "IDropConfig": "interface IDropConfig {\n  // sortablejs 插件\n  plugin: Sortable\n  // 开启行拖拽\n  row: boolean\n  // 开启列拖拽\n  column: boolean\n  // 拖拽前函数，返回 false 取消拖动\n  onBeforeMove?: ()=> boolean\n  // 拖拽触发源选择器一般是class类名\n  trigger?: string\n  // 根据行的类名来控制是否可以拖动\n  filter?: string\n  // 如果变动了树层级，可以指定是否需要刷新数据\n  refresh?: boolean\n  }",
      "IEditConfig": "interface IEditConfig {\n  // 激活触发方式\n  trigger: 'click' | 'dblclick' | 'manual'\n  // 激活类型单元格激活或者行\n  mode: 'cell' | 'row'\n  // 是否显示状态\n  showStatus?: boolean\n  // 自定义编辑规则，返回true可以编辑返回false则禁止编辑\n  activeMethod?: ({row: IRow, column: IColumnConfig})=> boolean\n}",
      "IRecordset": "interface IRecordset {\n  insertRecords: IRow[]\n  removeRecords: IRow[]\n  updateRecords: IRow[]\n}",
      "IPageChangeArgs": "interface IPageChangeArgs { \n  // table组件vue实例\n  $grid: Component\n  // 当前页码\n  currentPage: number\n  //当前分页组件布局信息 'total, prev, pager, next, jumper, sizes'\n  layout: string\n  // 当前每页显示条数\n  pageSize: number\n  //可切换的每页条数\n  pageSizes: number[] \n  //总数据条数\n  total: number \n}",
      "IBeforePageChangeArgs": "interface IBeforePageChangeArgs { \n  //新页码\n  newPage: number\n  //新的分页大小 \n  newPageSize: number\n  //当前页码\n  currentPage: number\n  //当前的页大小\n  currentPageSize: number\n  //生效回调\n  callback: ()=> void\n  //失效回调\n  rollback: ()=> void\n}",
      "IToolbarButtonClickArgs": "interface IToolbarButtonClickArgs { \n  //表格组件实例对象信息 \n  $grid: Component\n  //按钮信息对象 \n  button: {\n    code: string\n    name: string\n  }[]\n  // 按钮功能类型\n  code: string\n}",
      "ICellClickArgs": "interface ICellClickArgs {\n  // 当前行\n  row: IRow,\n  // 当前行的下标\n  rowIndex: number\n  // 当前列\n  column: IColumnConfig\n  // 当前列的下标\n  columnIndex: number\n}",
      "ICellContextMenuArgs": "interface ICellContextMenuArgs {\n  // 当前行\n  row: IRow\n}",
      "ICellArgs": "interface ICellArgs {\n  //当前行\n  row: IRow\n  //当前行的下标\n  rowIndex: number\n  // 当前列 \n  column: IColumnConfig\n  // 当前列的下标 \n  columnIndex: number\n}",
      "ICurrentChangeArgs": "interface ICurrentChangeArgs {\n  // 当前行\n  row: IRow\n}",
      "IEditActivedArgs": "interface IEditActivedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditClosedArgs": "interface IEditClosedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditDisabledArgs": "interface IEditDisabledArgs {\n  //当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IFilterChangeArgs": "interface IFilterChangeArgs {\n  //表格的信息对象\n  $table: Component\n  //过滤列的过滤数据信息\n  filters: object\n}",
      "IFooterCellClickArgs": "interface IFooterCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点 \n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IContextMenuArgs": "interface IContextMenuArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 配置清除等功能信息\n  options: object[]\n  // 表格区域类型\n  type: 'header' | 'footer' | 'body'\n}",
      "IFooterCellDblClickArgs": "interface IFooterCellDblClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IHeaderCellClickArgs": "interface IHeaderCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 点击表头单元格\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 当前点击节点过滤标识\n  triggerFilter: boolean\n  // 当前点击节点排序标识\n  triggerSort: boolean\n}",
      "IHeaderCellDblClickArgs": "interface IHeaderCellDblClickArgs {\n  // 列数据\n  column: IColumnConfig  \n  // 列索引\n  columnIndex: number\n  // table组件 vue实例 \n  $table: Component\n  // 点击的单元格dom\n  cell: HTMLElement\n}",
      "IResizableChangeArgs": "interface IResizableChangeArgs {\n  // table组件的vue 实例 \n  $table: Component,\n  // 列配置信息 \n  column: IColumnConfig \n  // 拖动列的索引\n  columnIndex: number\n  // 是否固定列\n  fixed: boolean\n}",
      "IScrollArgs": "interface IScrollArgs {\n  // 表格实例对象信息\n  $table: Component\n  fixed: boolean\n  // X轴滚动\n  isX: boolean\n  // Y轴滚动\n  isY: true\n  // X轴滚动距离\n  scrollLeft: number\n  // Y轴滚动距离\n  scrollTop: number\n  type: 'body' | 'header' | 'footer'\n}",
      "ISelectAllArgs": "interface ISelectAllArgs {\n  $columnIndex: number\n  $rowIndex: number\n  $seq: string\n  // 表格实例对象信息\n  $table: Component \n  // 勾选状态\n  checked: boolean\n  // 列信息\n  column: IColumnConfig\n  // 列下标\n  columnIndex: number\n  // 表格数据\n  data: IRow[]\n  fixed: boolean\n  isHidden: boolean\n  level: number\n  // 勾选项的行数据信息\n  row: IRow\n  // 勾选项的行下标\n  rowIndex: number\n  // 选中的数据\n  selection: IRow[]\n  seq: number\n}",
      "IToggleExpandChangeArgs": "interface IToggleExpandChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IToggleTreeChangeArgs": "interface IToggleTreeChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IValidErrorArgs": "interface IValidErrorArgs { \n  // 校验的单元格信息对象\n  cell: Cell\n  //校验单元格所在列的列配置信息对象\n  column: IColumnConfig\n  //校验单元格所在行的信息对象\n  row: IRow\n  // 校验规则信息对象 \n  rule: object\n}",
      "ISortChangeArgs": "interface ISortChangeArgs { \n  // 表格实例对象信息\n  $grid: Component\n  // 列信息\n  column: IColumnConfig\n  // 排序的字段名\n  field: string \n  // 排序类型升序或降序\n  order: 'asc' | 'desc' \n  prop: string\n  property: string\n}",
      "IClassNameArgs": "interface IClassNameArgs {\n  seq: number\n  row: IRow\n  rowIndex: number\n  $rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n  $columnIndex: number\n}",
      "IIndexMethodArgs": "interface IIndexMethodArgs {\n  row: IRow\n  rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IFormatConfig": "interface IFormatConfig {\n  // 列数据源\n  data: IColumnConfig[] \n  // 内置渲染器类型，与 format-text 属性取值相同\n  type: 'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate'\n  // 配置为 true 后，支持动态修改 data 的数据。还可以配置为对象，配置为对象时，对象中可以配置 splitConfig.enabled（是否启用分隔配置）、splitConfig.valueSplit（指定 value 值的分隔符）、splitConfig.textSplit（指定 text 的分隔符）、fetch（列数据异步渲染，请求数据）\n  async: true, \n  // 单元格显示内容的映射\n  label: string\n  // 单元格取值的映射\n  value: string\n}",
      "IButtonClick": "interface IButtonClick { \n  // 表格组件实例对象信息\n  $grid: Component \n  // 按钮列表信息对象   \n  button: {\n    code: string\n    name: string\n  }[]\n   // 按钮类型 \n   code: string\n  }",
      "ISettingConfigs": "interface ISettingConfigs {\n  sortType: 'page' | 'all'\n  pageSize: number\n  columns: {\n    property: string\n    order: 'asc' | 'desc' | null \n    visible: boolean\n    sortable: boolean\n  }[]\n}",
      "ISpanMethodArgs": "interface ISpanMethodArgs {\n  // 行标\n  $rowIndex: number\n  // 列数据  \n  column: IColumnConfig\n  // 列下标 \n  columnIndex: number\n  // 一个数组，保存了当前合并和计算的数据\n  data: (string | number | null)[][]\n}",
      "IExportCsvOptions": "interface IExportCsvOptions {\n  filename: string\n  original: boolean\n  isHeader: boolean\n  data: IRow[]\n}",
      "IEditorConfig": "interface IEditorConfig {\n  // 内置组件名称或者自定义组件实例\n  component: 'input' | 'select' | Component\n  // 传递给组件的事件集合\n  events?: {\n    [event]: ()=> void\n  }\n  // 传递给编辑器组件的属性集合\n  attrs?: {\n    [prop]: any\n  }\n  // select 内置组件独有的下拉数据配置项\n  options?: object[]\n}",
      "IFilterConfig": "interface IFilterConfig {\n  // 设置在显示枚举选项功能是否为多选, 仅在 enumable:true 下有效\n  multi: boolean\n  // 设置在过滤面板中显示枚举选项\n  enumable: boolean\n  // 设置在过滤面板中显示默认的筛选条件\n  defaultFilter: boolean\n  // 设置在过滤面板中显示输入筛选的项\n  inputFilter: boolean\n  // 设置在显示枚举选项功能(enumable)下制定静态数据源，也可以是函数返回一个Promise对象\n  values: {\n    // 设置枚举数据的显示值属性字段， 默认'label'\n    label: string\n    // 设置枚举数据的实际值属性字段， 默认'value'\n    value: string \n  }[] | ()=> Promise\n}",
      "IOPConfig": "interface IOPConfig {\n  editConfig?: IEditConfig\n  pagerConfig?: IPagerConfig\n  columns: IColumnConfig[]\n  data: IRow[]\n}",
      "IFormatText": "'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate' | 'boole' | (params)=> string",
      "IToolbarSetting": "interface IToolbarSetting {\n        remote?: boolean\n        storage?: string\n        sortable?: Sortable \n      }"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "自定义显示内容模板，作用插槽参数说明：slots.default({ $table, column, row },h)，$table：表格组件对象，column：当前列配置，row：当前行数据,h：vue的渲染函数",
        "description_zh": "自定义显示内容模板，作用插槽参数说明：slots.default({ $table, column, row },h)，$table：表格组件对象，column：当前列配置，row：当前行数据,h：vue的渲染函数"
      },
      {
        "name": "edit",
        "description": "自定义可编辑组件模板，作用插槽参数说明：slots.edit({ $table, column, row },h)，$table：表格组件对象，column：当前列配置，row：当前行数据,h：vue的渲染函数",
        "description_zh": "自定义可编辑组件模板，作用插槽参数说明：slots.edit({ $table, column, row },h)，$table：表格组件对象，column：当前列配置，row：当前行数据,h：vue的渲染函数"
      },
      {
        "name": "filter",
        "description": "自定义筛选模板，作用插槽参数说明：slots.filter({ $grid, values, args, context },h)，$grid：表格组件对象，values：筛选项集合，args：筛选相关参数,context：筛选面板组件上下文对象",
        "description_zh": "自定义筛选模板，作用插槽参数说明：slots.filter({ $grid, values, args, context },h)，$grid：表格组件对象，values：筛选项集合，args：筛选相关参数,context：筛选面板组件上下文对象"
      },
      {
        "name": "header",
        "description": "自定义表头内容的模板，作用插槽参数说明：slots.header({ $table, column, columnIndex，$rowIndex},h)，$table：表格组件对象，column：当前列配置，columnIndex：当前列索引,$rowIndex:当前行索引,h：vue的渲染函数",
        "description_zh": "自定义表头内容的模板，作用插槽参数说明：slots.header({ $table, column, columnIndex，$rowIndex},h)，$table：表格组件对象，column：当前列配置，columnIndex：当前列索引,$rowIndex:当前行索引,h：vue的渲染函数"
      }
    ],
    "filename": "GridColumn"
  },
  {
    "name": "TinyGridToolbar",
    "props": {
      "before-close-full-screen": {
        "default": "--",
        "value": "",
        "type": "()=> boolean",
        "description": "Disable the blocking method before full screen, return false to prevent full screen from being closed, and return true to not block",
        "description_zh": "关闭全屏前的拦截方法，返回 false 则阻止关闭全屏，返回 true 则不阻止"
      },
      "before-open-full-screen": {
        "default": "--",
        "value": "",
        "type": "()=> boolean",
        "description": "The interception method before the full screen returns false to block the full screen, and true does not block it",
        "description_zh": "全屏前的拦截方法，返回 false 则阻止全屏，返回 true 则不阻止"
      },
      "buttons": {
        "default": "--",
        "value": "",
        "type": "{            code: string            name: string          }[]",
        "description": "A list of buttons",
        "description_zh": "按钮列表"
      },
      "full-screen": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Set whether the table can be full-screen, or the container that needs to be full-screen; Sets whether the toolbar properties display a full-screen button",
        "description_zh": "设置表格是否可以全屏，或者需要全屏的容器；设置工具栏属性是否显示全屏按钮"
      },
      "id": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Unique ID identification",
        "description_zh": "唯一 ID 标识"
      },
      "refresh": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "The toolbar component enables the table refresh function",
        "description_zh": "工具栏组件开启表格刷新功能"
      },
      "resizable": {
        "default": "--",
        "value": "",
        "type": "boolean | {storage: boolean}",
        "description": "Column width drag configuration (ID required)",
        "description_zh": "列宽拖动配置（需要设置 id）"
      },
      "setting": {
        "default": "--",
        "value": "",
        "type": "boolean | IToolbarSetting",
        "description": "Set whether the table properties display the personalization panel, which is valid when the name attribute of the table is set; Set whether toolbar properties display personalization (ID required)",
        "description_zh": "设置表格属性是否显示个性化面板，当设置表格的 name 属性时有效；设置工具栏属性是否显示个性化配置（需要设置 id ）"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "medium / small / mini",
        "description": "The size of the table",
        "description_zh": "表格的尺寸"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
    "typeDetail": {
      "IRow": "interface IRow {\n  // 表格行数据\n  [filed: string]: any\n}",
      "IColumnConfig": "interface IColumnConfig {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  prop: string\n  rules: IValidRules\n  required: boolean\n  property: string\n  title: string\n  label: string\n  width: string | number\n  minWidth: string | number\n  resizable: boolean\n  fixed: boolean\n  align: 'left' | 'center' | 'right'\n  headerAlign: 'left' | 'center' | 'right'\n  footerAlign: 'left' | 'center' | 'right'\n  showOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showHeaderOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showTip: boolean\n  showHeaderTip: boolean\n  className: string\n  headerClassName: string\n  footerClassName: string\n}",
      "IPagerConfig": "interface IPagerConfig {\n  component?: Component\n  attrs: {\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    total: number\n    // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n    layout: string\n  }\n}",
      "IDataHandler": "interface IDataHandler {\n  api: ()=> Promise\n}",
      "IRowGroup": "interface IRowGroup {\n  // 列标识符，行分组会将具有相同值的列进行分组展示\n  field: string\n}",
      "IToolbarConfig": "interface IToolbarConfig {\n  component: GridToolbar\n  buttons: {\n    code: string\n    name: string\n  }[]\n}",
      "IToolTipConfig": "interface IToolTipConfig {\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'\n  visibleArrow?: boolean\n  enterable?: boolean\n  type?: 'normal' | 'warning' | 'error' | 'info' | 'success'\n  effect?: 'dark' | 'light'\n  // 自定义提示内容\n  contentMethod?: ()=> string | VNode\n}",
      "IContextMenuConfig": "interface IMenuOptions {\n  code: string\n  name: string\n  visible?: boolean\n  disabled?: boolean\n}\n\ninterface IContextMenuConfig {\n  body?: { \n    options: IMenuOptions\n  }\n  footer?: { \n    options: IMenuOptions\n  }\n  visibleMethod?: ()=> boolean\n}",
      "IValidRules": "interface IValidRules {\n [filed:string]: { \n  type?: string\n  required?: boolean\n  validator?: () => boolean\n  message?: string\n  min?: number\n  max?: number\n }\n}[]",
      "IExpandConfig": "interface IExpandConfig {\n  // 默认展开所有行\n  expandAll?: boolean \n  // 触发方式 default（点击按钮触发）,cell（点击单元格触发）,row（点击行触发）\n  trigger?: 'default' | 'row' | cell\n  // 默认展开指定行（需要有 row-id）\n  expandRowKeys?: string[]\n  // 对于同一级的节点，每次只能展开一个\n  accordion?: boolean\n  // 控制是否渲染展开行\n  activeMethod?:({row: IRow})=> boolean\n  // 配置是否显示展开图标\n  showIcon?: boolean \n}",
      "IOptimizationConfig": "interface IOptimizationConfig {\n  animat: boolean\n  delayHover: number\n  scrollX: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 X 虚拟滚动，必须固定所有列宽，否则无法兼容）默认100\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number\n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数\n    vSize?: number\n  }\n  scrollY: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 Y 虚拟滚动，必须固定所有行高，否则无法兼容）默认500\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number \n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数 默认自动计算\n    vSize?: number \n    // 指定行高 默认自动计算\n    rHeight?: number \n    // 自动适配最优的渲染方式 默认true\n    adaptive?: boolean \n  }\n}",
      "IKeyboardConfig": "interface IKeyboardConfig {\n  // 启用方向键功能\n  isArrow?: boolean \n  isDel?: boolean\n  isTab?: boolean \n  isEdit?: boolean\n}",
      "IMouseConfig": "interface IMouseConfig {\n  // 是否开启左键选中单元格功能（只对 editConfig.mode=cell 有效），默认为 false\n  selected: boolean \n}",
      "IRadioConfig": "interface IRadioConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row' \n  // 单选框显示的字段名，可以直接显示在单选框中\n  labelField?: string |\n  // 默认选中指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKey?: string\n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 Radio 是否可以选中\n  checkMethod?: ()=> boolean\n}",
      "ISelectConfig": "interface ISelectConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row'\n  // 复选框显示的字段名，可以直接显示在复选框中\n  labelField?: string\n  // 默认勾选开指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKeys?: string[] \n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 checkbox 是否可以勾选\n  checkMethod?: ()=> boolean \n  // 默认勾选所有（只会在初始化时被触发一次）}\n  checkAll?: boolean\n  // 是否显示全选按钮（如果 checkStrictly=true 则默认为 false）\n  showHeader?: boolean \n  // 是否严格的遵循父子不互相关联的做法\n  checkStrictly?: boolean\n  // 翻页操作是否保留历史选择数据\n  reserve?: boolean\n}",
      "ISortConfig": "interface ISortConfig {\n  // 排序触发方式，可配置为 cell（点击头部单元格触发排序），不配置时默认为点击上下箭头触发排序\n  trigger?: 'cell'\n}",
      "ITreeConfig": "interface ITreeConfig {\n  // 展开子级触发方式：'default'(点击按钮触发)；'cell'(点击单元格触发)；'row'(点击行触发)\n  trigger?: 'default' | 'cell' | 'row'\n  // 子级索引是否按数字递增显示：true(子级索引按数字递增显示，父级1，子级2)；false(子级索引在父级索引基础上增加，父级1，子级1.1)\n  ordered?: boolean\n  // 控制水平缩进距离，默认 16，单位 px\n  indent?: number\n  // 指定子级数据的字段名\n  children?: string\n  // 是否展开所有行\n  expandAll?: boolean\n  // 默认展开所给数组中的指定行，需要有row-id，可以由行的'_RID'属性获取\n  expandRowKeys?: string[]\n  // 对于同一级的多个子节点，是否只能同时展开一个子节点\n  accordion?: boolean\n}",
      "IValidConfig": "interface IValidConfig {\n  // 校验提示类型，'inline'(内置提示)；'tooltip'(tooltip文字提示)\n  message?: 'inline' | 'tooltip'\n}",
      "ISummaryConfig": "interface ISummaryConfig {\n  // 统计字段名 \n  fields: string[]\n  // 小数点后保留的小数位\n  fraction?: boolean\n  // 是否截断，默认为四舍五入，不截断\n  truncate?: boolean\n  // 统计显示的文本\n   text?: string\n}",
      "IScrollLoadConfig": "interface IScrollLoadConfig {\n  // 是否连续\n  isInfinity: boolean\n  // 每次加载多少条\n  pageSize: number\n}",
      "IEventsConfig": "interface IEventsConfig {\n  [field: string]: ()=> void\n}",
      "IDropConfig": "interface IDropConfig {\n  // sortablejs 插件\n  plugin: Sortable\n  // 开启行拖拽\n  row: boolean\n  // 开启列拖拽\n  column: boolean\n  // 拖拽前函数，返回 false 取消拖动\n  onBeforeMove?: ()=> boolean\n  // 拖拽触发源选择器一般是class类名\n  trigger?: string\n  // 根据行的类名来控制是否可以拖动\n  filter?: string\n  // 如果变动了树层级，可以指定是否需要刷新数据\n  refresh?: boolean\n  }",
      "IEditConfig": "interface IEditConfig {\n  // 激活触发方式\n  trigger: 'click' | 'dblclick' | 'manual'\n  // 激活类型单元格激活或者行\n  mode: 'cell' | 'row'\n  // 是否显示状态\n  showStatus?: boolean\n  // 自定义编辑规则，返回true可以编辑返回false则禁止编辑\n  activeMethod?: ({row: IRow, column: IColumnConfig})=> boolean\n}",
      "IRecordset": "interface IRecordset {\n  insertRecords: IRow[]\n  removeRecords: IRow[]\n  updateRecords: IRow[]\n}",
      "IPageChangeArgs": "interface IPageChangeArgs { \n  // table组件vue实例\n  $grid: Component\n  // 当前页码\n  currentPage: number\n  //当前分页组件布局信息 'total, prev, pager, next, jumper, sizes'\n  layout: string\n  // 当前每页显示条数\n  pageSize: number\n  //可切换的每页条数\n  pageSizes: number[] \n  //总数据条数\n  total: number \n}",
      "IBeforePageChangeArgs": "interface IBeforePageChangeArgs { \n  //新页码\n  newPage: number\n  //新的分页大小 \n  newPageSize: number\n  //当前页码\n  currentPage: number\n  //当前的页大小\n  currentPageSize: number\n  //生效回调\n  callback: ()=> void\n  //失效回调\n  rollback: ()=> void\n}",
      "IToolbarButtonClickArgs": "interface IToolbarButtonClickArgs { \n  //表格组件实例对象信息 \n  $grid: Component\n  //按钮信息对象 \n  button: {\n    code: string\n    name: string\n  }[]\n  // 按钮功能类型\n  code: string\n}",
      "ICellClickArgs": "interface ICellClickArgs {\n  // 当前行\n  row: IRow,\n  // 当前行的下标\n  rowIndex: number\n  // 当前列\n  column: IColumnConfig\n  // 当前列的下标\n  columnIndex: number\n}",
      "ICellContextMenuArgs": "interface ICellContextMenuArgs {\n  // 当前行\n  row: IRow\n}",
      "ICellArgs": "interface ICellArgs {\n  //当前行\n  row: IRow\n  //当前行的下标\n  rowIndex: number\n  // 当前列 \n  column: IColumnConfig\n  // 当前列的下标 \n  columnIndex: number\n}",
      "ICurrentChangeArgs": "interface ICurrentChangeArgs {\n  // 当前行\n  row: IRow\n}",
      "IEditActivedArgs": "interface IEditActivedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditClosedArgs": "interface IEditClosedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IEditDisabledArgs": "interface IEditDisabledArgs {\n  //当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
      "IFilterChangeArgs": "interface IFilterChangeArgs {\n  //表格的信息对象\n  $table: Component\n  //过滤列的过滤数据信息\n  filters: object\n}",
      "IFooterCellClickArgs": "interface IFooterCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点 \n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IContextMenuArgs": "interface IContextMenuArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 配置清除等功能信息\n  options: object[]\n  // 表格区域类型\n  type: 'header' | 'footer' | 'body'\n}",
      "IFooterCellDblClickArgs": "interface IFooterCellDblClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IHeaderCellClickArgs": "interface IHeaderCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 点击表头单元格\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 当前点击节点过滤标识\n  triggerFilter: boolean\n  // 当前点击节点排序标识\n  triggerSort: boolean\n}",
      "IHeaderCellDblClickArgs": "interface IHeaderCellDblClickArgs {\n  // 列数据\n  column: IColumnConfig  \n  // 列索引\n  columnIndex: number\n  // table组件 vue实例 \n  $table: Component\n  // 点击的单元格dom\n  cell: HTMLElement\n}",
      "IResizableChangeArgs": "interface IResizableChangeArgs {\n  // table组件的vue 实例 \n  $table: Component,\n  // 列配置信息 \n  column: IColumnConfig \n  // 拖动列的索引\n  columnIndex: number\n  // 是否固定列\n  fixed: boolean\n}",
      "IScrollArgs": "interface IScrollArgs {\n  // 表格实例对象信息\n  $table: Component\n  fixed: boolean\n  // X轴滚动\n  isX: boolean\n  // Y轴滚动\n  isY: true\n  // X轴滚动距离\n  scrollLeft: number\n  // Y轴滚动距离\n  scrollTop: number\n  type: 'body' | 'header' | 'footer'\n}",
      "ISelectAllArgs": "interface ISelectAllArgs {\n  $columnIndex: number\n  $rowIndex: number\n  $seq: string\n  // 表格实例对象信息\n  $table: Component \n  // 勾选状态\n  checked: boolean\n  // 列信息\n  column: IColumnConfig\n  // 列下标\n  columnIndex: number\n  // 表格数据\n  data: IRow[]\n  fixed: boolean\n  isHidden: boolean\n  level: number\n  // 勾选项的行数据信息\n  row: IRow\n  // 勾选项的行下标\n  rowIndex: number\n  // 选中的数据\n  selection: IRow[]\n  seq: number\n}",
      "IToggleExpandChangeArgs": "interface IToggleExpandChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IToggleTreeChangeArgs": "interface IToggleTreeChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
      "IValidErrorArgs": "interface IValidErrorArgs { \n  // 校验的单元格信息对象\n  cell: Cell\n  //校验单元格所在列的列配置信息对象\n  column: IColumnConfig\n  //校验单元格所在行的信息对象\n  row: IRow\n  // 校验规则信息对象 \n  rule: object\n}",
      "ISortChangeArgs": "interface ISortChangeArgs { \n  // 表格实例对象信息\n  $grid: Component\n  // 列信息\n  column: IColumnConfig\n  // 排序的字段名\n  field: string \n  // 排序类型升序或降序\n  order: 'asc' | 'desc' \n  prop: string\n  property: string\n}",
      "IClassNameArgs": "interface IClassNameArgs {\n  seq: number\n  row: IRow\n  rowIndex: number\n  $rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n  $columnIndex: number\n}",
      "IIndexMethodArgs": "interface IIndexMethodArgs {\n  row: IRow\n  rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n}",
      "IFormatConfig": "interface IFormatConfig {\n  // 列数据源\n  data: IColumnConfig[] \n  // 内置渲染器类型，与 format-text 属性取值相同\n  type: 'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate'\n  // 配置为 true 后，支持动态修改 data 的数据。还可以配置为对象，配置为对象时，对象中可以配置 splitConfig.enabled（是否启用分隔配置）、splitConfig.valueSplit（指定 value 值的分隔符）、splitConfig.textSplit（指定 text 的分隔符）、fetch（列数据异步渲染，请求数据）\n  async: true, \n  // 单元格显示内容的映射\n  label: string\n  // 单元格取值的映射\n  value: string\n}",
      "IButtonClick": "interface IButtonClick { \n  // 表格组件实例对象信息\n  $grid: Component \n  // 按钮列表信息对象   \n  button: {\n    code: string\n    name: string\n  }[]\n   // 按钮类型 \n   code: string\n  }",
      "ISettingConfigs": "interface ISettingConfigs {\n  sortType: 'page' | 'all'\n  pageSize: number\n  columns: {\n    property: string\n    order: 'asc' | 'desc' | null \n    visible: boolean\n    sortable: boolean\n  }[]\n}",
      "ISpanMethodArgs": "interface ISpanMethodArgs {\n  // 行标\n  $rowIndex: number\n  // 列数据  \n  column: IColumnConfig\n  // 列下标 \n  columnIndex: number\n  // 一个数组，保存了当前合并和计算的数据\n  data: (string | number | null)[][]\n}",
      "IExportCsvOptions": "interface IExportCsvOptions {\n  filename: string\n  original: boolean\n  isHeader: boolean\n  data: IRow[]\n}",
      "IEditorConfig": "interface IEditorConfig {\n  // 内置组件名称或者自定义组件实例\n  component: 'input' | 'select' | Component\n  // 传递给组件的事件集合\n  events?: {\n    [event]: ()=> void\n  }\n  // 传递给编辑器组件的属性集合\n  attrs?: {\n    [prop]: any\n  }\n  // select 内置组件独有的下拉数据配置项\n  options?: object[]\n}",
      "IFilterConfig": "interface IFilterConfig {\n  // 设置在显示枚举选项功能是否为多选, 仅在 enumable:true 下有效\n  multi: boolean\n  // 设置在过滤面板中显示枚举选项\n  enumable: boolean\n  // 设置在过滤面板中显示默认的筛选条件\n  defaultFilter: boolean\n  // 设置在过滤面板中显示输入筛选的项\n  inputFilter: boolean\n  // 设置在显示枚举选项功能(enumable)下制定静态数据源，也可以是函数返回一个Promise对象\n  values: {\n    // 设置枚举数据的显示值属性字段， 默认'label'\n    label: string\n    // 设置枚举数据的实际值属性字段， 默认'value'\n    value: string \n  }[] | ()=> Promise\n}",
      "IOPConfig": "interface IOPConfig {\n  editConfig?: IEditConfig\n  pagerConfig?: IPagerConfig\n  columns: IColumnConfig[]\n  data: IRow[]\n}",
      "IFormatText": "'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate' | 'boole' | (params)=> string",
      "IToolbarSetting": "interface IToolbarSetting {\n        remote?: boolean\n        storage?: string\n        sortable?: Sortable \n      }"
    },
    "events": [
      {
        "name": "button-click",
        "description": "This event is triggered when a button in the toolbar is clicked",
        "description_zh": "当工具栏的按钮被点击时会后触发该事件",
        "params": "(args: IButtonClick, event: Event)=> void",
        "value": ""
      },
      {
        "name": "cancel-setting",
        "description": "Click the Cancel button in the personalization panel to trigger the event",
        "description_zh": "点击个性化面板的取消按钮触发该事件",
        "params": "(args: ISettingConfigs)=> void",
        "value": ""
      },
      {
        "name": "reset-setting",
        "description": "Click the reset button in the personalization panel to trigger the event",
        "description_zh": "点击个性化面板的重置按钮触发该事件",
        "params": "()=> void",
        "value": ""
      },
      {
        "name": "save-setting",
        "description": "Click the Confirm button in the personalization panel to trigger the event",
        "description_zh": "点击个性化面板的确认按钮触发该事件",
        "params": "(args: ISettingConfigs)=> void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "buttons",
        "description": "A list of buttons",
        "description_zh": "按钮列表"
      },
      {
        "name": "toolbar",
        "description": "Toolbar slots",
        "description_zh": "工具栏插槽"
      }
    ],
    "filename": "GridToolbar"
  },
  {
    "name": "TinyBadge",
    "props": {
      "badge-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Custom tagged class names",
        "description_zh": "自定义标记的类名"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Textual content",
        "description_zh": "文本内容"
      },
      "hidden": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to hide the marker",
        "description_zh": "是否隐藏标记"
      },
      "href": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Specify the address of the destination page",
        "description_zh": "指定跳转的目标页面地址"
      },
      "is-dot": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the mark as a dot",
        "description_zh": "是否以小圆点的形式来显示标记"
      },
      ":max": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Specifies the maximum value for the badge to display, and if the actual badge value is more than that maximum, the number of badges is displayed in the form of a '+' followed by the maximum value, and the value must be of type number",
        "description_zh": "指定徽章显示的最大值，如果实际获取的徽章值超过该最大值，则以最大值后接一个 '+' 的形式显示徽章数，要求 value 是 number 类型"
      },
      "offset": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Sets the offset of the marker position",
        "description_zh": "设置标记位置的偏移量"
      },
      "target": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The way in which you are redirected to the target page when you click on the tag is only used if the href attribute is present",
        "description_zh": "点击标记时链接到目标页面的跳转方式，仅在 href 属性存在时使用"
      },
      "type": {
        "default": "'danger'",
        "value": "",
        "type": "IPtype",
        "description": "The type of tag",
        "description_zh": "标记的类型"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "Number of related data entries",
        "description_zh": "相关数据条目数"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/badge",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/badge",
    "typeDetail": {
      "IPtype": "type IPtype = 'primary' | 'success' | 'warning' | 'danger' | 'info'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "content",
        "description": "The message prompts the content",
        "description_zh": "消息提示内容"
      },
      {
        "name": "default",
        "description": "If the default slot has the data attribute, the default slot does not take effect",
        "description_zh": "默认插槽，有data属性时，默认插槽不生效"
      }
    ],
    "filename": "Badge"
  },
  {
    "name": "TinyCalendar",
    "props": {
      "events": {
        "default": "--",
        "value": "",
        "type": "eventLists[]",
        "description": "A list of events",
        "description_zh": "事件列表"
      },
      "mode": {
        "default": "'month'",
        "value": "",
        "type": "month / year",
        "description": "Calendar display mode",
        "description_zh": "日历显示模式"
      },
      ":month": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Specify the month, the default is the current month",
        "description_zh": "指定月份，默认当前月份"
      },
      "show-selected": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the selected date",
        "description_zh": "是否显示选中的日期"
      },
      ":year": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Specify the year, default current year",
        "description_zh": "指定年份，默认当前年份"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/calendar",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/calendar",
    "typeDetail": {
      "eventLists": "interface eventLists [{\n        time: 1534297845236, // 指定需要展示事件的日期\n        title: '消息', // 指定事件标题\n        content: '这是一条消息', // 指定事件的具体内容\n        type: 'info' // 事件主题类型，包括 warning、error、info、success。\n      }]"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "day",
        "description": "Date cell slot",
        "description_zh": "日期单元格插槽"
      },
      {
        "name": "tool",
        "description": "Calendar toolbar slot",
        "description_zh": "日历工具栏插槽"
      }
    ],
    "filename": "Calendar"
  },
  {
    "name": "TinyCalendarView",
    "props": {
      "day-times": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "Configure the time range displayed in the timeline mode, which is set to [8,18] by default and can be configured with [0,23].",
        "description_zh": "配置时间线模式下所展示的时间范围，默认为[8,18]，可配范围[0,23]。"
      },
      "disabled": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "Date disabled",
        "description_zh": "日期禁用"
      },
      "events": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "Schedule Incident",
        "description_zh": "日程事件"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Calendar height",
        "description_zh": "日历高度"
      },
      "mark-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The color of the dot marker",
        "description_zh": "点标记的颜色"
      },
      "mode": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Display mode, the optional values are timeline-timeline mode, schedule-schedule mode, month-month mode, and the default is month mode.",
        "description_zh": "显示模式，可选值有 timeline-时间线模式、schedule-日程模式、month-月模式，默认为月模式。"
      },
      "modes": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "Pattern groups, displaying any combination of modes",
        "description_zh": "模式组，显示模式任意组合"
      },
      "month": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The calendar currently displays the month",
        "description_zh": "日历当前显示月份"
      },
      "multi-select": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Multiple dates",
        "description_zh": "日期多选"
      },
      "set-day-bg-color": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "Set the date background color",
        "description_zh": "设置日期背景色"
      },
      "show-mark": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "Displays point markers",
        "description_zh": "显示点标记"
      },
      "show-new-schedule": {
        "default": "--",
        "value": "",
        "type": "() => void",
        "description": "The Add Event button is displayed",
        "description_zh": "显示新增日程按钮"
      },
      ":year": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "The calendar currently displays the year",
        "description_zh": "日历当前显示年份"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/calendar-view",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/calendar-view",
    "typeDetail": {},
    "events": [
      {
        "name": "month-change",
        "description": "",
        "description_zh": "",
        "params": "月改变事件",
        "value": ""
      },
      {
        "name": "new-schedule",
        "description": "",
        "description_zh": "",
        "params": "新增日程按钮点击事件",
        "value": ""
      },
      {
        "name": "next-week-click",
        "description": "",
        "description_zh": "",
        "params": "下一周按钮点击事件",
        "value": ""
      },
      {
        "name": "prev-week-click",
        "description": "",
        "description_zh": "",
        "params": "上一周按钮点击事件",
        "value": ""
      },
      {
        "name": "selected-date-change",
        "description": "",
        "description_zh": "",
        "params": "选中日期改变事件",
        "value": ""
      },
      {
        "name": "week-change",
        "description": "",
        "description_zh": "",
        "params": "周改变事件",
        "value": ""
      },
      {
        "name": "year-change",
        "description": "",
        "description_zh": "",
        "params": "年改变事件",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "header",
        "description": "Head slot",
        "description_zh": "头部插槽"
      },
      {
        "name": "timeline",
        "description": "Timeline slots, there are timeline1-timeline7 7 slots",
        "description_zh": "时间线插槽，有timeline1-timeline7 7个插槽"
      },
      {
        "name": "tool",
        "description": "Toolbar slots",
        "description_zh": "工具栏插槽"
      },
      {
        "name": "weekday",
        "description": "日程插槽，有weekday1-weekday7 7个插槽",
        "description_zh": "日程插槽，有weekday1-weekday7 7个插槽"
      }
    ],
    "filename": "CalendarView"
  },
  {
    "name": "TinyCard",
    "props": {
      "auto-width": {
        "default": "--",
        "value": "",
        "type": "Boolean",
        "description": "Whether the width of the card is automatically stretched out or not, the fixed width of the card will no longer be set after setting",
        "description_zh": "卡片的宽度是否自动撑开，设置后将不再给卡片设置固定宽度"
      },
      "check-type": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "Set card single-select, multi-select, single/radio; Multi-select/checkbox, you need to set the label at the same time.",
        "description_zh": "设置卡片单选、多选，单选/radio；多选/checkbox，需同时设置 label。"
      },
      "custom-class": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "The class of the card",
        "description_zh": "卡片的class"
      },
      "disabled": {
        "default": "--",
        "value": "",
        "type": "Boolean",
        "description": "The card is disabled",
        "description_zh": "卡片禁用"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "The height of the card content area",
        "description_zh": "卡片内容区域的高度"
      },
      "icon-more": {
        "default": "--",
        "value": "",
        "type": "Object",
        "description": "More button icons, you can pass in an SVG icon object to replace",
        "description_zh": "更多按钮图标，可传入一个svg图标对象进行替换"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "String / Number",
        "description": "Label for checkbox or radio",
        "description_zh": "checkbox或radio的label"
      },
      "options": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "Action button configuration",
        "description_zh": "操作按钮配置"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "尺寸，支持large、medium、small、mini 4个尺寸，默认值为medium",
        "description_zh": "尺寸，支持large、medium、small、mini 4个尺寸，默认值为medium"
      },
      "src": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "The address of the image or video",
        "description_zh": "图片或者视频的地址"
      },
      "status": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "卡片状态，支持 success、warning、alerting、danger 4 种状态",
        "description_zh": "卡片状态，支持 success、warning、alerting、danger 4 种状态"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "The title of the card",
        "description_zh": "卡片的标题"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "设置卡片类型，支持 text、image、video、logo 4 种类型。",
        "description_zh": "设置卡片类型，支持 text、image、video、logo 4 种类型。"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "The binding value, which is empty by default",
        "description_zh": "绑定值，默认为空"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/card",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/card",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "Component checked/unchecked events",
        "description_zh": "组件选中/取消选中事件",
        "params": "Function()",
        "value": ""
      },
      {
        "name": "click",
        "description": "Click on the card event",
        "description_zh": "点击卡片事件",
        "params": "Function()",
        "value": ""
      },
      {
        "name": "icon-click",
        "description": "Action Bar button Click Events",
        "description_zh": "操作栏按钮点击事件",
        "params": "Function()",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Component default slot",
        "description_zh": "组件默认插槽"
      },
      {
        "name": "footer",
        "description": "Component default slot",
        "description_zh": "组件默认插槽"
      },
      {
        "name": "title",
        "description": "Title slots",
        "description_zh": "标题插槽"
      },
      {
        "name": "title-left",
        "description": "The slot to the left of the title",
        "description_zh": "标题左侧插槽"
      },
      {
        "name": "title-right",
        "description": "The slot to the right of the title",
        "description_zh": "标题右侧插槽"
      }
    ],
    "filename": "Card"
  },
  {
    "name": "TinyCarousel",
    "props": {
      "arrow": {
        "default": "'hover'",
        "value": "",
        "type": "string",
        "description": "Toggles the display of arrows, which can be always / hover / never",
        "description_zh": "切换箭头的显示效果，该属性的可选值为 always / hover / never"
      },
      "autoplay": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to switch automatically",
        "description_zh": "是否自动切换"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The height of the marquee",
        "description_zh": "走马灯的高度"
      },
      "indicator-position": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "指示器的位置，该属性的可选值为 outside / none",
        "description_zh": "指示器的位置，该属性的可选值为 outside / none"
      },
      ":initial-index": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The index of the slides that are active in the initial state, starting at 0",
        "description_zh": "初始状态激活的幻灯片的索引，从 0 开始"
      },
      ":interval": {
        "default": "3000",
        "value": "",
        "type": "number",
        "description": "The time interval between automatic switching, in milliseconds",
        "description_zh": "自动切换的时间间隔，单位为毫秒"
      },
      "loop": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to cycle through the display",
        "description_zh": "是否循环显示"
      },
      "show-title": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the title",
        "description_zh": "是否显示标题"
      },
      "trigger": {
        "default": "'hover'",
        "value": "",
        "type": "string",
        "description": "How the indicator is triggered, with an optional value of hover / click",
        "description_zh": "指示器的触发方式，该属性的可选值为 hover / click"
      },
      "type": {
        "default": "'horizontal'",
        "value": "",
        "type": "string",
        "description": "走马灯的类型，该属性的可选值为 horizontal / vertical / card",
        "description_zh": "走马灯的类型，该属性的可选值为 horizontal / vertical / card"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/carousel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/carousel",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "The first parameter is the index of the current slide and the second parameter is the index of the previous slide",
        "description_zh": "幻灯片切换时触发，第一个参数为当前幻灯片索引，第二个参数为上一张幻灯片索引",
        "params": "(curIndex: number, preIndex: number) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "next",
        "description": "Switch to the next slide",
        "params": "",
        "description_zh": "切换至下一张幻灯片",
        "value": ""
      },
      {
        "name": "prev",
        "description": "Switch to the previous slide",
        "params": "",
        "description_zh": "切换至上一张幻灯片",
        "value": ""
      },
      {
        "name": "setActiveItem",
        "description": "Manually switch the slide, the parameter is the index of the slide to be switched, starting from 0",
        "params": "",
        "description_zh": "手动切换幻灯片，参数为需要切换的幻灯片的索引，从 0 开始",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "Carousel"
  },
  {
    "name": "TinyCarouselItem",
    "props": {
      "name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Slide name",
        "description_zh": "幻灯片名称"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Slide title",
        "description_zh": "幻灯片标题"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/carousel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/carousel",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "CarouselItem"
  },
  {
    "name": "TinyCollapse",
    "props": {
      "accordion": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Accordion mode or not",
        "description_zh": "是否手风琴模式"
      },
      "before-close": {
        "default": "--",
        "value": "",
        "type": "(item: Component, activeNames: string | number | Array) => boolean",
        "description": "Prevents the collapse panel from switching",
        "description_zh": "阻止折叠面板切换"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string | number | Array",
        "description": "The currently active panel. In accordion mode, the binding value type needs to be string | number, otherwise Array",
        "description_zh": "当前激活的面板。如果是手风琴模式，绑定值类型需要为 string | number，否则为 Array"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/collapse",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/collapse",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "Triggers when the current active panel changes. In accordion mode, the activeNames parameter is of type string | number, otherwise Array",
        "description_zh": "当前激活面板改变时触发。如果是手风琴模式，参数 activeNames 类型为 string | number，否则为 Array",
        "params": "(activeNames: string | number | Array) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      },
      {
        "name": "icon",
        "description": "Expand the collapse icon icon",
        "description_zh": "展开折叠 icon 图标"
      },
      {
        "name": "title",
        "description": "title",
        "description_zh": "标题"
      },
      {
        "name": "title-right",
        "description": "Customize the content to the right of the panel title",
        "description_zh": "自定义面板标题右侧内容"
      }
    ],
    "filename": "Collapse"
  },
  {
    "name": "TinyCollapseItem",
    "props": {
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "name": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "Unique marker",
        "description_zh": "唯一标志符"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Panel title",
        "description_zh": "面板标题"
      },
      "title-right": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Customize the content to the right of the panel title",
        "description_zh": "自定义面板标题右侧内容"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/collapse",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/collapse",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      },
      {
        "name": "icon",
        "description": "Expand the collapse icon icon",
        "description_zh": "展开折叠 icon 图标"
      },
      {
        "name": "title",
        "description": "title",
        "description_zh": "标题"
      },
      {
        "name": "title-right",
        "description": "Customize the content to the right of the panel title",
        "description_zh": "自定义面板标题右侧内容"
      }
    ],
    "filename": "CollapseItem"
  },
  {
    "name": "TinyFlowChart",
    "props": {
      ":config": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Configuration of the flowchart.",
        "description_zh": "流程图的配置。"
      },
      ":data": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Flowchart data.",
        "description_zh": "流程图数据。"
      },
      "fetch": {
        "default": "--",
        "value": "",
        "type": "function",
        "description": "Multiterminal dot asynchronous flowchart AsyncFlowchart data and configured loading methods.",
        "description_zh": "多端 dot 异步流程图 AsyncFlowchart 数据和配置的加载方法。"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/flowchart",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/flowchart",
    "typeDetail": {},
    "events": [
      {
        "name": "click-blank",
        "description": "Triggered when an empty space is clicked.",
        "description_zh": "点击空白区域时触发。",
        "params": "",
        "value": ""
      },
      {
        "name": "click-group",
        "description": "Triggered when you click on a group.",
        "description_zh": "点击分组时触发。",
        "params": "",
        "value": ""
      },
      {
        "name": "click-link",
        "description": "Triggered when you click on the connection.",
        "description_zh": "点击连线时触发。",
        "params": "",
        "value": ""
      },
      {
        "name": "click-node",
        "description": "Triggered when a node is clicked.",
        "description_zh": "点击节点时触发。",
        "params": "",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "createConfig",
        "description": "The Flowchart component, a static method for creating the graphical base configuration.",
        "params": "",
        "description_zh": "流程图组件 Flowchart 的静态方法，用于创建图形基础配置。",
        "value": ""
      },
      {
        "name": "layout",
        "description": "The multi-dot dot mode is used to process the custom layout of the graph, set on the global configuration, and the parameters are the graph width, height, and node list, and the position of each node is expected to be obtained.",
        "params": "",
        "description_zh": "多端 dot 点模式下用于处理图形的自定义布局，设置在全局配置上，参数为图形宽、高和节点列表，期望获取每个节点的位置。",
        "value": ""
      },
      {
        "name": "linkPath",
        "description": "The multi-terminal dot point mode is used to handle the custom layout of the graphic connection, which is set on the global configuration, and the parameters are the connection and node list, and the path, midpoint and gradient of the connection are expected to be obtained. Connected paths are represented by inflection points of horizontal and vertical polylines.",
        "params": "",
        "description_zh": "多端 dot 点模式下用于处理图形连线的自定义布局，设置在全局配置上，参数为连线和节点列表，期望获取连线的路径、中点和渐变。连线路径通过水平垂直折线的拐点表示。",
        "value": ""
      },
      {
        "name": "Node",
        "description": "Node component built into the multi-terminal dot point mode.",
        "params": "",
        "description_zh": "多端 dot 点模式下内置的节点组件。",
        "value": ""
      },
      {
        "name": "refresh",
        "description": "After modifying the configuration or data, the graph used to refresh the AsyncFlowchart instance of the multiterminal asynchronous flowchart.",
        "params": "",
        "description_zh": "在修改配置或数据之后，用于刷新多端异步流程图 AsyncFlowchart 实例的图形。",
        "value": ""
      },
      {
        "name": "renderInner",
        "description": "The custom rendering method of the node in the multi-terminal stream card mode is the internal content of the card, excluding the card container.",
        "params": "",
        "description_zh": "多端流卡片模式下节点的自定义渲染方法，渲染的内容为卡片内部内容，不包括卡片容器。",
        "value": ""
      },
      {
        "name": "renderOuter",
        "description": "Custom rendering method for nodes in multi-terminal card mode, including card containers.",
        "params": "",
        "description_zh": "多端卡片模式下节点的自定义渲染方法，渲染的内容包括卡片容器。",
        "value": ""
      },
      {
        "name": "resizeMixin",
        "description": "The horizontal adaptive width of the graph is used to process the multiterminal dot in dot mode, which is later built into the asynchronous flowchart in point mode.",
        "params": "",
        "description_zh": "多端 dot 点模式下用于处理图形的水平自适应宽度，后续在点模式的异步流程图中被内置。",
        "value": ""
      }
    ],
    "slots": [],
    "filename": "FlowChart"
  },
  {
    "name": "TinyGuide",
    "props": {
      ":alignment-axis": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Sets the guide frame alignment axis distance",
        "description_zh": "设置引导框对齐轴距离"
      },
      "arrow": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the arrow for the tooltip",
        "description_zh": "是否显示工具提示的箭头"
      },
      ":cross-axis": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Sets the distance of the horizontal axis of the guide frame",
        "description_zh": "设置引导框横轴距离"
      },
      "dom-data": {
        "default": "--",
        "value": "",
        "type": "IDomData[]",
        "description": "User bootstrap parameters",
        "description_zh": "用户引导参数"
      },
      ":height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Sets the bootstrap height",
        "description_zh": "设置引导框高度"
      },
      "light-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The class name applied to the element when it is highlighted (that is, when its step is active).",
        "description_zh": "当元素突出显示时（即，当其步骤处于活动状态时）应用于元素的类名"
      },
      ":main-axis": {
        "default": "18",
        "value": "",
        "type": "number",
        "description": "Set the distance of the main axis (vertical axis) of the guide frame",
        "description_zh": "设置引导框主轴（纵轴）距离"
      },
      ":modal-overlay-opening-padding": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The amount of padding added around the opening of the modal overlay",
        "description_zh": "在模态叠加层开口周围添加的填充量"
      },
      ":modal-overlay-opening-radius": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The amount of boundary radius added around the opening of the modal overlay",
        "description_zh": "在模态叠加层开口周围添加的边界半径量"
      },
      "pop-position": {
        "default": "'bottom'",
        "value": "",
        "type": "IPosition",
        "description": "Boot box arrow position, an optional value for which can be referenced as an IPosition type",
        "description_zh": "引导框箭头位置，该属性的可选值可参考 IPosition 类型"
      },
      ":width": {
        "default": "510",
        "value": "",
        "type": "number",
        "description": "Sets the boot frame width",
        "description_zh": "设置引导框宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/guide",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/guide",
    "typeDetail": {
      "IDomData": "interface IDomData {\n  // 指引的标题\n  title: string\n  // 指引的内容（可以是 html）\n  text: string\n  // 需要绑定指引的元素类名（只能是类名，若未传入则显示为上下左右居中且无指示箭头）\n  domElement: string\n  // 添加需要高亮的元素的类名\n  hightBox: string[]\n  // 要添加到步骤的内容元素的一串类名\n  classes: string\n\n  // 展示前的回调函数\n  beforeShow: () => void\n  // 隐藏前的回调函数\n  beforeHide: () => void\n  // 显示的回调函数\n  show: () => void\n  // 隐藏的回调函数\n  hide: () => void\n  // 关闭的回调函数\n  cancel: () => void\n  //销毁的回调函数\n  destroy: () => void\n  // 完成的回调函数\n  completey: () => void\n\n  // 需要设置的按钮组\n  button: {\n    // 按钮名\n    text: string\n    // 需要执行的步骤，包含 next(下一步)、back(返回)、complete(完成)\n    action: 'next' | 'back' | 'complete'\n    // 按钮的类名\n    classes: string\n    // 是否是次要按钮\n    secondary: boolean\n  }[]\n}",
      "IPosition": "type IPosition = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "main",
        "description": "Set the contents of the boot box",
        "description_zh": "设置引导框内容"
      }
    ],
    "filename": "Guide"
  },
  {
    "name": "TinyImage",
    "props": {
      "fit": {
        "default": "--",
        "value": "",
        "type": "fill / contain / cover / none / scale-down ",
        "description": "Determine how the image fits into the container size",
        "description_zh": "确定图片如何适应容器大小"
      },
      "keep-style": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Maintain the image style attributes",
        "description_zh": "保持图片样式属性"
      },
      "lazy": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Lazy loading or not",
        "description_zh": "是否懒加载"
      },
      "preview-src-list": {
        "default": "[]",
        "value": "",
        "type": "string[]",
        "description": "Specifies a list of images when previewing a large image",
        "description_zh": "指定预览大图时的图片列表"
      },
      "scroll-container": {
        "default": "--",
        "value": "",
        "type": "string | HTMLElement",
        "description": "Specifies the rolling container. When lazy loading is enabled, listen for scroll events in the scroll container to lazy load.\n                This property is used to set the container of the image, and when the container is not set, the parent element with the latest overflow value of auto or scroll will be used as the scrolling container by default",
        "description_zh": "指定滚动容器。启用懒加载时，监听滚动容器的 scroll 事件来懒加载。\n                该属性用于设置图片的容器,当未设置容器时，默认会取最近一个 overflow 值为 auto 或 scroll 的父元素做为滚动容器\n              "
      },
      "show-index": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Enable the display of image serial numbers",
        "description_zh": "开启图片序列号展示"
      },
      "src": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the path of the image",
        "description_zh": "设置图片路径"
      },
      ":z-index": {
        "default": "2000",
        "value": "",
        "type": "number",
        "description": "When previewing the image, set the z-index of the outermost element",
        "description_zh": "图片预览功能时，设置最外层元素的 z-index"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/image",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/image",
    "typeDetail": {},
    "events": [
      {
        "name": "error",
        "description": "An event that is triggered after an image fails to be loaded, with the parameter set to the original failure event",
        "description_zh": "图片加载失败后触发的事件，参数为原生的失败事件",
        "params": "(ev) => void",
        "value": ""
      },
      {
        "name": "load",
        "description": "The event triggered when the image is loaded successfully, and the parameter is the original success event",
        "description_zh": "图片加载成功的触发的事件，参数为原生的成功事件",
        "params": "(ev) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "count",
        "description": "Set the picture count slot",
        "description_zh": "设置图片计数插槽"
      },
      {
        "name": "error",
        "description": "Placeholder content slots where images failed to load",
        "description_zh": "图片加载失败的占位内容插槽"
      },
      {
        "name": "placeholder",
        "description": "Placeholder content slots for image loading",
        "description_zh": "图片加载的占位内容插槽"
      }
    ],
    "filename": "Image"
  },
  {
    "name": "TinyMilestone",
    "props": {
      "completed-field": {
        "default": "'completed'",
        "value": "",
        "type": "string",
        "description": "Set the key value corresponding to the completion status of the node",
        "description_zh": "设置节点完成状态对应的键值"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "ICustomData | ICustomData[]",
        "description": "Set the data of the step bar and customize the key-value mapping",
        "description_zh": "设置步骤条的数据，可自定义键值映射"
      },
      "flag-before": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Sets whether the data of the flag is taken from the node in front or behind, and the data on the node behind is taken by default",
        "description_zh": "设置旗子的数据是取自前面还是后面的节点，默认取后面节点上的数据"
      },
      "flag-content-field": {
        "default": "'content'",
        "value": "",
        "type": "string",
        "description": "Set the key name for the content description section of the flag",
        "description_zh": "设置旗子内容描述部分对应的键名"
      },
      "flag-field": {
        "default": "'flags'",
        "value": "",
        "type": "string",
        "description": "Set the key name corresponding to the flag information array",
        "description_zh": "设置旗子信息数组对应的键名"
      },
      "flag-name-field": {
        "default": "'name'",
        "value": "",
        "type": "string",
        "description": "Set the key name for the flag title",
        "description_zh": "设置旗子标题对应的键名"
      },
      "flag-status-field": {
        "default": "'status'",
        "value": "",
        "type": "string",
        "description": "Set the key name for the flag status",
        "description_zh": "设置旗子状态对应的键名"
      },
      "line-style": {
        "default": "1",
        "value": "",
        "type": "number / string",
        "description": "When the line color value mode is Numeric, only 1 and 2 can be selected; If it's a string, you need to pass in a hexadecimal color value\n              When set to the number 1, there are only two line colors, complete and incomplete, and the line color of the completed state is the same as the color of the completed state defined by milestones-status\n              When set to the number 2, the line color root follows the node state color\n              When set to a 16-base color value in the form of a string, such as #1890FF, the lines are unified into the set color regardless of the state",
        "description_zh": "线条颜色取值模式为数字时，只有1和2可选；如果为字符串则需传入 16 进制颜色值\n              设置为数字 1 时只有完成与未完成两种状态的线条颜色，完成状态的线条颜色与 milestones-status 定义的 completed 状态的颜色一致\n              设置为数字 2 时线条颜色根随节点状态颜色\n              当设置为字符串形式的 16 进制色值时，如：#1890FF 时，线条不区分状态，全部统一为所设置的颜色"
      },
      "milestones-status": {
        "default": "--",
        "value": "",
        "type": "IStatus",
        "description": "Define the relationship between state and color, and the color value must be a hexadecimal color value or a subject variable of the component library",
        "description_zh": "定义状态与颜色对应关系，颜色取值须是 16 进制颜色值或组件库的主题变量"
      },
      "name-field": {
        "default": "'name'",
        "value": "",
        "type": "string",
        "description": "Set the key name corresponding to the node name",
        "description_zh": "设置节点名称对应的键名"
      },
      "show-number": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Specifies whether the sequence number is displayed for nodes in the incomplete state",
        "description_zh": "设置未完成状态的节点是否显示序号"
      },
      "solid": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "In Milestone mode, the Completed node is displayed as solid and the glow is opaque",
        "description_zh": "在里程碑模式下，设置已经完成节点显示为实心，且光晕不透明"
      },
      ":space": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Sets the spacing of adjacent nodes, that is, the length of lines between nodes",
        "description_zh": "设置相邻节点的间距，即节点间线条的长度"
      },
      ":start": {
        "default": "-1",
        "value": "",
        "type": "number",
        "description": "Set the starting value of the sequence number of the node, starting from the first node",
        "description_zh": "设置节点的序号起始值，从首个节点开始计算"
      },
      "status-field": {
        "default": "'status'",
        "value": "",
        "type": "string",
        "description": "Set the key name corresponding to the node state",
        "description_zh": "设置节点状态对应的键名"
      },
      "time-field": {
        "default": "'time'",
        "value": "",
        "type": "string",
        "description": "Set the key name corresponding to the node time",
        "description_zh": "设置节点时间信息对应的键名"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/milestone",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/milestone",
    "typeDetail": {
      "IStatus": "interface IStatus {\n  completed?: string // 可通过completed-field自定义completed键名\n  doing: string\n  back: string\n  end: string\n  cancel: string\n}",
      "ICustomData": "interface ICustomData { \n  name?: string\n  time?: string\n  status?: string\n  flags?: string\n  content?: string\n  [propName: string]: string // 可自定义以上的默认属性\n}"
    },
    "events": [
      {
        "name": "click",
        "description": "Node click events, parameters (index: node index, node: node data information)",
        "description_zh": "节点的点击事件，参数（index:节点索引, node：节点数据信息）",
        "params": "(index: number, node: ICustomData) => void",
        "value": ""
      },
      {
        "name": "flag-click",
        "description": "Flag click event, parameter (index: flag index, node: flag data information)",
        "description_zh": "旗子的点击事件，参数（index:旗子索引, node：旗子数据信息）",
        "params": "(index: number, node: ICustomData) => void",
        "value": ""
      },
      {
        "name": "flagclick",
        "description": "[使用flag-click代替， deprecated v3.5.0废弃，v3.17.0移除；移除原因：命名规范]",
        "description_zh": "[使用flag-click代替， deprecated v3.5.0废弃，v3.17.0移除；移除原因：命名规范]",
        "params": "(index: number, node: ICustomData) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "bottom",
        "description": "node",
        "description_zh": "节点下方内容"
      },
      {
        "name": "flag",
        "description": "Flag content",
        "description_zh": "旗帜内容"
      },
      {
        "name": "icon",
        "description": "node icon",
        "description_zh": "节点图标"
      },
      {
        "name": "top",
        "description": "The content above the node",
        "description_zh": "节点上方内容"
      }
    ],
    "filename": "Milestone"
  },
  {
    "name": "TinyMindMap",
    "props": {
      "modelValue": {
        "default": "{}",
        "value": "",
        "type": "Object",
        "description": "Default node data",
        "description_zh": "默认节点数据"
      },
      "options": {
        "default": "{contextMenu: false,toolBar: false,nodeMenu: false}",
        "value": "",
        "type": "IMindMaoOptions",
        "description": "Configuration items",
        "description_zh": "配置项"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/mind-map",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/mind-map",
    "typeDetail": {
      "IMindMaoOptions": "interface options {\n  direction?: number\n  locale?: string\n  draggable?: boolean\n  editable?: boolean\n  contextMenu?: boolean\n  contextMenuOption?: any\n  toolBar?: boolean\n  keypress?: boolean\n  mouseSelectionButton?: 0 | 2\n  before?: Before\n  newTopicName?: string\n  allowUndo?: boolean\n  overflowHidden?: boolean\n  mainLinkStyle?: number\n  subLinkStyle?: number\n  mobileMenu?: boolean\n  theme?: Theme\n  nodeMenu?: boolean\n}",
      "IMindMapOperation": "type onOperation = ({render, info}: {render:MindElixirInstance, info: Operation}) => void",
      "IMindMapSelectNode": "type onSelectNode = ({render,nodeObj}: {render:MindElixirInstance,nodeObj:NodeObj}, e?: MouseEvent) => void",
      "IMindMapSelectNewNode": "type selectNewNode: ({render,nodeObj}: {render:MindElixirInstance,nodeObj:NodeObj}) => void",
      "IMindMapSelectNodes": "type selectNodes: ({render,nodeObj}: {render:MindElixirInstance,nodeObj:NodeObj[]}) => void",
      "IMindMapUnselectNode": "type unselectNodes: ({render}: {render: MindElixirInstance}) => void",
      "IMindMapUnselectNodes": "type unselectNodes: ({render}: {render: MindElixirInstance}) => void",
      "IMindExpandNode": "type expandNode: ({render,nodeObj}: {render:MindElixirInstance,nodeObj:NodeObj}) => void",
      "NodeObj": "export interface NodeObj {\n  topic: string\n  id: Uid\n  style?: {\n    fontSize?: string\n    color?: string\n    background?: string\n    fontWeight?: string\n  }\n  children?: NodeObj[]\n  tags?: string[]\n  icons?: string[]\n  hyperLink?: string\n  expanded?: boolean\n  direction?: number\n  root?: boolean\n  image?: {\n    url: string\n    width: number\n    height: number\n  }\n  branchColor?: string\n  parent?: NodeObj\n}"
    },
    "events": [
      {
        "name": "afterImport",
        "description": "v-model更新后会触发",
        "description_zh": "v-model更新后会触发",
        "params": "({render, data}: {render:MindElixirInstance, data: })=>void",
        "value": ""
      },
      {
        "name": "beforeImport",
        "description": "v-model更新前会触发",
        "description_zh": "v-model更新前会触发",
        "params": "({render, data}: {render:MindElixirInstance, data: })=>void",
        "value": ""
      },
      {
        "name": "create",
        "description": "This event is triggered when the mindmap is created",
        "description_zh": "mindmap创建时会触发该事件",
        "params": "(render:MindElixirInstance)=>void",
        "value": ""
      },
      {
        "name": "expandNode",
        "description": "This event is triggered when the node is expanded",
        "description_zh": "展开节点时会触发该事件",
        "params": "IMindnExpandNode",
        "value": ""
      },
      {
        "name": "operation",
        "description": "When a node is recalculated, for example, if you drag node A to node B, node A is a child of node B",
        "description_zh": "节点重新计算时, 例如将节点A拖拽到节点B, 使得节点A是节点B的子节点",
        "params": "IMindMapOperation",
        "value": ""
      },
      {
        "name": "selectNewNode",
        "description": "When a new node is created",
        "description_zh": "创建新节点时",
        "params": "IMindMapSelectNewNode",
        "value": ""
      },
      {
        "name": "selectNode",
        "description": "When any node is selected, the event is triggered",
        "description_zh": "选择任意一个节点时, 会触发该事件",
        "params": "IMindMapSelectNode",
        "value": ""
      },
      {
        "name": "selectNodes",
        "description": "This event is triggered when multiple nodes are selected",
        "description_zh": "选择多个节点的时候会触发该事件",
        "params": "IMindMapSelectNodes",
        "value": ""
      },
      {
        "name": "unselectNode",
        "description": "This event is triggered when you deselect it",
        "description_zh": "取消选择的时候会触发该事件",
        "params": "IMindMapUnselectNode",
        "value": ""
      },
      {
        "name": "unselectNodes",
        "description": "This event is triggered when multiple nodes are deselected",
        "description_zh": "取消选择多个节点时会触发该事件",
        "params": "IMindMapUnselectNodes",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "MindMap"
  },
  {
    "name": "TinyQrCode",
    "props": {
      "bordered": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether there is a border or not",
        "description_zh": "是否有边框"
      },
      "color": {
        "default": "'#000'",
        "value": "",
        "type": "string",
        "description": "QR code color, only hexadecimal is supported",
        "description_zh": "二维码颜色, 仅支持十六进制"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The address of the image in the QR code (currently only the image address is supported)",
        "description_zh": "二维码中图片的地址（目前只支持图片地址）"
      },
      ":icon-size": {
        "default": "50",
        "value": "",
        "type": "number",
        "description": "The size of the image in the QR code, the icon coverage area cannot exceed 30% of the QR code area, otherwise the code scanning will be affected",
        "description_zh": "二维码中图片的大小，icon 覆盖面积不能超过二维码面积的 30%， 否则影响扫码"
      },
      "level": {
        "default": "'Medium'",
        "value": "",
        "type": "string",
        "description": "二维码纠错等级, 可选 'Low' | 'Medium' | 'Quality' | 'High'",
        "description_zh": "二维码纠错等级, 可选 'Low' | 'Medium' | 'Quality' | 'High'"
      },
      ":size": {
        "default": "200",
        "value": "",
        "type": "number",
        "description": "QR code size",
        "description_zh": "二维码大小"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Scanned text",
        "description_zh": "扫描后的文本"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/qr-code",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/qr-code",
    "typeDetail": {},
    "events": [
      {
        "name": "change",
        "description": "Callbacks after the QR code changes",
        "description_zh": "二维码发生变化后的回调",
        "params": "()=> void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "QrCode"
  },
  {
    "name": "TinyStatistic",
    "props": {
      ":precision": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Accuracy value",
        "description_zh": "精度值"
      },
      "prefix": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the numeric content prefix",
        "description_zh": "设置数字内容前缀"
      },
      "suffix": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the numeric content suffix",
        "description_zh": "设置数字内容后缀"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string | ITitleType",
        "description": "Set up a digital content title",
        "description_zh": "设置数字内容标题"
      },
      ":value": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Digital display content",
        "description_zh": "数字显示内容"
      },
      "value-style": {
        "default": "--",
        "value": "",
        "type": "object | array",
        "description": "Style the numbers",
        "description_zh": "设置数字样式"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/statistic",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/statistic",
    "typeDetail": {
      "ITitleType": "interface ITitleType {\n  value?: string       // 标题文本\n  position?: string    // 标题位置，取值：top | bottom\n}"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "prefix",
        "description": "Digital content front slot",
        "description_zh": "数字内容前置插槽"
      },
      {
        "name": "suffix",
        "description": "Digital content rear slot",
        "description_zh": "数字内容后置插槽"
      },
      {
        "name": "title",
        "description": "Digital Content Title Slots",
        "description_zh": "数字内容标题插槽"
      }
    ],
    "filename": "Statistic"
  },
  {
    "name": "TinyTag",
    "props": {
      "before-delete": {
        "default": "--",
        "value": "",
        "type": "(close: () => void) => void",
        "description": "Delete the previous callback function",
        "description_zh": "删除前回调函数"
      },
      "closable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it can be turned off",
        "description_zh": "是否可关闭"
      },
      "color": {
        "default": "--",
        "value": "",
        "type": "IColor | string[]",
        "description": "To control the text color and background color of the label, you can use the preset value in the IColor type, or you can customize the value, if the custom value is a string, you can only set the background color of the label; If it is an array, the first value sets the background color, and the second value sets the text color; [Note: 3.15.0 adds support for array types]",
        "description_zh": "控制标签文本色和背景色，可使用 IColor 类型中的预设值，也可自定义值，若自定义值为字符串则只能设置标签的背景色；若为数组则第一个值设置背景色，第二个设置文本色；【注：3.15.0新增支持数组类型】"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "effect": {
        "default": "'light'",
        "value": "",
        "type": "IEffect",
        "description": "topic",
        "description_zh": "主题"
      },
      "hit": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether there is a border or not",
        "description_zh": "是否有边框"
      },
      "size": {
        "default": "--",
        "value": "",
        "type": "ISize",
        "description": "size",
        "description_zh": "尺寸"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "IType",
        "description": "Display type",
        "description_zh": "显示类型"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "Configurable labels, custom label content [new in 3.9.1]",
        "description_zh": "配置式标签，自定义标签内容【3.9.1新增】"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tag",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tag",
    "typeDetail": {
      "IColor": "type IColor = 'red' | 'orange' | 'green' | 'blue' | 'purple' | 'brown' | 'grey' | string // 除了预设值，也可以是其他任意自定义颜色值",
      "IEffect": "type IEffect = 'dark' | 'light' | 'plain'",
      "ISize": "type ISize = 'medium' | 'small' | 'mini' | ''",
      "IType": "type IType = 'success' | 'info' | 'warning' | 'danger'"
    },
    "events": [
      {
        "name": "click",
        "description": "An event that is triggered when a tag is clicked",
        "description_zh": "点击标签时触发的事件",
        "params": "(event: Event) => void",
        "value": ""
      },
      {
        "name": "close",
        "description": "An event that is triggered when the close button is clicked",
        "description_zh": "点击关闭按钮时触发的事件",
        "params": "(event: Event)) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Label content",
        "description_zh": "标签内容"
      }
    ],
    "filename": "Tag"
  },
  {
    "name": "TinyTagGroup",
    "props": {
      "data": {
        "default": "--",
        "value": "",
        "type": "ITagGroupDataItem[]",
        "description": "Data sources",
        "description_zh": " 数据源"
      },
      "effect": {
        "default": "'light'",
        "value": "",
        "type": "dark / light / plain",
        "description": "topic",
        "description_zh": "主题"
      },
      "size": {
        "default": "'medium'",
        "value": "",
        "type": "medium / small / mini",
        "description": "size",
        "description_zh": "尺寸"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tag-group",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tag-group",
    "typeDetail": {
      "ITagGroupDataItem": "type ITagGroupDataItem = { name: string, type?: 'success' | 'info' | 'warning' | 'danger' }",
      "ITagGroupItemClick": "type ITagGroupItemClick = (item: ITagGroupDataItem, index: number, event: Event) => void"
    },
    "events": [
      {
        "name": "item-click",
        "description": "Click events for individual labels",
        "description_zh": "单个标签的点击事件",
        "params": "ITagGroupItemClick",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [],
    "filename": "TagGroup"
  },
  {
    "name": "TinyTimeline",
    "props": {
      ":active": {
        "default": "-1",
        "value": "",
        "type": "number",
        "description": "The index of the current node, which is counted from 0",
        "description_zh": "当前节点索引，从0开始计数"
      },
      "auto-color-field": {
        "default": "--",
        "value": "",
        "type": "String",
        "description": "Displays the component secondary title content, with the default value of autoColor",
        "description_zh": "显示组件二级标题内容，默认值为 autoColor"
      },
      "data": {
        "default": "[]",
        "value": "",
        "type": "ITimelineItem",
        "description": "Node data",
        "description_zh": "节点数据"
      },
      "horizontal": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether it is horizontal",
        "description_zh": "是否水平方向"
      },
      "line-width": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "The length of the connection line takes effect only when the text-position value is 'right', and the space attribute is invalid after it is set",
        "description_zh": "连接线长度，仅当 text-position 取值为 'right' 时生效，设置后 space 属性失效"
      },
      "name-field": {
        "default": "'name'",
        "value": "",
        "type": "string",
        "description": "The name of the field corresponding to the node name",
        "description_zh": "节点名称对应的字段名"
      },
      "only-number": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the node sequence number shows only numbers applies to the landscape timeline",
        "description_zh": "节点序号是否只显示数字，适用于横向时间线"
      },
      "reverse": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to arrange nodes in reverse order, only for vertical timelines",
        "description_zh": "是否逆序排列节点，仅用于竖式时间线"
      },
      "shape": {
        "default": "'circle'",
        "value": "",
        "type": "string",
        "description": "Dot shape: Hollow round or solid dot, the value corresponds to 'circle' | 'dot'",
        "description_zh": "圆点外形: 空心圆形或实心圆点，取值分别对应 'circle' | 'dot'"
      },
      "show-divider": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the bottom divider, which applies to the landscape timeline",
        "description_zh": "是否显示底部分割线，适用于横向时间线"
      },
      "show-number": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the node in the incomplete state displays a sequence number",
        "description_zh": "未完成状态的节点是否显示序号"
      },
      "space": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "Node width, the value can be a number, a numeric string with a length unit, and a percentage string, and the number will be px as the length unit by default",
        "description_zh": "节点宽度， 取值为数字、带长度单位的数值字符串和百分比字符串，数字会默认以px为长度单位"
      },
      ":start": {
        "default": "1",
        "value": "",
        "type": "number",
        "description": "The starting value of the node sequence number",
        "description_zh": "节点序号起始值"
      },
      "time-field": {
        "default": "'time'",
        "value": "",
        "type": "string",
        "description": "The name of the field corresponding to the time information of the node",
        "description_zh": "节点时间信息对应的字段名"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is vertically oriented or not",
        "description_zh": "是否竖直方向"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-line",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-line",
    "typeDetail": {
      "ITimelineItem": "interface ITimelineItem {\n  name: string // 节点名称\n  activeColor: 'success' | 'warning' | 'error' | Component\n  time?: string // 节点时间\n  error?: boolean // 是否异常状态\n  disabled?: boolean // 是否禁用\n  type?: ITimelineItemType // 节点类型\n}",
      "ITimelineItemType": "type ITimelineItemType = 'primary' | 'success' | 'warning' | 'error' | 'info'"
    },
    "events": [
      {
        "name": "click",
        "description": "Node's click event, parameter: index: click the node's subscript node: click node data}",
        "description_zh": "节点的点击事件，参数：index：点击节点的下标 node： 点击节点数据}",
        "params": "(index: number, node: ITimelineItem) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "bottom",
        "description": "Customize the content at the bottom of the node",
        "description_zh": "自定义节点底部内容"
      },
      {
        "name": "description",
        "description": "Node description slot, for the landscape timeline",
        "description_zh": "节点描述信息插槽，适用于横向时间线"
      },
      {
        "name": "left",
        "description": "Customize the content on the left side of the node",
        "description_zh": "自定义节点左侧内容"
      },
      {
        "name": "right",
        "description": "Customize the content to the right of the node",
        "description_zh": "自定义节点右侧内容"
      },
      {
        "name": "top",
        "description": "Customize the top content of the node",
        "description_zh": "自定义节点顶部内容"
      }
    ],
    "filename": "Timeline"
  },
  {
    "name": "TinyTimelineItem",
    "props": {
      "line-width": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "The length of the connection line takes effect only when the value of the text-position property of the timeline component is true, and the space property is invalid after it is set",
        "description_zh": "连接线长度，仅当 timeline 组件 text-position 属性取值为 true 时生效，设置后 space 属性失效"
      },
      "node": {
        "default": "--",
        "value": "",
        "type": "ITimelineItem",
        "description": "Node data",
        "description_zh": "节点数据"
      },
      "space": {
        "default": "--",
        "value": "",
        "type": "string | number",
        "description": "Node width, the value can be a number, a numeric string with a length unit, and a percentage string, and the number will be px as the length unit by default",
        "description_zh": "节点宽度， 取值为数字、带长度单位的数值字符串和百分比字符串，数字会默认以px为长度单位"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-line",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/time-line",
    "typeDetail": {
      "ITimelineItem": "interface ITimelineItem {\n  name: string // 节点名称\n  activeColor: 'success' | 'warning' | 'error' | Component\n  time?: string // 节点时间\n  error?: boolean // 是否异常状态\n  disabled?: boolean // 是否禁用\n  type?: ITimelineItemType // 节点类型\n}",
      "ITimelineItemType": "type ITimelineItemType = 'primary' | 'success' | 'warning' | 'error' | 'info'"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "TimelineItem"
  },
  {
    "name": "TinyTree",
    "props": {
      "accordion": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is accordion mode or not, only one sibling tree node is opened at a time",
        "description_zh": "是否为手风琴模式，每次只打开一个同级树节点展开"
      },
      "add-disabled-keys": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "The list of node key values that are not allowed to be added can also be set using the setAddDisabledKeys method",
        "description_zh": "禁止添加的节点 key 值列表，也可通过 setAddDisabledKeys 方法设置"
      },
      "after-load": {
        "default": "--",
        "value": "",
        "type": "(nodes: object[])=> void",
        "description": "The callback function after the data of the subordinate tree node is loaded",
        "description_zh": "下级树节点数据加载完毕后的回调函数"
      },
      "allow-drag": {
        "default": "--",
        "value": "",
        "type": "(node)=>boolean",
        "description": "Determine whether the node can be dragged or not",
        "description_zh": "判断节点能否被拖拽"
      },
      "allow-drop": {
        "default": "--",
        "value": "",
        "type": "(srcNode, targetNode, type)=>void",
        "description": "Determines whether the target node can be placed when dragging. There are three types of parameters: 'prev', 'inner', and 'next', which represent placement before, insertion, and post-target nodes, respectively",
        "description_zh": "拖拽时判定目标节点能否被放置。type 参数有三种情况：'prev'、'inner' 和 'next'，分别表示放置在目标节点前、插入至目标节点和放置在目标节点后"
      },
      "check-on-click-node": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "When you click a node, the node is automatically selected",
        "description_zh": "是否点击节点时，自动勾选节点"
      },
      "check-strictly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is a parent-child strict mode",
        "description_zh": "是否为父子严格模式"
      },
      "current-node-key": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The node is currently selected",
        "description_zh": "当前选中节点"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "Set the data source, and display the data through the label and children attributes of the data item by default",
        "description_zh": "设置数据源, 默认通过数据项的 label , children 属性展示数据"
      },
      "default-checked-keys": {
        "default": "--",
        "value": "",
        "type": "string[]",
        "description": "The keys of the node that are selected by default",
        "description_zh": "默认勾选的节点的keys"
      },
      "default-expand-all": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to expand all nodes by default",
        "description_zh": "是否默认展开所有节点"
      },
      "default-expanded-keys": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "By default, the keys of the expansion node are expanded",
        "description_zh": "默认展开节点的keys"
      },
      "delete-disabled-keys": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "The list of node key values that are prohibited from being deleted can also be set by the setDeleteDisabledKeys method",
        "description_zh": "禁止删除的节点 key 值列表，也可通过 setDeleteDisabledKeys 方法设置"
      },
      "delete-node-method": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "If the device hook function of the node is deleted, if it returns false or returns a Promise and is rejected, the deletion will be stopped.",
        "description_zh": "删除节点的装置钩子函数，若返回 false 或者返回 Promise 且被 reject，则停止删除。 "
      },
      "draggable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable node dragging",
        "description_zh": "是否开启节点拖拽"
      },
      "edit-disabled-keys": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "The list of node key values that are forbidden to be edited can also be set by the setEditDisabledKeys method",
        "description_zh": "禁止编辑的节点 key 值列表，也可通过 setEditDisabledKeys 方法设置"
      },
      "empty-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The text that is displayed when the content is empty",
        "description_zh": "内容为空的时候展示的文本"
      },
      "expand-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Indicates the expanded icon",
        "description_zh": "指示展开的图标"
      },
      "expand-icon-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Indicates the color of the icon that is expanded",
        "description_zh": "指示展开的图标色"
      },
      "expand-on-click-node": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to expand/collapse the node when clicking on the content",
        "description_zh": "节点在点击内容时,是否展开 / 收起"
      },
      "filter-node-method": {
        "default": "--",
        "value": "",
        "type": "(value, data, node)=>boolean",
        "description": "When filtering a tree node, a method that returns true indicates that the node can be displayed, and a return of false indicates that the node will be hidden",
        "description_zh": "对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏"
      },
      "highlight-current": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to highlight the currently selected node",
        "description_zh": "是否高亮当前选中节点"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "Customize the node icon",
        "description_zh": "自定义节点图标"
      },
      "icon-trigger-click-node": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the node-click event is triggered when clicking the icon to expand the node",
        "description_zh": "点击图标展开节点时是否触发 node-click 事件"
      },
      ":indent": {
        "default": "18",
        "value": "",
        "type": "number",
        "description": "Horizontal indentation between adjacent nodes, in pixels",
        "description_zh": "相邻级节点间的水平缩进，单位为像素"
      },
      "lazy": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is an asynchronous loading mode, and then request data when the node is expanded",
        "description_zh": "是否为异步加载模式，展开节点时再请求数据"
      },
      "load": {
        "default": "--",
        "value": "",
        "type": "(node, resolve)=> void",
        "description": "The method for loading subtree data. After clicking the node, the component starts to call the load method, and only when resolve(data) is called in the load function, it means that the data returned to the subordinate level is successful.",
        "description_zh": "加载子树数据的方法。点击节点后，组件开始调用load方法，只有在load函数内调用resolve(data)，才表示返回下级的数据成功。"
      },
      "node-key": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The node uniquely identifies the attribute name",
        "description_zh": "节点唯一标识属性名称"
      },
      "only-check-children": {
        "default": "false",
        "value": "",
        "type": "Boolean",
        "description": "Whether only leaf nodes can be selected",
        "description_zh": "是否只能选中叶子节点"
      },
      ":props": {
        "default": "{children: 'children',label: 'label',disabled: 'disabled',isLeaf: 'isLeaf'}",
        "value": "",
        "type": "object",
        "description": "When a user passes in data in a non-standard format, specify the relationship of the mapped attributes",
        "description_zh": "用户传入非标准格式的数据时，指定映射属性的关系"
      },
      "render-after-expand": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to render a tree node after its children are first expanded",
        "description_zh": "是否在第一次展开某个树节点后才渲染其子节点"
      },
      "render-content": {
        "default": "--",
        "value": "",
        "type": "(h: Vue.h, { node, data, store }=> VNode",
        "description": "A rendering function for the content area of the tree node",
        "description_zh": "树节点的内容区的渲染函数"
      },
      "show-auxi": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "In tile view mode, whether to display auxiliary information for the node's parent path",
        "description_zh": "平铺视图模式时，是否显示节点的上级路径的辅助信息"
      },
      "show-check-easily": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "In strict mode, when the parent node is selected, the function area of the child node is automatically selected",
        "description_zh": "在严格模式时，是否显示勾选父节点时，自动勾选子节点的功能区域"
      },
      "show-checkbox": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is a multi-select mode",
        "description_zh": "是否为多选模式"
      },
      "show-contextmenu": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the context menu feature",
        "description_zh": "是否启用右键菜单功能"
      },
      "show-line": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the connection line",
        "description_zh": "是否显示连接线"
      },
      "show-radio": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is in radio mode",
        "description_zh": "是否为单选模式"
      },
      "shrink-icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "An icon that indicates shrinkage",
        "description_zh": "指示收缩的图标"
      },
      "shrink-icon-color": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The color of the icon that indicates the shrinkage",
        "description_zh": "指示收缩的图标色"
      },
      "size": {
        "default": "false",
        "value": "",
        "type": "medium / small",
        "description": "The size of the component",
        "description_zh": "组件的大小"
      },
      "view-type": {
        "default": "tree",
        "value": "",
        "type": "tree / plain",
        "description": "View mode, where tree is a normal view and plain is a tiled view",
        "description_zh": "视图模式,其中tree是普通视图，plain是平铺视图"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tree",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tree",
    "typeDetail": {},
    "events": [
      {
        "name": "add-node",
        "description": "Add an event for a node",
        "description_zh": "添加节点的事件",
        "params": "(node)=>void",
        "value": ""
      },
      {
        "name": "check",
        "description": "Event parameters after selecting a node: {data: currently selected node information, currentChecked: current selected status information of the tree component}",
        "description_zh": "勾选节点后的事件参数说明：{data:  当前选中节点信息, currentChecked: 树组件目前的选中状态信息}",
        "params": "(data, currentChecked)=>void",
        "value": ""
      },
      {
        "name": "check-change",
        "description": "Callback when the selected state of the node changes; Parameter description: {data: node status information, checked: check status of the currently clicked node, indeterminate: semi-selected status of the current node}",
        "description_zh": "节点选中状态发生变化时的回调;参数说明：{data: 节点状态信息,checked:当前点击节点的勾选状态,indeterminate:当前节点的半选状态}",
        "params": "(data, checked, indeterminate)=>void",
        "value": ""
      },
      {
        "name": "check-plain",
        "description": "In tiling mode, if you select or uncheck the node event, you need to set show-checkbox to true for it to take effect. Parameter description: { plainNode: the data of the node clicked, value: whether the checkbox is selected, the value can be true or false}",
        "description_zh": "平铺模式下，勾选或取消勾选节点的事件，需要设置show-checkbox为true才生效。参数说明：{ plainNode: 被点击的节点数据, value: 复选框是否选中，取值true或false }",
        "params": "(plainNode, value)=>void",
        "value": ""
      },
      {
        "name": "close-edit",
        "description": "Turn off the edited event",
        "description_zh": "关闭编辑的事件",
        "params": "()=>void",
        "value": ""
      },
      {
        "name": "current-change",
        "description": "The event triggered when the currently selected node changes; Parameter description: {data: node data, currentNode: node status information (including data)}",
        "description_zh": "当前选中节点变化时触发的事件;参数说明：{data: 节点数据,currentNode: 节点状态信息（包括数据）}",
        "params": "(data, currentNode)=>void",
        "value": ""
      },
      {
        "name": "delete-node",
        "description": "Delete the event for the node",
        "description_zh": "删除节点的事件",
        "params": "(node)=>void",
        "value": ""
      },
      {
        "name": "edit-node",
        "description": "Modify the event of a node",
        "description_zh": "修改节点的事件",
        "params": "(node)=>void",
        "value": ""
      },
      {
        "name": "leave-plain-view",
        "description": "In tile mode, click the node positioning icon to trigger the event. Parameter description: { plainNode: clicked node data, event: native click event }",
        "description_zh": "平铺模式下，点击节点定位图标触发的事件。参数说明：{ plainNode: 被点击的节点数据, event: 原生点击事件 }",
        "params": "(plainNode, event)=>void",
        "value": ""
      },
      {
        "name": "load-data",
        "description": "When lazy loading, the event that the data is loaded successfully; Parameter description: {data: loaded data}",
        "description_zh": "懒加载时，加载数据成功的事件;参数说明：{data: 加载的数据}",
        "params": "(data)=>void",
        "value": ""
      },
      {
        "name": "node-click",
        "description": "The event after clicking on the node. Parameter description: {data: node data, node: node status information (including data), vm: component instance}",
        "description_zh": "点击节点后的事件。 参数说明：{data: 节点数据,node: 节点状态信息（包括数据）,vm: 组件实例}",
        "params": "(data, node, vm)=>void",
        "value": ""
      },
      {
        "name": "node-collapse",
        "description": "Event parameters after node shrinking: {data: node data, node: node status information (including data), vm: current component instance}",
        "description_zh": "收缩节点后的事件参数说明：{data: 节点数据,node: 节点状态信息（包括数据）,vm: 当前组件实例}",
        "params": "(data, node, vm)=>void",
        "value": ""
      },
      {
        "name": "node-contextmenu",
        "description": "This event is triggered when a node is right-clicked; Parameter description: {event: native event, data: node data, node: node status information (including data), vm: component instance}",
        "description_zh": "当某一节点被鼠标右键点击时会触发该事件;参数说明：{event:原生事件,data: 节点数据,node: 节点状态信息（包括数据）,vm: 组件实例}",
        "params": "(event, data, node, vm)=>void",
        "value": ""
      },
      {
        "name": "node-drag-end",
        "description": "拖拽结束时（可能未成功）触发的事件; 参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,dropType: 拖拽类型, (before/after/inner/none),event: 原生事件}",
        "description_zh": "拖拽结束时（可能未成功）触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,dropType: 拖拽类型, (before/after/inner/none),event: 原生事件}",
        "params": "(srcNode, targetNode, dropType, event)=>void",
        "value": ""
      },
      {
        "name": "node-drag-enter",
        "description": "Events triggered when dragging into other nodes; Parameter description: {srcNode: drag node, targetNode: target node, event: native event}",
        "description_zh": "拖拽进入其他节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "params": "(srcNode, targetNode, event)=>void",
        "value": ""
      },
      {
        "name": "node-drag-leave",
        "description": "An event that is triggered when a node is dragged away; Parameter description: {srcNode: drag node, targetNode: target node, event: native event}",
        "description_zh": "拖拽离开某个节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "params": "(srcNode, targetNode, event)=>void",
        "value": ""
      },
      {
        "name": "node-drag-over",
        "description": "events that are triggered when a node is dragged and dropped; Parameter description: {srcNode: drag node, targetNode: target node, event: native event}",
        "description_zh": "在拖拽节点时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,event: 原生事件}",
        "params": "(srcNode, targetNode, event)=>void",
        "value": ""
      },
      {
        "name": "node-drag-start",
        "description": "The event that is triggered when a node starts dragging; Parameter description: {node: drag node, event: native event}",
        "description_zh": "节点开始拖拽时触发的事件;参数说明：{node: 拖拽节点，event: 原生事件}",
        "params": "(node, event)=>void",
        "value": ""
      },
      {
        "name": "node-drop",
        "description": "拖拽成功完成时触发的事件; 参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,dropType: 拖拽类型, (before/after/inner/none),event: 原生事件}",
        "description_zh": "拖拽成功完成时触发的事件;参数说明：{srcNode: 拖拽节点,targetNode: 目标节点,dropType: 拖拽类型, (before/after/inner/none),event: 原生事件}",
        "params": "(srcNode, targetNode, dropType, event)=>void",
        "value": ""
      },
      {
        "name": "node-expand",
        "description": "Events after the node is expanded. Parameter description: {data: node data, node: node status information (including data, vm: current component instance}",
        "description_zh": "展开节点后的事件。参数说明：{data: 节点数据,node: 节点状态信息（包括数据,vm: 当前组件实例}",
        "params": "(data, node, vm)=>void",
        "value": ""
      },
      {
        "name": "open-edit",
        "description": "Enter the edited event",
        "description_zh": "进入编辑的事件",
        "params": "()=>void",
        "value": ""
      },
      {
        "name": "save-edit",
        "description": "Save the edited event",
        "description_zh": "保存编辑的事件",
        "params": "(changedData, finalData)=>void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "addNode",
        "description": "In the specified node object, add a child node",
        "params": "(node:object) => void",
        "description_zh": "在指定的节点对象中，添加一个子节点",
        "value": ""
      },
      {
        "name": "append",
        "description": "Appends a child node to a node, and it is on top of the other child nodes. The target node in the parameter can be the node data or the key of the node",
        "params": "(newData:object, targetNodeOrTargetKey: object | string) => void",
        "description_zh": "为一个节点追加一个子节点，且位于其它子节点的最上方。参数中的目标节点可以是节点数据或节点的key",
        "value": ""
      },
      {
        "name": "closeEdit",
        "description": "The component exits the edit state",
        "params": "() => void",
        "description_zh": "组件退出编辑状态",
        "value": ""
      },
      {
        "name": "closeMenu",
        "description": "Close the node's custom menu",
        "params": "() => void",
        "description_zh": "关闭节点的自定义菜单",
        "value": ""
      },
      {
        "name": "editNode",
        "description": "Puts the specified node object into the edit state",
        "params": "(node:object) => void",
        "description_zh": "让指定的节点对象进入编辑状态",
        "value": ""
      },
      {
        "name": "expandAllNodes",
        "description": "Expand or collapse all nodes",
        "params": "(isExpand:boolean) => void",
        "description_zh": "展开或收起全部节点",
        "value": ""
      },
      {
        "name": "filter",
        "description": "Triggers the tree node to perform the filtering operation",
        "params": "(value:string) => void",
        "description_zh": "触发树节点进行筛选操作",
        "value": ""
      },
      {
        "name": "getCheckedKeys",
        "description": "Returns an array of keys for the currently selected nodes. When the parameter leafOnly is true, only the selected leaf nodes are returned.",
        "params": "(leafOnly:boolean) => string[]",
        "description_zh": "返回目前被选中的节点的 key 所组成的数组。当参数：leafOnly 为true时，只返回被选中的叶子节点。",
        "value": ""
      },
      {
        "name": "getCheckedNodes",
        "description": "Returns an array of currently selected nodes.",
        "params": "(leafOnly:boolean, includeHalfChecked:boolean) => object[]",
        "description_zh": "返回目前被选中的节点所组成的数组。",
        "value": ""
      },
      {
        "name": "getCurrentKey",
        "description": "Gets the key of the currently selected node",
        "params": "() => string",
        "description_zh": "获取当前被选中节点的 key",
        "value": ""
      },
      {
        "name": "getCurrentNode",
        "description": "Gets the data of the currently selected node, and returns null if no node is selected",
        "params": "() => data",
        "description_zh": "获得当前的选中的节点数据，若没有节点被选中则返回 null",
        "value": ""
      },
      {
        "name": "getHalfCheckedKeys",
        "description": "Returns an array of keys of the currently semi-selected nodes",
        "params": "() => result",
        "description_zh": "返回目前半选中的节点的 key 所组成的数组",
        "value": ""
      },
      {
        "name": "getHalfCheckedNodes",
        "description": "Returns an array of nodes that are currently half-selected",
        "params": "() => object[]",
        "description_zh": "返回目前半选中的节点所组成的数组",
        "value": ""
      },
      {
        "name": "getNode",
        "description": "Use \"node data\" or \"node key\" to obtain the node object in the tree component",
        "params": "(data: string | object) => node",
        "description_zh": "通过 \"节点数据\" 或者 \"节点的key\", 获得 Tree 组件中的 node 节点对象",
        "value": ""
      },
      {
        "name": "getNodeKey",
        "description": "Query the internal unique ID of a node object",
        "params": "(node:object) => number",
        "description_zh": "查询节点对象的内部唯一id",
        "value": ""
      },
      {
        "name": "getNodePath",
        "description": "An array of node data is returned by the ID of the node, which is used to return the entire path",
        "params": "(key:string) => object[]",
        "description_zh": "通过节点的id, 返回整个路径上节点数据的数组",
        "value": ""
      },
      {
        "name": "insertAfter",
        "description": "Add a node after a node",
        "params": "(newData:object, targetNodeOrTargetKey: object | string) => void",
        "description_zh": "在一个节点的后面增加一个节点",
        "value": ""
      },
      {
        "name": "insertBefore",
        "description": "Add a node in front of a node",
        "params": "(newData:object, targetNodeOrTargetKey: object | string) => void",
        "description_zh": "在一个节点的前面增加一个节点",
        "value": ""
      },
      {
        "name": "openEdit",
        "description": "The component enters the edit state",
        "params": "() => void",
        "description_zh": "组件进入编辑状态",
        "value": ""
      },
      {
        "name": "remove",
        "description": "Delete the node. When isSaveChildNode is true, the child elements of the current node are moved up to the parent node where the node was deleted.",
        "params": "(targetNodeOrTargetKey: object | string, isSaveChildNode :boolean ) => void",
        "description_zh": "删除节点。当参数：isSaveChildNode为true时，当前节点的子元素上移至删除节点的父节点中去。",
        "value": ""
      },
      {
        "name": "saveEdit",
        "description": "Returns the value of the component's edit status",
        "params": "() => object[]",
        "description_zh": "返回组件编辑状态的值",
        "value": ""
      },
      {
        "name": "saveNode",
        "description": "The node that is being edited saves and exits the editing state",
        "params": "() => void",
        "description_zh": "正在进行编辑的节点保存并退出编辑状态",
        "value": ""
      },
      {
        "name": "setAddDisabledKeys",
        "description": "Set the list of node key values that are not allowed to be added",
        "params": "(keys: string[]) => void",
        "description_zh": "设置禁止添加的节点 key 值列表",
        "value": ""
      },
      {
        "name": "setChecked",
        "description": "Set the check status of the node or the key of the node",
        "params": "( nodeOrKey: object|string,checked:boolean,deep:boolean) => void",
        "description_zh": "通过节点或节点的key,设置它的勾选状态",
        "value": ""
      },
      {
        "name": "setCheckedByNodeKey",
        "description": "By using the key of the node, set it to check or not check",
        "params": "(key:string, checked:boolean) => void",
        "description_zh": "通过节点的key, 设置它为勾选或不勾选",
        "value": ""
      },
      {
        "name": "setCheckedKeys",
        "description": "Use the key of the node to set a group of nodes to the selected state",
        "params": "(keys:string[], leafOnly:boolean) => void",
        "description_zh": "通过节点的key,设置一组节点为勾选状态",
        "value": ""
      },
      {
        "name": "setCheckedNodes",
        "description": "Based on the node data, set a group of nodes to the check state",
        "params": "( nodeArr: object[], leafOnly:boolean) => void",
        "description_zh": "通过节点数据，设置一组节点为勾选状态",
        "value": ""
      },
      {
        "name": "setCurrentKey",
        "description": "Use the key to set the current selected state of a node",
        "params": "(key:string) => void",
        "description_zh": "通过 key 设置某个节点的当前选中状态",
        "value": ""
      },
      {
        "name": "setCurrentNode",
        "description": "Use the node data to set the current selected state of a node",
        "params": "(data:object) => void",
        "description_zh": "通过节点数据， 设置某个节点的当前选中状态",
        "value": ""
      },
      {
        "name": "setCurrentRadio",
        "description": "In single-select mode, the first item to set default-checked-keys for a component instance is the checkmark value",
        "params": "() => void",
        "description_zh": "在单选模式下，设置组件实例的default-checked-keys 的第一项为勾选值",
        "value": ""
      },
      {
        "name": "setDeleteDisabledKeys",
        "description": "Set a list of node key values that are not allowed to be deleted",
        "params": "(keys: string[]) => void",
        "description_zh": "设置禁止删除的节点 key 值列表",
        "value": ""
      },
      {
        "name": "setEditDisabledKeys",
        "description": "Set a list of node key values that are prohibited from editing",
        "params": "(keys: string[]) => void",
        "description_zh": "设置禁止编辑的节点 key 值列表",
        "value": ""
      },
      {
        "name": "updateKeyChildren",
        "description": "Updates all child elements of the specified node",
        "params": "(key, children: object[]) => void",
        "description_zh": "更新指定节点的所有子元素",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "contextmenu",
        "description": "Customize the context menu content of the tree node, the slot context data is { node }",
        "description_zh": "自定义树节点的右键菜单内容，插槽上下文数据为 { node }"
      },
      {
        "name": "default",
        "description": "Customize the contents of the tree node, the slot context data is { node, data }",
        "description_zh": "自定义树节点的内容，插槽上下文数据为 { node, data }"
      },
      {
        "name": "empty",
        "description": "Customize the elements of empty data",
        "description_zh": "自定义空数据的元素"
      },
      {
        "name": "operation",
        "description": "Right-aligned element with node content and slot context data is { node }",
        "description_zh": "节点内容靠右对齐的元素，插槽上下文数据为 { node }"
      },
      {
        "name": "prefix",
        "description": "Node content prepend element, slot context data is { node }",
        "description_zh": "节点内容前置元素，插槽上下文数据为 { node }"
      },
      {
        "name": "suffix",
        "description": "Node content post-element, slot context data is { node }",
        "description_zh": "节点内容后置元素，插槽上下文数据为 { node }"
      },
      {
        "name": "switch-text",
        "description": "When the function of automatically selecting sub-nodes is displayed in strict mode, customize the content on the right side of the switch",
        "description_zh": "在严格模式显示自动勾选子节点的功能时，自定义开关右侧的内容"
      }
    ],
    "filename": "Tree"
  },
  {
    "name": "TinyUserHead",
    "props": {
      "background-color": {
        "default": "'#d9d9d9'",
        "value": "",
        "type": "string",
        "description": "Background color",
        "description_zh": "背景色"
      },
      "color": {
        "default": "'#ffffff'",
        "value": "",
        "type": "string",
        "description": "Text color",
        "description_zh": "文字颜色"
      },
      ":message-total": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Message count",
        "description_zh": "消息计数"
      },
      "message-type": {
        "default": "'details'",
        "value": "",
        "type": "string",
        "description": "消息类型 details|basic 可选",
        "description_zh": "消息类型 details|basic 可选"
      },
      ":message-upper-limit": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The message displays an upper limit",
        "description_zh": "消息显示上限"
      },
      "min": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Small size mode",
        "description_zh": "小尺寸模式"
      },
      "modelValue": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the avatar value.",
        "description_zh": "设置头像值。"
      },
      "round": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Circular pattern",
        "description_zh": "圆形模式"
      },
      "type": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "头像类型，icon|image|label 可选",
        "description_zh": "头像类型，icon|image|label 可选"
      },
      "v-model": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "type=icon 时为图标类名，type=label 时为字体串，type=image 时为资源路径",
        "description_zh": "type=icon 时为图标类名，type=label 时为字体串，type=image 时为资源路径"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/user-head",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/user-head",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Customize image content",
        "description_zh": "自定义图像内容"
      }
    ],
    "filename": "UserHead"
  },
  {
    "name": "TinyWizard",
    "props": {
      "data": {
        "default": "--",
        "value": "",
        "type": "IDataItem[]",
        "description": "Set the node data",
        "description_zh": "设置节点数据"
      },
      "page-guide": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set up the Page Wizard mode",
        "description_zh": "设置页向导模式"
      },
      "time-line-flow": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set up the timeline",
        "description_zh": "设置时间线"
      },
      "vertical": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set to vertical mode",
        "description_zh": "设置为垂直模式"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/wizard",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/wizard",
    "typeDetail": {
      "IDataItem": "interface IDataItem {\n  name: string\n  status: string\n  showNode?: boolean\n  content?: string\n  imgUrl?: string\n  users?: string\n  userName?: string\n  roleNumber?: string\n  date?: string\n  values?: IDataItemValuesItem[]\n}\n\ninterface IDataItemValuesItem {\n  text: string\n  value: string\n}"
    },
    "events": [
      {
        "name": "btn-next",
        "description": "In page wizard mode, click the \"Next\" button to trigger the callback event",
        "description_zh": "页向导模式下，点击“下一步”按钮触发的回调事件",
        "params": "(datas: IDataItem[]) => void",
        "value": ""
      },
      {
        "name": "btn-prev",
        "description": "In page wizard mode, click the \"Back\" button to trigger the callback event",
        "description_zh": "页向导模式下，点击“上一步”按钮触发的回调事件",
        "params": "(datas: IDataItem[]) => void",
        "value": ""
      },
      {
        "name": "btn-save",
        "description": "In page wizard mode, click the \"Save\" button to trigger the callback event",
        "description_zh": "页向导模式下，点击“保存”按钮触发的回调事件",
        "params": "(datas: IDataItem[]) => void",
        "value": ""
      },
      {
        "name": "btn-submit",
        "description": "In page wizard mode, clicking \"Next\" causes the status of the last node to be \"doing\", and then clicking the \"Submit\" button triggers the callback event",
        "description_zh": "页向导模式下，点击“下一步”导致最后一个节点的状态为 \"doing\" 时，点击“提交”按钮触发的回调事件",
        "params": "(datas: IDataItem[]) => void",
        "value": ""
      },
      {
        "name": "node-click",
        "description": "Node click event",
        "description_zh": "节点点击事件",
        "params": "(node: IDataItem, index: number, event: Event) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "base",
        "description": "Basic slots",
        "description_zh": "基本插槽"
      },
      {
        "name": "stepbutton",
        "description": "Page Wizard Mode button slot",
        "description_zh": "页向导模式按钮插槽"
      }
    ],
    "filename": "Wizard"
  },
  {
    "name": "TinyAlert",
    "props": {
      "center": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the text is centered or not",
        "description_zh": "文字是否居中"
      },
      "closable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the warning can be turned off",
        "description_zh": "警告是否可以关闭"
      },
      "close-text": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Close button custom text",
        "description_zh": "关闭按钮自定义文本"
      },
      "custom-class": {
        "default": "'customClass'",
        "value": "",
        "type": "string",
        "description": "Custom class name",
        "description_zh": "自定义类名"
      },
      "description": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The prompt content of the warning",
        "description_zh": "警告的提示内容"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "Component",
        "description": "The icon of the custom warning of the incoming icon component will automatically use the corresponding icon based on the type value by default",
        "description_zh": "传入图标组件自定义警告的图标，默认会根据 type 值自动使用对应图标"
      },
      "show-icon": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the icon",
        "description_zh": "是否显示图标"
      },
      "size": {
        "default": "'normal'",
        "value": "",
        "type": "normal / large",
        "description": "The size of the warning",
        "description_zh": "警告的尺寸大小"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The title of the warning, which is valid when size is large, is automatically set based on type by default",
        "description_zh": "警告的标题，在 size 为 large 时有效，默认会根据 type 自动设置"
      },
      "type": {
        "default": "'info'",
        "value": "",
        "type": "IType",
        "description": "The type of warning",
        "description_zh": "警告的类型"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/alert",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/alert",
    "typeDetail": {
      "IType": "type IType = 'success' | 'warning' | 'info' | 'error' | 'simple'"
    },
    "events": [
      {
        "name": "close",
        "description": "An event that is triggered when the alert is closed",
        "description_zh": "关闭 alert 时触发的事件",
        "params": "() => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "close",
        "description": "Custom close content, which works when the closable property is false",
        "description_zh": "自定义关闭内容，当 closable 属性为 false 时有效"
      },
      {
        "name": "default",
        "description": "The default slot of the component, which is valid when size is set to large",
        "description_zh": "组件默认插槽，当 size 设置为 large 后有效"
      },
      {
        "name": "description",
        "description": "Presentation content",
        "description_zh": "提示内容"
      },
      {
        "name": "title",
        "description": "The content of the title, which is valid when size is set to large",
        "description_zh": "标题的内容，当 size 设置为 large 后有效"
      }
    ],
    "filename": "Alert"
  },
  {
    "name": "TinyDialogBox",
    "props": {
      "append-to-body": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not the DialogBox itself is inserted into the body, the nested dialog must specify that property and assign it to true",
        "description_zh": "DialogBox 本身是否插入到 body 上，嵌套的 Dialog 必须指定该属性并赋值为 true"
      },
      "center": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "When set to true, the head and bottom content of the popover box is automatically centered",
        "description_zh": "设置为 true 时 弹出框的头部与底部内容会自动居中"
      },
      "close-on-click-modal": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Is it possible to close the pop-up window by clicking on the mask layer?",
        "description_zh": "是否可以通过点击遮罩层关闭弹窗"
      },
      "close-on-press-escape": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Is it possible to turn off the mask layer with the ESC key",
        "description_zh": "是否可以通过 ESC 键关闭遮罩层"
      },
      "destroy-on-close": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Elements in the dialog are destroyed when closed, not hidden",
        "description_zh": "关闭时销毁对话框内的元素，而非隐藏"
      },
      "dialog-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Customize the class name of the pop-up window",
        "description_zh": "自定义配置弹窗类名"
      },
      "dialog-transition": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The activation pop-up animation changes from small to large",
        "description_zh": "启动弹出动效由小变大"
      },
      "drag-outside-window": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "to drag a pop-up window out of the window",
        "description_zh": "可将弹窗拖出窗口"
      },
      "draggable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the drag and drop function of the pop-up window",
        "description_zh": "是否开启弹窗的拖拽功能"
      },
      "fullscreen": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the pop-up box is full-screen",
        "description_zh": "弹出框是否全屏"
      },
      "is-form-reset": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Close the pop-up window and reset the form data by default",
        "description_zh": "关闭弹窗，默认重置表单数据"
      },
      "lock-scroll": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Dialog 弹出时是否禁用滚动条",
        "description_zh": "Dialog 弹出时是否禁用滚动条"
      },
      ":max-height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Achieve the maximum window height",
        "description_zh": "实现窗口最大高度"
      },
      "modal": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the mask layer",
        "description_zh": "是否启用遮罩层"
      },
      "modal-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the mask layer is applied to the body, if false, the mask layer is applied to the parent element of the DialogBox",
        "description_zh": "遮罩层是否应用到 body 上，为 false 时遮罩层会应用到 DialogBox 的父元素上"
      },
      "resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the pop-up window can switch to full screen",
        "description_zh": "弹窗是否能切换全屏"
      },
      "right-slide": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the slide-out function on the right side of the pop-up",
        "description_zh": "是否开启弹出右侧滑出功能"
      },
      "show-close": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a close button",
        "description_zh": "是否显示关闭按钮"
      },
      "show-header": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the header of the pop-up window",
        "description_zh": "是否显示弹窗头部 header"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Pop-up box title",
        "description_zh": "弹出框标题"
      },
      "top": {
        "default": "'15vh'",
        "value": "",
        "type": "string",
        "description": "Sets the height of the pop-up box from the top of the window",
        "description_zh": "设置弹出框距离窗口顶部的高度"
      },
      "visible": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Control the display and closure of pop-up boxes",
        "description_zh": "控制弹出框显示与关闭"
      },
      "width": {
        "default": "'500px'",
        "value": "",
        "type": "string",
        "description": "The width of the pop-up box",
        "description_zh": "弹出框的宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dialog-box",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dialog-box",
    "typeDetail": {
      "IResizeEvent": "interface IResizeEvent {\n  // 当前的全屏状态\n  fullscreen: boolean\n  // 弹窗的元素\n  dialog: HTMLElement\n}"
    },
    "events": [
      {
        "name": "before-close",
        "description": "Dialog is executed before closing the pop-up window",
        "description_zh": "Dialog 关闭弹窗前，执行的事件",
        "params": "(arg:() => void) => void",
        "value": ""
      },
      {
        "name": "close",
        "description": "Dialog-closed callbacks",
        "description_zh": "Dialog 关闭的回调",
        "params": "() => {}",
        "value": ""
      },
      {
        "name": "closed",
        "description": "Dialog closes the callback at the end of the animation",
        "description_zh": "Dialog 关闭动画结束时的回调",
        "params": "() => {}",
        "value": ""
      },
      {
        "name": "drag-end",
        "description": "Dialog Drag End Event; The arg contains information such as the location of the pop-up window",
        "description_zh": "Dialog 拖拽结束事件;arg包含弹窗的位置等信息",
        "params": "(arg) => {}",
        "value": ""
      },
      {
        "name": "drag-move",
        "description": "Dialog drag-and-drop move event; The arg contains information such as the location of the pop-up window",
        "description_zh": "Dialog 拖拽移动事件;arg包含弹窗的位置等信息",
        "params": "(arg) => {}",
        "value": ""
      },
      {
        "name": "drag-start",
        "description": "dialog drag and drop to start the event; The arg contains information such as the location of the pop-up window",
        "description_zh": "Dialog 拖拽开始事件;arg包含弹窗的位置等信息",
        "params": "(arg) => {}",
        "value": ""
      },
      {
        "name": "open",
        "description": "Dialog-opened callbacks",
        "description_zh": "Dialog 打开的回调",
        "params": "() => {}",
        "value": ""
      },
      {
        "name": "opened",
        "description": "The dialog opens the callback at the end of the animation",
        "description_zh": "Dialog 打开动画结束时的回调",
        "params": "() => {}",
        "value": ""
      },
      {
        "name": "resize",
        "description": "An event when the size of the pop-up changes, such as when switching to a full-screen state",
        "description_zh": "弹窗大小变化时的事件，比如切换全屏状态时",
        "params": "(ev: IResizeEvent) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Dialog's content slots",
        "description_zh": "Dialog 的内容插槽"
      },
      {
        "name": "footer",
        "description": "Dialog button action area content slot",
        "description_zh": "Dialog 按钮操作区的内容插槽"
      },
      {
        "name": "title",
        "description": "The content slot in the Dialog header area",
        "description_zh": "Dialog 标题区的内容插槽"
      }
    ],
    "filename": "DialogBox"
  },
  {
    "name": "TinyDrawer",
    "props": {
      "before-close": {
        "default": "--",
        "value": "",
        "type": "(type) => boolean",
        "description": "The callback before the pop-up window closes, returning false will prevent the pop-up window from closing",
        "description_zh": "弹窗关闭前的回调，返回 false 会阻止弹窗关闭"
      },
      "dragable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to enable the width of the drawer",
        "description_zh": "是否开启抽屉的宽度拖拽功能"
      },
      "mask": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the mask layer",
        "description_zh": "是否显示遮罩层"
      },
      "mask-closable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "By default, when the pop-up window is opened, you can click the mask layer to close the pop-up window, and set mask-closable to false to disable the feature",
        "description_zh": "默认情况下，弹窗打开后，可以单击遮罩层关闭弹窗，设置 mask-closable 为 false 后将禁用该功能"
      },
      "placement": {
        "default": "'right'",
        "value": "",
        "type": "left / right / top / bottom ",
        "description": "Set the orientation of the drawer",
        "description_zh": "设置抽屉的方向"
      },
      "show-close": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the close icon",
        "description_zh": "是否显示关闭图标"
      },
      "show-footer": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to show the bottom",
        "description_zh": "是否显示底部"
      },
      "show-header": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to show the head",
        "description_zh": "是否显示头部"
      },
      "visible": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Control the display and closure of drawers",
        "description_zh": "控制抽屉的显示与关闭"
      },
      "width": {
        "default": "'500px'",
        "value": "",
        "type": "string",
        "description": "Sets the width of the drawer",
        "description_zh": "设置抽屉的宽度"
      },
      ":z-index": {
        "default": "2000",
        "value": "",
        "type": "number",
        "description": "Custom stacking order (may be used for some special scenes, such as when occluded)",
        "description_zh": "自定义堆叠顺序（对于某些特殊场景，比如被遮挡时可能会用到）"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/drawer",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/drawer",
    "typeDetail": {},
    "events": [
      {
        "name": "close",
        "description": "Close drawer event",
        "description_zh": "关闭抽屉事件",
        "params": "()=> void",
        "value": ""
      },
      {
        "name": "confirm",
        "description": "Confirm event, valid when :show-footer=\"true\" is set",
        "description_zh": "确认事件，设置 :show-footer=\"true\" 时有效",
        "params": "()=> void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      },
      {
        "name": "footer",
        "description": "Bottom slot",
        "description_zh": "底部插槽"
      },
      {
        "name": "header",
        "description": "Head slot",
        "description_zh": "头部插槽"
      },
      {
        "name": "header-right",
        "description": "Slot on the right side of the head",
        "description_zh": "头部右侧插槽"
      }
    ],
    "filename": "Drawer"
  },
  {
    "name": "TinyModal",
    "props": {
      "cancel-btn-props": {
        "default": "{}",
        "value": "",
        "type": "Button.props",
        "description": "Customize the props of the cancel button, with optional values consistent with the Button component",
        "description_zh": "自定义取消按钮的 props ，可选值与 Button 组件一致"
      },
      "cancel-content": {
        "default": "'取消'",
        "value": "",
        "type": "string",
        "description": "Customize the content of the cancel button",
        "description_zh": "自定义取消按钮内容"
      },
      "confirm-btn-props": {
        "default": "{}",
        "value": "",
        "type": "Button.props",
        "description": "Customize the confirmation button props, with optional values consistent with the Button component",
        "description_zh": "自定义确认按钮 props，可选值与 Button 组件一致"
      },
      "confirm-content": {
        "default": "'确认'",
        "value": "",
        "type": "string",
        "description": "Customize the content of the confirmation button",
        "description_zh": "自定义确认按钮内容"
      },
      "duration": {
        "default": "3000",
        "value": "",
        "type": "number | string",
        "description": "The delay of auto-shutdown is only valid if the type is 'message'",
        "description_zh": "自动关闭的延时，仅当 type 为 'message' 有效"
      },
      "esc-closable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to allow pressing the Esc key to close the window",
        "description_zh": "是否允许按 Esc 键关闭窗口"
      },
      "footer-dragable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "The bottom of the control can be dragged",
        "description_zh": "控制底部可拖拽"
      },
      "fullscreen": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to maximize the display",
        "description_zh": "是否最大化显示"
      },
      "height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "The height of the window",
        "description_zh": "窗口的高度"
      },
      "id": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "If you don't want the window to be clicked repeatedly, you can set a unique ID to prevent repeated prompts, only if the type is 'message'",
        "description_zh": "如果不想窗口重复点击，可以设置唯一的 id 防止重复提示，仅当 type 为 'message' 有效"
      },
      "is-form-reset": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "When the pop-up window is closed, whether to reset the form data",
        "description_zh": "关闭弹窗时，是否重置表单数据"
      },
      "lock-scroll": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to lock the scroll bar and not allow the page to scroll",
        "description_zh": "是否锁住滚动条，不允许页面滚动"
      },
      "lock-view": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to lock the page and not allow any operation outside the window",
        "description_zh": "是否锁住页面，不允许窗口之外的任何操作"
      },
      "mask": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display the mask layer",
        "description_zh": "是否显示遮罩层"
      },
      "mask-closable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether to allow clicking on the mask layer to close the window",
        "description_zh": "是否允许点击遮罩层关闭窗口"
      },
      "message": {
        "default": "--",
        "value": "",
        "type": "string | VNode | () => string | VNode",
        "description": "The contents of the window",
        "description_zh": "窗口的内容"
      },
      "message-closable": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "'message' 类型弹窗是否显示关闭按钮",
        "description_zh": "'message' 类型弹窗是否显示关闭按钮"
      },
      "min-height": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "The minimum height of the window",
        "description_zh": "窗口的最小高度"
      },
      "min-width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "The minimum width of the window",
        "description_zh": "窗口的最小宽度"
      },
      "v-model": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether it is displayed or not",
        "description_zh": "是否显示"
      },
      "resize": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to allow dragging to resize the window",
        "description_zh": "是否允许拖动调整窗口大小"
      },
      "show-footer": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to show the bottom",
        "description_zh": "是否显示底部"
      },
      "show-header": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to show the head",
        "description_zh": "是否显示头部"
      },
      "status": {
        "default": "'info'",
        "value": "",
        "type": "IStatus",
        "description": "消息状态，当 type 为 'alert'、'message'、'confirm' 时有效",
        "description_zh": "消息状态，当 type 为 'alert'、'message'、'confirm' 时有效"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The title of the window",
        "description_zh": "窗口的标题"
      },
      "top": {
        "default": "15",
        "value": "",
        "type": "number | string",
        "description": "The position of the message from the top, only valid if the type is 'message'",
        "description_zh": "消息距离顶部的位置，仅当 type 为 'message' 时有效"
      },
      "type": {
        "default": "'alert'",
        "value": "",
        "type": "alert / confirm / message",
        "description": "Window type",
        "description_zh": "窗口类型"
      },
      "width": {
        "default": "--",
        "value": "",
        "type": "number | string",
        "description": "The width of the window (set the width in pixels or percentages, and the browser window size can be centered when the size of the browser window changes)",
        "description_zh": "窗口的宽度（设置宽度像素或者百分比，浏览器窗口大小改变可居中显示)"
      },
      ":z-index": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Custom stacking order (may be used for some special scenes, such as when occluded)",
        "description_zh": "自定义堆叠顺序（对于某些特殊场景，比如被遮挡时可能会用到）"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/modal",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/modal",
    "typeDetail": {
      "IModalEventParam": "interface IModalEventParam {\n  type: 'alert' | 'message' | 'confirm' // 弹窗类型\n  $modal: ComponentPublicInstance // Modal组件实例\n}",
      "IStatus": "type IStatus = 'info' | 'success' | 'warning' | 'error' | 'loading'"
    },
    "events": [
      {
        "name": "cancel",
        "description": "The event is triggered when the cancel button is clicked",
        "description_zh": "点击取消按钮时会触发该事件",
        "params": "(params: IModalEventParam, event: Event) => void",
        "value": ""
      },
      {
        "name": "close",
        "description": "The event is triggered when the close button is clicked",
        "description_zh": "点击关闭按钮时会触发该事件",
        "params": "(params: IModalEventParam, event: Event) => void",
        "value": ""
      },
      {
        "name": "confirm",
        "description": "The event is triggered when the OK button is clicked",
        "description_zh": "点击确定按钮时会触发该事件",
        "params": "(params: IModalEventParam, event: Event) => void",
        "value": ""
      },
      {
        "name": "hide",
        "description": "This event is triggered when the window is closed",
        "description_zh": "在窗口关闭时会触发该事件",
        "params": "(params: IModalEventParam) => void",
        "value": ""
      },
      {
        "name": "show",
        "description": "This event is triggered when the window is displayed",
        "description_zh": "在窗口显示时会触发该事件",
        "params": "(params: IModalEventParam) => void",
        "value": ""
      },
      {
        "name": "zoom",
        "description": "This event is triggered when the window zooms",
        "description_zh": "窗口缩放时会触发该事件",
        "params": "(params: IModalEventParam, event: Event) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      },
      {
        "name": "footer",
        "description": "Template at the bottom of the window",
        "description_zh": "窗口底部的模板"
      }
    ],
    "filename": "Modal"
  },
  {
    "name": "TinyPopConfirm",
    "props": {
      "cancel-button": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a cancel button",
        "description_zh": "是否展示取消按钮"
      },
      "custom-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Customize the class name for the bubble tooltip",
        "description_zh": "为气泡提示框自定义类名"
      },
      "message": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The contents of the bubble tooltip",
        "description_zh": "气泡提示框的内容"
      },
      "placement": {
        "default": "'top'",
        "value": "",
        "type": "IPopperPlacement",
        "description": "The position of the bubble tooltip is displayed",
        "description_zh": "气泡提示框显示位置"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the title of the bubble tooltip",
        "description_zh": "设置气泡提示框的标题"
      },
      "trigger": {
        "default": "'hover'",
        "value": "",
        "type": "click / hover",
        "description": "The bubble prompt shows how it was triggered",
        "description_zh": "气泡提示框显示触发方式"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "IPopconfirmtype",
        "description": "Hint icon type, you can pass in a custom icon",
        "description_zh": "提示图标类型，可以传入自定义图标"
      },
      "width": {
        "default": "350",
        "value": "",
        "type": "string | number",
        "description": "The width of the bubble tooltip",
        "description_zh": "气泡提示框宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popconfirm",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popconfirm",
    "typeDetail": {
      "IPplacement": "type IPplacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'",
      "IPopconfirmtype": "type IPopconfirmtype = 'info' | 'success' | 'warning' | 'error' | Component",
      "IPopconfirmState": "interface IPopconfirmState {\n        showPopover: boolean\n      }"
    },
    "events": [
      {
        "name": "confirm",
        "description": "Triggered when the Confirm button is clicked",
        "description_zh": "点击确认按钮时触发",
        "params": "(state: IPopconfirmState) => void",
        "value": ""
      },
      {
        "name": "hide",
        "description": "Triggered when the bubble acknowledges the box is closed",
        "description_zh": "气泡确认框关闭时触发",
        "params": "(state: IPopconfirmState) => void",
        "value": ""
      },
      {
        "name": "show",
        "description": "Triggered when the bubble confirmation box is displayed",
        "description_zh": "气泡确认框显示时触发",
        "params": "(state: IPopconfirmState) => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "footer",
        "description": "Bottom slot",
        "description_zh": "底部插槽"
      },
      {
        "name": "reference",
        "description": "The HTML element that triggers the bubble prompt to display",
        "description_zh": "触发气泡提示框显示的 HTML 元素"
      }
    ],
    "filename": "PopConfirm"
  },
  {
    "name": "TinyProgress",
    "props": {
      "color": {
        "default": "--",
        "value": "",
        "type": "string | IColorItem[] | (percentage: string) => string",
        "description": "Progress bar background color (overrides status color)",
        "description_zh": "进度条背景色（会覆盖 status 状态颜色）"
      },
      "format": {
        "default": "--",
        "value": "",
        "type": "() => string",
        "description": "Customize the text of the progress bar",
        "description_zh": "自定义进度条的文字"
      },
      ":percentage": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "Percentage (required); The optional values for this property are 0-100",
        "description_zh": "百分比（必填）；该属性的可选值为 0-100"
      },
      "show-text": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the text content of the progress bar",
        "description_zh": "是否显示进度条文字内容"
      },
      "status": {
        "default": "--",
        "value": "",
        "type": "success / exception / warning",
        "description": "The current status of the progress bar",
        "description_zh": "进度条当前状态"
      },
      ":stroke-width": {
        "default": "6",
        "value": "",
        "type": "number",
        "description": "The width of the progress bar of type line in px",
        "description_zh": "line 类型进度条的宽度，单位 px"
      },
      "text-inside": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "The progress bar display text is built into the progress bar (only available when type=line)",
        "description_zh": "进度条显示文字内置在进度条内（只在 type=line 时可用）"
      },
      "type": {
        "default": "'line'",
        "value": "",
        "type": "line / circle / dashboard",
        "description": "The type of progress bar",
        "description_zh": "进度条类型"
      },
      ":width": {
        "default": "126",
        "value": "",
        "type": "number",
        "description": "Circular progress bar canvas width (only available when type is Circle or Dashboard)",
        "description_zh": "环形进度条画布宽度（只在 type 为 circle 或 dashboard 时可用）"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/progress",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/progress",
    "typeDetail": {
      "IColorItem": "interface IColorItem {\n  color: string\n  percentage: number\n}"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Progress"
  },
  {
    "name": "TinyPopover",
    "props": {
      "append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to add it to the body",
        "description_zh": "是否添加到body上"
      },
      ":arrow-offset": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The position of the arrow offset of the pop-up layer",
        "description_zh": "弹出层的箭头偏移位置"
      },
      ":close-delay": {
        "default": "200",
        "value": "",
        "type": "number",
        "description": "The hidden delay in milliseconds when the trigger mode is Hover",
        "description_zh": "触发方式为 hover 时的隐藏延迟，单位为毫秒"
      },
      "content": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The contents of the pop-up layer",
        "description_zh": "弹出层的内容"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "height": {
        "default": "'auto'",
        "value": "",
        "type": "auto / number",
        "description": "The height of the pop-up layer",
        "description_zh": "弹出层高度"
      },
      ":offset": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The offset of the pop-up layer",
        "description_zh": "弹出层的偏移量"
      },
      ":open-delay": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The display delay in milliseconds when the trigger mode is Hover",
        "description_zh": "触发方式为 hover 时的显示延迟，单位为毫秒"
      },
      "placement": {
        "default": "'bottom'",
        "value": "",
        "type": "IPopperPlacement",
        "description": "The location where the pop-up layer appears",
        "description_zh": "弹出层出现的位置"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Add a class name to the pop-up layer",
        "description_zh": "为弹出层添加类名"
      },
      ":popper-options": {
        "default": "{}",
        "value": "",
        "type": "object",
        "description": "Pop-up layer parameters",
        "description_zh": "弹出层参数"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The title of the pop-up layer",
        "description_zh": "弹出层的标题"
      },
      "transition": {
        "default": "'fade-in-linear'",
        "value": "",
        "type": "string",
        "description": "Define the gradient animation",
        "description_zh": "定义渐变动画"
      },
      "trigger": {
        "default": "'click'",
        "value": "",
        "type": "click / focus / hover / manual",
        "description": "Trigger mode",
        "description_zh": "触发方式"
      },
      "v-model / modelValue": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether the status is visible or not, only valid if trigger=\"manual\".",
        "description_zh": "状态是否可见，仅在  trigger=\"manual\"  时有效"
      },
      "visible-arrow": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display an arrow for the pop-up layer",
        "description_zh": "是否显示弹出层的箭头"
      },
      "width": {
        "default": "'auto'",
        "value": "",
        "type": "auto / number",
        "description": "The width of the pop-up layer",
        "description_zh": "弹出层宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popover",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/popover",
    "typeDetail": {
      "IPopperOption": "interface IPopperOption {\n  bubbling: boolean // 是否监听元素所有上级有滚动元素的scroll事件，监听到则更新popper的位置。用于解决某些弹出层位置在页面滚动时，位置不正确的场景，默认false\n  followReferenceHide: boolean // 当触发源隐藏时，自动隐藏弹出层，默认true\n  removeOnDestroy: boolean // 弹出层消失后，是否移除弹出层的DOM元素，布尔false\n  updateHiddenPopperOnScroll: boolean  // 滚动过程中是否更新隐藏的弹出层位置\n  boundariesElement: 'viewport' | 'body' | HTMLElement // 滚动过程中,弹出层的碰撞边界。 默认值为： 'viewport'\n}",
      "IPopperPlacement": "type IPopperPlacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [
      {
        "name": "after-enter",
        "description": "It is triggered when the incoming animation finishes playing",
        "description_zh": "进入的动画播放完毕后触发",
        "params": "()=>void",
        "value": ""
      },
      {
        "name": "after-leave",
        "description": "Triggered when the left animation finishes playing",
        "description_zh": "离开的动画播放完毕后触发",
        "params": "()=>void",
        "value": ""
      },
      {
        "name": "hide",
        "description": "Triggered when hidden",
        "description_zh": "隐藏时触发",
        "params": "()=>void",
        "value": ""
      },
      {
        "name": "show",
        "description": "Triggered when displayed",
        "description_zh": "显示时触发",
        "params": "()=>void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Pop up the Layer Element slot",
        "description_zh": "弹出层元素插槽"
      },
      {
        "name": "reference",
        "description": "Triggers the source element slot, which is a required slot.",
        "description_zh": "触发源元素插槽，该插槽是必传插槽。"
      }
    ],
    "filename": "Popover"
  },
  {
    "name": "TinySkeleton",
    "props": {
      "animated": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to turn on animation",
        "description_zh": "是否开启动画"
      },
      "avatar": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display an avatar",
        "description_zh": "是否显示头像"
      },
      "loading": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the skeleton screen, when false is displayed, the content will be displayed after loading",
        "description_zh": "是否显示骨架屏，传 false 时会展示加载完成后的内容"
      },
      ":rows": {
        "default": "3",
        "value": "",
        "type": "number",
        "description": "Default style, configurable number of lines to display in paragraphs",
        "description_zh": "默认样式，可配置段落显示行数"
      },
      "rows-width": {
        "default": "[]",
        "value": "",
        "type": "number[] | string[]",
        "description": "Customize the width of each line of the paragraph, each item in the array can be number or string, and when it is number, the component will automatically increment the px unit",
        "description_zh": "自定义段落每一行的宽度，数组中的每一项可以为 number 或 string ，当为 number 时，组件会自动增加 px 单位"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/skeleton",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/skeleton",
    "typeDetail": {
      "IVariant": "type IVariant = 'image' | 'circle' | 'square'",
      "ISize": "type ISize = 'large' | 'medium' | 'small'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "What is displayed when the load is complete",
        "description_zh": "加载完成后显示的内容"
      },
      {
        "name": "placeholder",
        "description": "Customize the skeleton screen structure",
        "description_zh": "自定义骨架屏结构"
      }
    ],
    "filename": "Skeleton"
  },
  {
    "name": "TinySkeletonItem",
    "props": {
      "size": {
        "default": "'medium'",
        "value": "",
        "type": "ISize",
        "description": "针对 image 和 circle 形态，内置三种大小",
        "description_zh": "针对 image 和 circle 形态，内置三种大小"
      },
      "variant": {
        "default": "'square'",
        "value": "",
        "type": "IVariant",
        "description": "Skeleton screen form",
        "description_zh": "骨架屏形态"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/skeleton",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/skeleton",
    "typeDetail": {
      "IVariant": "type IVariant = 'image' | 'circle' | 'square'",
      "ISize": "type ISize = 'large' | 'medium' | 'small'"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "SkeletonItem"
  },
  {
    "name": "TinyToolTip",
    "props": {
      "append-to-body": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "Whether to add elements of the pop-up layer to the body",
        "description_zh": "是否将弹出层的元素添加到body上"
      },
      ":close-delay": {
        "default": "300",
        "value": "",
        "type": "number",
        "description": "The length of time the delay is turned off, in milliseconds",
        "description_zh": "延迟关闭的时长，单位毫秒"
      },
      "content": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "What is displayed",
        "description_zh": "显示的内容"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether Tooltip is disabled",
        "description_zh": "Tooltip 是否禁用"
      },
      "effect": {
        "default": "'dark'",
        "value": "",
        "type": "dark / light",
        "description": "Tips on the subject",
        "description_zh": "提示的主题"
      },
      "enterable": {
        "default": " true",
        "value": "",
        "type": "boolean",
        "description": "Whether the mouse can enter the pop-up layer of the tooltip",
        "description_zh": "鼠标是否可进入到 tooltip 的弹出层中"
      },
      ":hide-after": {
        "default": " 0",
        "value": "",
        "type": "number",
        "description": "The duration of auto-hide after occurrence, in milliseconds, and 0 will not be auto-hidden",
        "description_zh": "出现后自动隐藏的时长，单位毫秒，为 0 则不会自动隐藏"
      },
      "manual": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Manual control mode, when set to true, the mouseenter and mouseleave events will not take effect",
        "description_zh": "手动控制模式，设置为 true 后，mouseenter 和 mouseleave 事件将不会生效"
      },
      "v-model": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "If manual = true is configured, the pop-up status is controlled",
        "description_zh": "配置 manual = true时，控制弹出状态"
      },
      ":offset": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The offset of where the pop-up layer appears",
        "description_zh": "弹出层出现位置的偏移量"
      },
      ":open-delay": {
        "default": "0",
        "value": "",
        "type": "number",
        "description": "The duration of the delay occurring, in milliseconds",
        "description_zh": "延迟出现的时长，单位毫秒"
      },
      "placement": {
        "default": "'bottom'",
        "value": "",
        "type": "IPopperPlacement",
        "description": "The location of the Tooltip",
        "description_zh": "Tooltip 的出现位置"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Add a class name to the pop-up layer of Tooltip",
        "description_zh": "为 Tooltip 的弹出层添加类名"
      },
      "popper-options": {
        "default": " { }",
        "value": "",
        "type": "IPopperOption",
        "description": "Pop-up layer parameters",
        "description_zh": "弹出层参数"
      },
      "pre": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "content 文本是否预格式化",
        "description_zh": "content 文本是否预格式化"
      },
      "renderContent": {
        "default": "--",
        "value": "",
        "type": "(h: Vue.h, content:string)=> VNode",
        "description": "Customize the rendering function to return the node content that needs to be rendered",
        "description_zh": "自定义渲染函数,返回需要渲染的节点内容"
      },
      ":tabindex": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Set the tabindex of the component's trigger source",
        "description_zh": "设置组件的触发源的 tabindex"
      },
      "transition": {
        "default": "'tiny-fade-in-linear'",
        "value": "",
        "type": "string",
        "description": "Defines the class name for the gradient animation",
        "description_zh": "定义渐变动画的类名"
      },
      "type": {
        "default": "--",
        "value": "",
        "type": "normal / warning / error / info / success",
        "description": "提示的类型， type 的优先级大于 effect",
        "description_zh": "提示的类型， type 的优先级大于 effect "
      },
      "visible": {
        "default": "'always'",
        "value": "",
        "type": " always / auto",
        "description": "Patterns that appear intelligently for prompts",
        "description_zh": "提示的智能出现的模式"
      },
      "visible-arrow": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display arrows",
        "description_zh": "是否显示箭头"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tooltip",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/tooltip",
    "typeDetail": {
      "IPopperOption": "interface IPopperOption {\n  bubbling: boolean // 是否监听元素所有上级有滚动元素的scroll事件，监听到则更新popper的位置。用于解决某些弹出层位置在页面滚动时，位置不正确的场景，默认false\n  followReferenceHide: boolean // 当触发源隐藏时，自动隐藏弹出层，默认true\n  removeOnDestroy: boolean // 弹出层消失后，是否移除弹出层的DOM元素，布尔false\n  updateHiddenPopperOnScroll: boolean  // 滚动过程中是否更新隐藏的弹出层位置\n  boundariesElement: 'viewport' | 'body' | HTMLElement // 滚动过程中,弹出层的碰撞边界。 默认值为： 'viewport'\n}",
      "IPopperPlacement": "type IPopperPlacement = 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'"
    },
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "content",
        "description": "Content slots",
        "description_zh": "内容插槽"
      },
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "ToolTip"
  },
  {
    "name": "TinyChart",
    "props": {
      "cancel-resize-check": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable container detection when resize is disabled",
        "description_zh": "是否禁用 resize 时的容器检测"
      },
      ":change-delay": {
        "default": "'0'",
        "value": "",
        "type": "number",
        "description": "property modifies the delay in triggering the chart redraw callback",
        "description_zh": "属性修改触发图表重绘回调的延迟"
      },
      ":data": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Data is made up of metrics and dimensions, with \"dimensions\" referring to attributes of the data and \"metrics\" being quantitative measures",
        "description_zh": "数据由指标和维度组成,“维度” 指的是数据的属性,“指标” 是量化衡量标准"
      },
      ":events": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Event bindings",
        "description_zh": "事件绑定"
      },
      "extend": {
        "default": "--",
        "value": "",
        "type": "IChartProps",
        "description": "echarts",
        "description_zh": "echarts 的配置项"
      },
      "height": {
        "default": "'400px'",
        "value": "",
        "type": "string",
        "description": "Sets the height of the chart container.",
        "description_zh": "设置图表容器的高度。"
      },
      ":init-options": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "init additional parameters",
        "description_zh": "init 附加参数"
      },
      "judge-width": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to handle the issue of width when generating charts",
        "description_zh": "是否处理生成图表时的宽度问题"
      },
      "legend-visible": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to display a legend",
        "description_zh": "是否显示图例"
      },
      "not-set-unchange": {
        "default": "--",
        "value": "",
        "type": "array",
        "description": "The properties of setOption are not participated in when they have not changed",
        "description_zh": "未发生变化时不参加 setOption 的属性"
      },
      ":resize-delay": {
        "default": "'200'",
        "value": "",
        "type": "number",
        "description": "The delay of the window resize event callback",
        "description_zh": "窗口 resize 事件回调的延迟"
      },
      "resizeable": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to handle the window resize event",
        "description_zh": "是否处理窗口 resize 事件"
      },
      "set-option-opts": {
        "default": "true",
        "value": "",
        "type": "boolean | object",
        "description": "echarts setOption 的第二个参数",
        "description_zh": "echarts setOption 的第二个参数"
      },
      ":theme": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Custom topic name.; Customize the theme object.",
        "description_zh": "自定义主题名称。;自定义主题对象。"
      },
      "theme-name": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "自定义主题名称,如果设置了 theme-name, 则 theme 无效",
        "description_zh": "自定义主题名称,如果设置了 theme-name, 则 theme 无效"
      },
      "tooltip-visible": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not a prompt box is displayed",
        "description_zh": "是否显示提示框"
      },
      "width": {
        "default": "'auto'",
        "value": "",
        "type": "string",
        "description": "Sets the width of the chart container.",
        "description_zh": "设置图表容器的宽度。"
      },
      ":width-change-delay": {
        "default": "'300'",
        "value": "",
        "type": "number",
        "description": "Delay in the change in container width",
        "description_zh": "容器宽度变化的延迟"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/chart",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/chart",
    "typeDetail": {
      "IChartProps": "interface IChartProps {\n  afterConfig: () => void \n  afterSetOption: () => void \n  afterSetOptionOnce: () => void \n  animation: object\n  axisPointer: object | array\n  backgroundColor: object | string\n  beforeConfig: () => void \n  brush: object | array\n  cancelResizeCheck: boolean\n  changeDelay: number // 默认值 0 \n  colorMode: string\n  colors: array \n  data: object | array\n  dataEmpty: boolean\n  dataZoom: object | array\n  events: object \n  extend: object\n  geo: object | array\n  graphic: object | array\n  grid: object | array\n  height: string // 默认值 '400px' \n  initOptions: object\n  judgeWidth: boolean // 默认值 false \n  legend: object | array\n  legendPosition: string \n  legendVisible: boolean // 默认值 true \n  loading: boolean\n  markArea: object \n  markLine: object \n  markPoint: object \n  notSetUnchange: array\n  radar: object\n  resizeDelay: number // 默认值 200 \n  resizeable: boolean // 默认值 true \n  series: object | array\n  setOptionOpts: boolean | object // 默认值 true \n  settings: object\n  textStyle: object | array\n  theme: object\n  themeName: object | string\n  timeline: object | array\n  title: object | array\n  toolbox: object | array\n  tooltip: object\n  tooltipFormatter: () => void \n  tooltipVisible: boolean // 默认值 true \n  visualMap: object | array \n  width: string // 默认值 'auto' \n  widthChangeDelay: number // 默认值 300 \n  xAxis: object | array\n  yAxis: object | array\n}",
      "IChartSettings": "interface IChartSettings {\n  type: string // 图表类型，可选值' bar '，' histogram '，' line ',' pie '，' ring '，' funnel '，' radar '，' waterfall '\n}"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Chart"
  },
  {
    "name": "TinyBulletinBoard",
    "props": {
      "active-name": {
        "default": "1",
        "value": "",
        "type": "string",
        "description": "By default, the first column is displayed, and you can choose '1', '2', '3', etc",
        "description_zh": "默认显示第1栏，可选'1' '2' '3'等"
      },
      "data": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "tab-item 数据; tab-item 数据",
        "description_zh": "tab-item 数据;tab-item 数据"
      },
      "icon": {
        "default": "--",
        "value": "",
        "type": "object , string",
        "description": "the font icon for the first message in the tab-item; The font icon for the first message in tab-item",
        "description_zh": "tab-item中第一条信息的字体图标;tab-item中第一条信息的字体图标"
      },
      ":more-link": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "更多按钮跳转地址，show-more 为true 的时候生效; moreLink: { url: 'localhost:3000/', // 跳转地址，url 和 route 属性二选一，url优先级高  route: 'Alert', // 跳转路由，url 和 route 属性二选一，url优先级高  target: '_blank', // 跳转方式  text: '更多'  // 链接文本 }",
        "description_zh": "更多按钮跳转地址，show-more 为true 的时候生效;moreLink: { url: 'localhost:3000/', // 跳转地址，url 和 route 属性二选一，url优先级高  route: 'Alert', // 跳转路由，url 和 route 属性二选一，url优先级高  target: '_blank', // 跳转方式  text: '更多'  // 链接文本 }"
      },
      "show-more": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display more buttons is displayed by default and needs to be used at the same time as more-link",
        "description_zh": "是否显示更多按钮，默认显示,需要与 more-link 同时使用"
      },
      "tab-title": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "tab column data",
        "description_zh": "tab栏数据"
      },
      "title": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The title of the billboard",
        "description_zh": "公告牌的标题"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/bulletin-board",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/bulletin-board",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "BulletinBoard"
  },
  {
    "name": "TinyConfigProvider",
    "props": {
      "design": {
        "default": "--",
        "value": "",
        "type": "ConfigProviderProps",
        "description": "Specifications can be customized through some custom interaction specifications that belong to customization",
        "description_zh": "规范，可以通过该属于定制一些自定义的交互规范"
      },
      "direction": {
        "default": "ltr",
        "value": "",
        "type": "ltr / rtl",
        "description": "Text style direction",
        "description_zh": "文字样式方向"
      },
      ":tag": {
        "default": "{enable: true,name: 'div'}",
        "value": "",
        "type": "object",
        "description": "Whether it's wrapped in an element, if it's vue2 and doesn't have a single node, the component automatically creates a div",
        "description_zh": "是否被元素包裹, 如果是vue2且没有一个单一节点, 组件会自动创建一个div"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/config-provider",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/config-provider",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "ConfigProvider"
  },
  {
    "name": "TinyCrop",
    "props": {
      ":aspect-ratio": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "the aspect ratio of the crop box; The default is 16 / 9",
        "description_zh": "裁剪框的宽高比;默认为 16 / 9"
      },
      "auto-crop": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "When initializing, whether the cropping box is automatically displayed; Defaults to true",
        "description_zh": "初始化时，是否自动显示裁剪框;默认为 true"
      },
      ":auto-crop-area": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Define the size of the auto-clipping area (in percentage); The default is 0.8",
        "description_zh": "定义自动裁剪面积大小（百分比）;默认为 0.8"
      },
      "background": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "whether to display the grid background of the container; Defaults to true",
        "description_zh": "是否显示容器的网格背景;默认为 true"
      },
      "center": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether the crop frame is in the center of the image; Defaults to true",
        "description_zh": "裁剪框是否在图片正中心;默认为 true"
      },
      "crop-type": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the type to be returned after cropping, which can be set to blob and base64, and the default is base64",
        "description_zh": "设置图片裁剪后返回的类型，可配置为 blob 和 base64，默认为 base64"
      },
      "cropvisible": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Set whether the cropping pop-up box is visible; Defaults to false",
        "description_zh": "设置裁剪弹框是否可见;默认为 false"
      },
      "drag-mode": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Define the drag-and-drop mode of the cropper; Defaults to 'crop'; 'crop': can generate a new crop box 3. 'move': Only image 3 can be moved. 'none': Nothing to do",
        "description_zh": "定义 cropper 的拖拽模式;默认为 'crop';'crop'： 可以产生一个新的裁剪框 3 。'move'：只可以移动图片 3 。'none'： 什么也不处理"
      },
      "guides": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "whether to display a dotted line above the crop box; Defaults to true",
        "description_zh": "是否在裁剪框上方显示虚线;默认为 true"
      },
      "max-size": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Set the maximum size of the image to be cropped, the default is 1M; The default is 1M",
        "description_zh": "设置待裁剪图片的最大大小，默认为 1M ;默认为 1M"
      },
      ":min-container-height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "the minimum height of the container; The default is 300",
        "description_zh": "容器的最小高度;默认为 300"
      },
      ":min-container-width": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "the minimum width of the container; The default is 652",
        "description_zh": "容器的最小宽度;默认为 652"
      },
      ":min-crop-box-height": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "the minimum height of the cropping layer; The default is 0",
        "description_zh": "裁剪层的最小高度;默认为 0"
      },
      ":min-crop-box-width": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "the minimum width of the crop layer; The default is 0",
        "description_zh": "裁剪层的最小宽度;默认为 0"
      },
      "modal": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "whether to display the black modal below the crop box above the image; Defaults to true",
        "description_zh": "是否显示图片上方裁剪框下方的黑色模态;默认为 true"
      },
      "movable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "whether to allow the picture behind it to be moved; Defaults to true",
        "description_zh": "是否允许可以移动后面的图片;默认为 true"
      },
      "preview": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Sets whether the crop area image can be previewed, which is false by default",
        "description_zh": "设置裁剪区域图片是否可预览，默认为 false"
      },
      ":quality": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Set the compression ratio of the cropped image, the value is between 0-1, and the default is 0.92",
        "description_zh": "设置图片裁剪后的压缩比例，值在 0-1 之间，默认为 0.92"
      },
      "rotatable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "whether to allow the image to be rotated; Defaults to true",
        "description_zh": "是否允许旋转图像;默认为 true"
      },
      "src": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The source image cropped by default",
        "description_zh": "默认裁剪的源图片"
      },
      ":view-mode": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "Define the view mode of the cropper; Defaults to 0; 0: There is no limit, 3 can be moved to 2 outside. 1:3 can only move within 2. The 2:2 image is not all covered with 1 (i.e. there can be a gap on one side when zoomed out). The 3:2 picture fills the entire 1",
        "description_zh": "定义 cropper 的视图模式;默认为 0;0：没有限制，3 可以移动到 2 外。1：3 只能在 2 内移动。2：2 图片不全部铺满 1 （即缩小时可以有一边出现空隙）。3：2 图片填充整个 1"
      },
      ":wheel-zoom-ratio": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "When moving an image with the mouse, define the zoom level; The default is 0.1",
        "description_zh": "用鼠标移动图像时，定义缩放比例;默认为 0.1"
      },
      "zoom-on-wheel": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "whether the image can be zoomed or zoomed by scrolling the mouse wheel; Defaults to true",
        "description_zh": "是否可以通过滚动鼠标滚轮来缩放图像;默认为 true"
      },
      "zoomable": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "whether the image is allowed to be enlarged; Defaults to true",
        "description_zh": "是否允许放大图像;默认为 true"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/crop",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/crop",
    "typeDetail": {},
    "events": [
      {
        "name": "crop",
        "description": "Triggered when the canvas (image wrapper) or crop frame changes; The callback parameter is (event: event), native event",
        "description_zh": "当画布（图像包装器）或裁剪框发生改变时触发;回调参数为 (event: Event)，原生事件",
        "params": "Function(value)",
        "value": ""
      },
      {
        "name": "cropdata",
        "description": "The cropdata event callback function can get the cropped data, which is base64 data by default",
        "description_zh": "cropdata 事件回调函数中可以拿到裁剪后的数据，默认为 base64 数据",
        "params": "Function(data)",
        "value": ""
      },
      {
        "name": "cropend",
        "description": "Triggered when the canvas (image wrapper) or clipping box changes at the end of the process; The callback parameter is (event: Event)",
        "description_zh": "当画布（图像包装器）或剪切框发生变化结束时触发;回调参数为 (event: Event)",
        "params": "",
        "value": ""
      },
      {
        "name": "cropmove",
        "description": "Triggers when the canvas (image wrapper) or clipping box is changing; The callback parameter is (event: Event)",
        "description_zh": "当画布（图像包装器）或剪切框正在发生变化时触发;回调参数为 (event: Event)",
        "params": "",
        "value": ""
      },
      {
        "name": "cropstart",
        "description": "Triggers when the canvas (image wrapper) or clipping box starts to change; The callback parameter is (event: Event)",
        "description_zh": "当画布（图像包装器）或剪切框开始发生变化时触发;回调参数为 (event: Event)",
        "params": "",
        "value": ""
      },
      {
        "name": "ready",
        "description": "Triggers when a cropper instance is fully built",
        "description_zh": "当一个 cropper 实例完全构建时触发",
        "params": "",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "clear",
        "description": "",
        "params": "清除裁切框",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "destroy",
        "description": "",
        "params": "销毁 cropper 并从图像中删除整个 cropper",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "disable",
        "description": "",
        "params": "禁用裁切框（裁切框不可移动）",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "enable",
        "description": "",
        "params": "启用裁切框",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "getCanvasData",
        "description": "",
        "params": "获取画布 Canvas（图像包装器）位置和大小数据;返回的数据类型为 object",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "getContainerData",
        "description": "",
        "params": "获取 container 容器大小数据;返回的数据类型为 object",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "getCropBoxData",
        "description": "",
        "params": "获取剪切框的位置和大小数据;返回的数据类型为 object",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "getCroppedCanvas",
        "description": "",
        "params": "获取裁剪后的图片数据;.getCroppedCanvas().toDataURL()：转成 base64 图片;.getCroppedCanvas().toBlob()：生成 Blob 图片数据",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "getData",
        "description": "",
        "params": "获取最终裁剪的区域位置和大小数据（根据原始图像的自然大小）;参数为 (rounded) ，默认 false，设置 true 可以获取其所有数据;返回的数据类型为 object",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "getImageData",
        "description": "",
        "params": "获取图像 image 位置、大小和其他相关数据;返回的数据类型为 object",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "replace",
        "description": "",
        "params": "替换图像的 src 并重新构建 cropper;参数为 图片 URL",
        "description_zh": "",
        "value": ""
      },
      {
        "name": "setAspectRatio",
        "description": "",
        "params": "改变裁切框的宽高比;参数为(aspectRatio)，类型 number，是一个正数",
        "description_zh": "",
        "value": ""
      }
    ],
    "slots": [],
    "filename": "Crop"
  },
  {
    "name": "TinyDialogSelect",
    "props": {
      "before-close": {
        "default": "--",
        "value": "",
        "type": "() => boolean",
        "description": "The callback before the pop-up window closes, returning false will prevent the pop-up window from closing",
        "description_zh": "弹窗关闭前的回调，返回 false 会阻止弹窗关闭"
      },
      "dialog-op": {
        "default": "{}",
        "value": "",
        "type": "IDialogOption",
        "description": "Used to configure the properties of the DialogBox dialog component, dialog events and slots are transparent",
        "description_zh": "用于配置 DialogBox 对话框组件的属性，对话框事件和插槽已透传"
      },
      "grid-op": {
        "default": "{}",
        "value": "",
        "type": "IGridOption",
        "description": "tabular scene, configure the properties of the Grid component",
        "description_zh": "表格场景时，配置 Grid 组件的属性"
      },
      "lookup-method": {
        "default": "--",
        "value": "",
        "type": "() => Promise",
        "description": "Initializes the loading method of the selected data",
        "description_zh": "初始化选中数据的加载方法"
      },
      ":main-height": {
        "default": "290",
        "value": "",
        "type": "number",
        "description": "Configure the height of the table or tree area",
        "description_zh": "配置表格或树区域的高度"
      },
      "multi": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to select more than one",
        "description_zh": "是否多选"
      },
      "pager-op": {
        "default": "{\n  currentPage: 1,\n  pageSize: 10,\n  pageSizes: [10, 20, 30, 40, 50, 100],\n  total: 0,\n  layout: 'total, prev, pager, next, jumper'\n}",
        "value": "",
        "type": "IPagerOption",
        "description": "When using a table to display data, the property pagerOp is used to configure the properties of the pager pagination component, and the pagination event has been transparently transmitted",
        "description_zh": "使用表格展示数据时，属性 pagerOp 用于配置 Pager 分页组件的属性，分页事件已透传"
      },
      "popseletor": {
        "default": "'grid'",
        "value": "",
        "type": "string",
        "description": "The component type that displays the data in the pop-up window currently supports: 'grid' / 'tree'",
        "description_zh": "弹窗内展示数据的组件类型，目前支持：'grid' / 'tree'"
      },
      "remote-search": {
        "default": "--",
        "value": "",
        "type": "() => Promise",
        "description": "When you use a table to display data, configure the pagination query operation function of the table. When you use a tree to display data, configure a method to query all child data by pid",
        "description_zh": "使用表格展示数据时，配置表格分页查询操作函数；使用树展示数据时，配置通过pid查询所有子数据的方法"
      },
      "selected-box-op": {
        "default": "{}",
        "value": "",
        "type": "ISelectedBoxOption",
        "description": "When using a table to display data, the property selectedBoxOp is used to configure the properties of the SelectedBox selected column component, and the selected box slot is transparent",
        "description_zh": "使用表格展示数据时，属性 selectedBoxOp 用于配置 SelectedBox 已选栏组件的属性，已选栏插槽已透传"
      },
      "show-pager": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "When you use a table to display data, whether to display the pagination portlet",
        "description_zh": "使用表格展示数据时，是否显示分页组件"
      },
      "show-selected-box": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "When displaying data in a table, whether or not to display the selected column portlet",
        "description_zh": "使用表格展示数据时，是否显示已选栏组件"
      },
      "text-field": {
        "default": "'label'",
        "value": "",
        "type": "string",
        "description": "The display value field for the data item",
        "description_zh": "数据项的显示值字段"
      },
      "text-split": {
        "default": "'/'",
        "value": "",
        "type": "string",
        "description": "The label field used to splice data items when multi-selected",
        "description_zh": "多选时用于拼接数据项的 label 字段 "
      },
      "tree-op": {
        "default": "{}",
        "value": "",
        "type": "ITreeOption",
        "description": "When using a tree to display data, the configuration object of the tree component",
        "description_zh": "使用树展示数据时，树组件的配置对象"
      },
      "value-field": {
        "default": "'id'",
        "value": "",
        "type": "string",
        "description": "The selected value field for the data item",
        "description_zh": "数据项的选中值字段"
      },
      "value-split": {
        "default": "';'",
        "value": "",
        "type": "string",
        "description": "The selected value used to join data items when multi-select",
        "description_zh": "多选时用于拼接数据项的选中值"
      },
      "visible": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Control the display and closure of pop-up boxes",
        "description_zh": "控制弹出框显示与关闭"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dialog-select",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/dialog-select",
    "typeDetail": {
      "IDialogOption": "interface IDialogOption {\n  // 设置弹出框距离窗口顶部的高度，默认为 15vh\n  top: string,\n  // 弹出框的宽度,默认 500px\n  width: string\n  // 弹出框标题\n  title: string\n  beforeClose: () => boolean\n  // 自定义配置弹窗类名\n  dialogClass: string\n}",
      "IGridOption": "interface IGridOption {\n  // 表格列配置\n  columns: IColumnConfig[]  \n  // 表格列数据\n  data: [] \n  // 表格多选配置\n  selectConfig: { \n    // 翻页操作是否保留历史选择数据\n    reserve: boolean  \n    // 嵌套表格多选时，设置默认表格选中的数据\n    checkRowKeys: Array<string|number> \n  }\n  // 表格单选配置\n  radioConfig: { \n    //嵌套表格单选时，设置默认表格选中的数据 \n    checkRowKey: string|number  \n  }\n}",
      "IColumnConfig ": "interface IColumnConfig  {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  title: string\n  label: string\n  width: string | number\n}",
      "IPagerOption": "interface IPagerOption {\n  // 当前页，默认 1\n  currentPage: number \n  // 每页显示条目个数，默认 10\n  pageSize: number   \n  // 每页显示个数选择器的选项设置，默认 [10, 20, 30, 40, 50, 100]\n  pageSizes: Array<number> \n  // 总条目数\n  total:number\n  // 分页布局，默认 'total, prev, pager, next, jumper'\n  layout: string \n}",
      "ISelectedBoxOption": "interface ISelectedBoxOption {\n  config: {\n    pkField: string\n    pkFieldType: string,\n    showField: Array<string>,\n    // 传 sortablejs 插件\n    plugin: () => void   \n  }\n}",
      "ITreeOption": "interface ITreeOption {\n  // 树节点的唯一标识\n  nodeKey: string \n  pathSplit: string\n  props: { \n    // 默认为 children\n    children:string  \n    // 默认为 label\n    label: string   \n    // 默认为 isLeaf'\n    isLeaf: string \n  },\n  // 是否为父子严格模式\n  checkStrictly: boolean \n  // 相邻级节点间的水平缩进，单位为像素\n  baseIndent: number \n  // 加载子树数据的方法\n  load: (node, resolve)=> void \n  // 使用树展示数据时，用于配置搜索过滤接口\n  queryPidsBySearch: () => ITreeNodeData \n  // 使用树展示数据时，用于配置初始化过滤接口 \n  queryPidsByIds: () => ITreeNodeData \n  // 默认勾选的节点的keys\n  defaultCheckedKeys: Array<string|number> \n}",
      "ITreeNodeData": "interface ITreeNodeData {\n  // node-key='id' 设置节点的唯一标识\n  \"id\": number|string \n  // 节点显示文本  \n  \"label\": string \n  // 子节点\n  \"children\"?: ITreeNodeData[]  \n}",
      "IChangeParam": "// 树组件的节点数据信息\ninterface ItreeData = {\n  id: number|string\n  label: string\n  pid: number|string\n}\n\n// 用户自定义的表格行数据\ninterface IGridData = {\n  id: number|string\n [otherKeys] :any\n}\n\ninterface IChangeParam = {\n values: Array<number|string>|number|string\n texts: string|Array<string>\n selectedDatas: ItreeData[]|IGridData[]\n}",
      "IBeforeChangeParam": "interface IBeforeChangeParam {\ncallback: () => void   // 回调函数，调用则继续本次变更\nrollback: () => void   // 回滚函数，调用则阻止本次变更\nnewPage: number // 变更后所在页\nnewPageSize: number // 变更后分页大小\ncurrentPage: number // 当前所在页\ncurrentPageSize: number // 当前分页大小\n}",
      "IResizeEvent": "interface IResizeEvent {\n  // 当前的全屏状态\n  fullscreen: boolean\n  // 弹窗的元素\n  dialog: HTMLElement\n}"
    },
    "events": [
      {
        "name": "before-page-change",
        "description": "透传子组件 Pager 的 before-page-change 事件",
        "description_zh": "透传子组件 Pager 的 before-page-change 事件",
        "params": "(beforeChangeParam:IBeforeChangeParam) => void",
        "value": ""
      },
      {
        "name": "change",
        "description": "Listen for events where the value of the pop-up selection changes",
        "description_zh": "监听弹窗选择的值发生变化的事件",
        "params": "(changeParam:IChangeParam) => void",
        "value": ""
      },
      {
        "name": "close",
        "description": "The close event of the DialogBox subcomponent of the transparent transmission",
        "description_zh": "透传子组件 DialogBox 的 close 事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "closed",
        "description": "透传子组件 DialogBox 的 closed 事件",
        "description_zh": "透传子组件 DialogBox 的 closed 事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "current-change",
        "description": "透传子组件 Pager 的 current-change 事件",
        "description_zh": "透传子组件 Pager 的 current-change 事件",
        "params": "(currentPage: number) => void",
        "value": ""
      },
      {
        "name": "drag-end",
        "description": "drag-end event of DialogBox",
        "description_zh": "透传子组件 DialogBox 的 drag-end 事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "drag-move",
        "description": "透传子组件 DialogBox 的 drag-move 事件",
        "description_zh": "透传子组件 DialogBox 的 drag-move 事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "drag-start",
        "description": "drag-start event of DialogBox",
        "description_zh": "透传子组件 DialogBox 的 drag-start 事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "next-click",
        "description": "透传子组件 Pager 的 next-click 事件",
        "description_zh": "透传子组件 Pager 的 next-click 事件",
        "params": "(currentPage: number) => void",
        "value": ""
      },
      {
        "name": "open",
        "description": "The open event of the DialogBox subcomponent of transparent transmission",
        "description_zh": "透传子组件 DialogBox 的 open 事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "opened",
        "description": "透传子组件 DialogBox 的 opened 事件",
        "description_zh": "透传子组件 DialogBox 的 opened 事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "prev-click",
        "description": "透传子组件 Pager 的 prev-click 事件",
        "description_zh": "透传子组件 Pager 的 prev-click 事件",
        "params": "(currentPage: number) => void",
        "value": ""
      },
      {
        "name": "resize",
        "description": "An event when the size of the pop-up changes, such as when switching to a full-screen state",
        "description_zh": "弹窗大小变化时的事件，比如切换全屏状态时",
        "params": "(ev: IResizeEvent) => void",
        "value": ""
      },
      {
        "name": "size-change",
        "description": "透传子组件 Pager 的 size-change 事件",
        "description_zh": "透传子组件 Pager 的 size-change 事件",
        "params": "(pageSize: number) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "queryGridData",
        "description": "This is how to load tabular data when using a table to display data",
        "params": "() => void",
        "description_zh": "使用表格展示数据时，加载表格数据的方法",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "button",
        "description": "When using a table to present data, customize the custom button area of the selected column",
        "description_zh": "使用表格展示数据时，自定义已选栏的自定义按钮区域"
      },
      {
        "name": "clear",
        "description": "When using a table to display data, customize the Clear button area of the selected column",
        "description_zh": "使用表格展示数据时，自定义已选栏的清空按钮区域"
      },
      {
        "name": "close",
        "description": "When using a table to display data, customize the delete button for the selected column options",
        "description_zh": "使用表格展示数据时，自定义已选栏的选项的删除按钮"
      },
      {
        "name": "footer",
        "description": "Customize the bottom of the pop-up window",
        "description_zh": "自定义弹窗底部"
      },
      {
        "name": "option",
        "description": "When using a table to present data, customize the options for the selected columns",
        "description_zh": "使用表格展示数据时，自定义已选栏的选项"
      },
      {
        "name": "search",
        "description": "When you use a table to display data, you can customize the search area",
        "description_zh": "使用表格展示数据时，自定义搜索区域"
      },
      {
        "name": "select",
        "description": "When you use a table to display data, customize the selected prompt area of the selected column",
        "description_zh": "使用表格展示数据时，自定义已选栏的已选提示区域"
      },
      {
        "name": "title",
        "description": "Customize the title of the pop-up window",
        "description_zh": "自定义弹窗标题"
      }
    ],
    "filename": "DialogSelect"
  },
  {
    "name": "TinyFilterPanel",
    "props": {
      "blank": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Set the filter background to transparent",
        "description_zh": "将过滤器背景设置为透明"
      },
      "disabled": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether to disable or not",
        "description_zh": "是否禁用"
      },
      "label": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "title",
        "description_zh": "标题"
      },
      "placement": {
        "default": "'bottom-start'",
        "value": "",
        "type": "IPopperPlacement",
        "description": "For the position of the drop-down panel, please refer to the same property of the popover component",
        "description_zh": "下拉面板位置，可选值请参考popover组件的同属性"
      },
      "popper-append-to-body": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether or not to add the drop-down panel to the body element",
        "description_zh": "下拉面板是否添加到body元素中"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The class of the drop-down panel",
        "description_zh": "下拉面板的class"
      },
      "tip": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Tooltip to the right of the title",
        "description_zh": "标题右侧的提示信息"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The value displayed",
        "description_zh": "显示的值"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/filter-panel",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/filter-panel",
    "typeDetail": {},
    "events": [
      {
        "name": "handle-clear",
        "description": "Clear button click events",
        "description_zh": "清除按钮点击事件",
        "params": "() => void",
        "value": ""
      },
      {
        "name": "visible-change",
        "description": "The drop-down panel shows hidden events",
        "description_zh": "下拉面板显示隐藏事件",
        "params": "(visible: boolean) => void",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "hide",
        "description": "Ways to hide the drop-down panel",
        "params": "() => void",
        "description_zh": "隐藏下拉面板的方法",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "FilterPanel"
  },
  {
    "name": "TinyFloatBar",
    "props": {},
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/floatbar",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/floatbar",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Floating block contents.",
        "description_zh": "浮动块内容。"
      }
    ],
    "filename": "FloatBar"
  },
  {
    "name": "TinyFullscreen",
    "props": {
      "exit-on-click-wrapper": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "When using the component wrapper, click the component wrapper to turn off the full-screen display. Defaults to true",
        "description_zh": "组件式使用时，点击组件 wrapper 是否关闭全屏显示。默认为 true"
      },
      "fullscreen": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "When used as a component, you can control whether the component is displayed in full screen. Defaults to false",
        "description_zh": "组件式使用时，控制组件是否全屏显示。默认为 false"
      },
      "fullscreen-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "The style class name of the custom component wrapper",
        "description_zh": "自定义组件 wrapper 的样式类名"
      },
      "page-only": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Display mode. true is the full screen of the web page, and false is the full screen of the browser. The default value is false",
        "description_zh": "显示模式。true 为网页全屏，false 为浏览器全屏。默认值为 false"
      },
      "teleport": {
        "default": "--",
        "value": "",
        "type": "boolean",
        "description": "Whether to move the target element under the body. true is to move, false is not to move. The default value is false",
        "description_zh": "是否将目标元素移动到 body 下。true 为移动，false 为不移动。默认值为 false"
      },
      ":z-index": {
        "default": "--",
        "value": "",
        "type": "number",
        "description": "When displayed in full screen, the zIndex of the target element",
        "description_zh": "在全屏显示时，目标元素的 zIndex"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/fullscreen",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/fullscreen",
    "typeDetail": {},
    "events": [
      {
        "name": "before-change",
        "description": "Intercept events",
        "description_zh": "拦截事件",
        "params": "(done: () => void) => void",
        "value": ""
      },
      {
        "name": "update:fullscreen",
        "description": "When used as a component, update the fullscreen property",
        "description_zh": "组件式使用时，更新 fullscreen 属性",
        "params": "",
        "value": ""
      }
    ],
    "methods": [
      {
        "name": "toggle",
        "description": "",
        "params": "函数式使用时，切换全屏模式",
        "description_zh": "",
        "value": ""
      }
    ],
    "slots": [
      {
        "name": "default",
        "description": "Custom content, which requires a slot to be listed in the layout",
        "description_zh": "自定义内容，需要在 layout 中列出 slot"
      }
    ],
    "filename": "Fullscreen"
  },
  {
    "name": "TinyScrollText",
    "props": {
      "direction": {
        "default": "'left'",
        "value": "",
        "type": "up / left / down / right",
        "description": "The direction of the scroll",
        "description_zh": "滚动的方向"
      },
      "hover-stop": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the hover scrolling stops",
        "description_zh": "hover 滚动是否停止"
      },
      "text": {
        "default": "'ScrollText'",
        "value": "",
        "type": "string",
        "description": "Scrolling text content",
        "description_zh": "滚动的文本内容"
      },
      ":time": {
        "default": "5",
        "value": "",
        "type": "number",
        "description": "The time taken during the entire scrolling process",
        "description_zh": "整个滚动过程所用的时间"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/scroll-text",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/scroll-text",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slots, slots for scrolling content",
        "description_zh": "默认插槽，滚动的内容的插槽"
      }
    ],
    "filename": "ScrollText"
  },
  {
    "name": "TinySplit",
    "props": {
      "collapse-left-top": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Easy mode enables the left/upper expansion and collapse button",
        "description_zh": "简易模式启用左/上展开收起按钮"
      },
      "collapse-right-bottom": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Easy mode enables right/bottom expansion of the collapse button",
        "description_zh": "简易模式启用右/下展开收起按钮"
      },
      "left-top-min": {
        "default": "40px",
        "value": "",
        "type": "number | string",
        "description": "Left Panel / Top Panel Minimum Threshold",
        "description_zh": "左面板 / 上面板最小阈值"
      },
      "mode": {
        "default": "horizontal",
        "value": "",
        "type": "horizontal / vertical",
        "description": "分割类型，可选值为 horizontal 或 vertical；默认值horizontal",
        "description_zh": "分割类型，可选值为 horizontal 或 vertical；默认值horizontal"
      },
      "modelValue": {
        "default": "0.5",
        "value": "",
        "type": "number | string",
        "description": "Split the position of the panel",
        "description_zh": "分割面板的位置"
      },
      "right-bottom-min": {
        "default": "40px",
        "value": "",
        "type": "number | string",
        "description": "Right Panel/Bottom Panel Minimum Threshold",
        "description_zh": "右面板 / 下面板最小阈值"
      },
      "three-areas": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Configure 3 blocks",
        "description_zh": "配置3个区块"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/split",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/split",
    "typeDetail": {},
    "events": [
      {
        "name": "left-top-click",
        "description": "Triggered when the left arrow is retracted",
        "description_zh": "左箭头收起时触发",
        "params": "()=> void",
        "value": ""
      },
      {
        "name": "moveend",
        "description": "The event that ended by dragging",
        "description_zh": "拖拽结束的事件",
        "params": "()=> void",
        "value": ""
      },
      {
        "name": "movestart",
        "description": "Drag the event to start",
        "description_zh": "拖拽开始的事件",
        "params": "()=> void",
        "value": ""
      },
      {
        "name": "moving",
        "description": "Events in dragging",
        "description_zh": "拖拽中的事件",
        "params": "(event: Event)=> void",
        "value": ""
      },
      {
        "name": "right-bottom-click",
        "description": "Triggers when the right arrow is retracted",
        "description_zh": "右箭头收起时触发",
        "params": "() => void",
        "value": ""
      }
    ],
    "methods": [],
    "slots": [
      {
        "name": "bottom",
        "description": "Lower panel slots",
        "description_zh": "下面板插槽"
      },
      {
        "name": "left",
        "description": "Left panel slot",
        "description_zh": "左面板插槽"
      },
      {
        "name": "right",
        "description": "Right panel slots",
        "description_zh": "右面板插槽"
      },
      {
        "name": "top",
        "description": "Upper panel slots",
        "description_zh": "上面板插槽"
      },
      {
        "name": "trigger",
        "description": "Drag and drop the slot",
        "description_zh": "拖拽插槽"
      }
    ],
    "filename": "Split"
  },
  {
    "name": "TinyTextPopup",
    "props": {
      "placeholder": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Prompt placeholder text in the input box",
        "description_zh": "输入框内的提示占位文本"
      },
      "readonly": {
        "default": "false",
        "value": "",
        "type": "boolean",
        "description": "Whether it is read-only or not",
        "description_zh": "是否只读"
      },
      "separtor": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "separator",
        "description_zh": "分隔符"
      },
      "value": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Binding value",
        "description_zh": "绑定值"
      },
      "width": {
        "default": "150",
        "value": "",
        "type": "number , string",
        "description": "width",
        "description_zh": "宽度"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/text-popup",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/text-popup",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "TextPopup"
  },
  {
    "name": "TinyUserContact",
    "props": {
      ":data": {
        "default": "--",
        "value": "",
        "type": "object",
        "description": "Set the data",
        "description_zh": "设置的数据"
      },
      "espace": {
        "default": "--",
        "value": "",
        "type": "Array",
        "description": "espace information configuration",
        "description_zh": "espace 信息配置"
      },
      "popper-append-to-body": {
        "default": "该属性的默认值为 true",
        "value": "",
        "type": "boolean",
        "description": "Whether to insert a popover into the body element. If there is a problem with the positioning of the pop-up, you can set this property to false (see Select Component)",
        "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
      },
      "popper-class": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Add a class name to the popper (see popover component)",
        "description_zh": "为 popper 添加类名(可参考 popover 组件)"
      },
      "show-img": {
        "default": "该属性的默认值为 true",
        "value": "",
        "type": "boolean",
        "description": "Whether to display the avatar or not, the default is true",
        "description_zh": "是否显示头像，默认 true"
      },
      "show-name": {
        "default": "该属性的默认值为 true",
        "value": "",
        "type": "boolean",
        "description": "是否显示姓名 userName,默认 true",
        "description_zh": "是否显示姓名 userName,默认 true"
      },
      "show-number": {
        "default": "该属性的默认值为 true",
        "value": "",
        "type": "boolean",
        "description": "是否显示工号 roleNumber,默认 true",
        "description_zh": "是否显示工号 roleNumber,默认 true"
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/user-contact",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/user-contact",
    "typeDetail": {},
    "events": [],
    "methods": [],
    "slots": [
      {
        "name": "default",
        "description": "Default slot",
        "description_zh": "默认插槽"
      }
    ],
    "filename": "UserContact"
  },
  {
    "name": "TinyWatermark",
    "props": {
      "content": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Watermark text content, which is lower than image",
        "description_zh": "水印文字内容，此属性低于 image"
      },
      "font": {
        "default": "--",
        "value": "",
        "type": "Font",
        "description": "Watermark text style",
        "description_zh": "水印文字样式"
      },
      "gap": {
        "default": "[100, 100]",
        "value": "",
        "type": "array",
        "description": "The spacing between watermarks",
        "description_zh": "水印之间的间距"
      },
      ":height": {
        "default": "64",
        "value": "",
        "type": "number",
        "description": "The height of the watermark, the minimum height is 64px",
        "description_zh": "水印的高度, 最小高度64px"
      },
      "image": {
        "default": "--",
        "value": "",
        "type": "string",
        "description": "Image source, it is recommended to export 2x or 3x images, with high priority (base64 format is supported), this attribute is higher than content",
        "description_zh": "图片源，建议导出 2 倍或 3 倍图，优先级高（支持 base64 格式），此属性高于 content "
      },
      "interlaced": {
        "default": "true",
        "value": "",
        "type": "boolean",
        "description": "Whether the watermarks are staggered",
        "description_zh": "水印是否交错"
      },
      "offset": {
        "default": "[20, 20] ",
        "value": "",
        "type": "array",
        "description": "The offset of the watermark from the top left corner of the container",
        "description_zh": "水印距离容器左上角的偏移量"
      },
      ":rotate": {
        "default": "-22",
        "value": "",
        "type": "number",
        "description": "When the watermark is drawn, the angle of rotation in °",
        "description_zh": "水印绘制时，旋转的角度，单位 °"
      },
      ":width": {
        "default": "120",
        "value": "",
        "type": "number",
        "description": "The width of the watermark, the minimum width is 120px",
        "description_zh": "水印的宽度, 最小宽度120px"
      },
      ":zIndex": {
        "default": "9",
        "value": "",
        "type": "number",
        "description": "追加的水印元素的 'z-index'",
        "description_zh": "追加的水印元素的 'z-index' "
      }
    },
    "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/watermark",
    "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/watermark",
    "typeDetail": {
      "Font": "type Font = { \n        color:string,\n        fontSize:number,\n        fontWeight:string,\n        fontFamily:string,\n        fontStyle:string\n       }"
    },
    "events": [],
    "methods": [],
    "slots": [],
    "filename": "Watermark"
  }
]

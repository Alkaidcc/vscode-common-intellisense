{
  "name": "Menubar.Menu",
  "props": {
    "preventScroll": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether or not to prevent scroll on the body when the menu is open.",
      "description_zh": "Whether or not to prevent scroll on the body when the menu is open."
    },
    "closeOnEscape": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether to close the menu when the escape key is pressed.",
      "description_zh": "Whether to close the menu when the escape key is pressed."
    },
    "closeOnOutsideClick": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether to close the menu when a click occurs outside of it.",
      "description_zh": "Whether to close the menu when a click occurs outside of it."
    },
    "loop": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether or not to loop through the menu items when navigating with the keyboard.",
      "description_zh": "Whether or not to loop through the menu items when navigating with the keyboard."
    },
    "open": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "The open state of the  menu.",
      "description_zh": "The open state of the  menu."
    },
    "onOpenChange": {
      "value": "",
      "default": "_",
      "type": "function",
      "description": "A callback that is fired when the menu's open state changes.",
      "description_zh": "A callback that is fired when the menu's open state changes."
    },
    "dir": {
      "value": "",
      "default": "_",
      "type": "enum",
      "description": "The direction of the menu.",
      "description_zh": "The direction of the menu."
    },
    "portal": {
      "value": "",
      "default": "_",
      "type": "union",
      "description": "Where to render the menu when it is open. Defaults to the body. Can be disabled by passing null",
      "description_zh": "Where to render the menu when it is open. Defaults to the body. Can be disabled by passing null"
    },
    "closeFocus": {
      "value": "",
      "default": "_",
      "type": "FocusProp",
      "description": "Override the focus when the menu is closed.",
      "description_zh": "Override the focus when the menu is closed."
    },
    "typeahead": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether or not to enable typeahead functionality. When enabled, the user can type to navigate to menu items.",
      "description_zh": "Whether or not to enable typeahead functionality. When enabled, the user can type to navigate to menu items."
    },
    "disableFocusFirstItem": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether or not to disable focus on the first item when the menu is opened.",
      "description_zh": "Whether or not to disable focus on the first item when the menu is opened."
    },
    "closeOnItemClick": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether or not to close the menu when an item is clicked.",
      "description_zh": "Whether or not to close the menu when an item is clicked."
    },
    "onOutsideClick": {
      "value": "",
      "default": "_",
      "type": "function",
      "description": "A callback function called when a click occurs outside of the element. If event.preventDefault() is called, the default behavior of closing the element will be prevented.",
      "description_zh": "A callback function called when a click occurs outside of the element. If event.preventDefault() is called, the default behavior of closing the element will be prevented."
    }
  },
  "description": "A menu within the menubar.",
  "link": "https://www.bits-ui.com/docs/components/menubar",
  "link_zh": "https://www.bits-ui.com/docs/components/menubar",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [
    {
      "name": "ids",
      "description": "The ids of the elements within the component, useful when you don't necessarily want to provide a custom ID, but still want access to the ID being assigned (if any). ",
      "description_zh": "The ids of the elements within the component, useful when you don't necessarily want to provide a custom ID, but still want access to the ID being assigned (if any). "
    }
  ],
  "filename": "MenubarMenu"
}

{
  "name": "Checkbox.Root",
  "props": {
    "disabled": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether or not the checkbox button is disabled. This prevents the user from interacting with it.",
      "description_zh": "Whether or not the checkbox button is disabled. This prevents the user from interacting with it."
    },
    "checked": {
      "value": "",
      "default": "false",
      "type": "enum",
      "description": "The checkbox button's checked state. This can be a boolean or the string 'indeterminate', which would typically display a dash in the checkbox.",
      "description_zh": "The checkbox button's checked state. This can be a boolean or the string 'indeterminate', which would typically display a dash in the checkbox."
    },
    "onCheckedChange": {
      "value": "",
      "default": "_",
      "type": "function",
      "description": "A callback that is fired when the checkbox button's checked state changes.",
      "description_zh": "A callback that is fired when the checkbox button's checked state changes."
    },
    "required": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether or not the checkbox is required.",
      "description_zh": "Whether or not the checkbox is required."
    },
    "name": {
      "value": "",
      "default": "_",
      "type": "string",
      "description": "The name of the checkbox. This is used for form submission.",
      "description_zh": "The name of the checkbox. This is used for form submission."
    },
    "value": {
      "value": "",
      "default": "_",
      "type": "string",
      "description": "The value of the checkbox. This is used for form submission.",
      "description_zh": "The value of the checkbox. This is used for form submission."
    },
    "asChild": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether to use render delegation with this component or not.",
      "description_zh": "Whether to use render delegation with this component or not."
    },
    "el": {
      "value": "",
      "default": "_",
      "type": "HTMLButtonElement",
      "description": "The underlying DOM element being rendered. You can bind to this to programatically interact with the element.",
      "description_zh": "The underlying DOM element being rendered. You can bind to this to programatically interact with the element."
    }
  },
  "description": "The button component used to toggle the state of the checkbox.",
  "link": "https://www.bits-ui.com/docs/components/checkbox",
  "link_zh": "https://www.bits-ui.com/docs/components/checkbox",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [
    {
      "name": "builder",
      "description": "The builder attributes and actions to apply to the element if using the asChild prop with delegation. ",
      "description_zh": "The builder attributes and actions to apply to the element if using the asChild prop with delegation. "
    }
  ],
  "filename": "CheckboxRoot"
}

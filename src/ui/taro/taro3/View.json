{
  "name": "View",
  "props": {
    "hoverClass": {
      "description": "指定按下去的样式类。当 hover-class=\"none\" 时，没有点击态效果",
      "description_zh": "指定按下去的样式类。当 hover-class=\"none\" 时，没有点击态效果",
      "default": "none",
      "value": "",
      "type": "string",
      "required": false
    },
    "hoverStyle": {
      "description": "由于 RN 不支持 hoverClass，故 RN 端的 View 组件实现了 hoverStyle属性，写法和 style 类似，只不过 hoverStyle 的样式是指定按下去的样式。",
      "description_zh": "由于 RN 不支持 hoverClass，故 RN 端的 View 组件实现了 hoverStyle属性，写法和 style 类似，只不过 hoverStyle 的样式是指定按下去的样式。",
      "default": "none",
      "value": "",
      "type": "StyleProp<ViewStyle>",
      "required": false
    },
    "hoverStopPropagation": {
      "description": "指定是否阻止本节点的祖先节点出现点击态",
      "description_zh": "指定是否阻止本节点的祖先节点出现点击态",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "hoverStartTime": {
      "description": "按住后多久出现点击态，单位毫秒",
      "description_zh": "按住后多久出现点击态，单位毫秒",
      "default": "50",
      "value": "",
      "type": "number",
      "required": false
    },
    "hoverStayTime": {
      "description": "手指松开后点击态保留时间，单位毫秒",
      "description_zh": "手指松开后点击态保留时间，单位毫秒",
      "default": "400",
      "value": "",
      "type": "number",
      "required": false
    },
    "disableScroll": {
      "description": "是否阻止区域内滚动页面。说明： 如果 view 中嵌套 view，外层 view 设置 disable-scroll 为 true 时禁止内部的滚动。",
      "description_zh": "是否阻止区域内滚动页面。说明： 如果 view 中嵌套 view，外层 view 设置 disable-scroll 为 true 时禁止内部的滚动。",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "hidden": {
      "description": "是否隐藏。",
      "description_zh": "是否隐藏。",
      "default": "false",
      "value": "",
      "type": "boolean",
      "required": false
    },
    "animation": {
      "description": "用于动画，详见 my.createAnimation 。使用 my.createAnimation 生成的动画是通过过渡（Transition）实现的，只会触发 onTransitionEnd，不会触发 onAnimationStart, onAnimationIteration, onAnimationEnd。",
      "description_zh": "用于动画，详见 my.createAnimation 。使用 my.createAnimation 生成的动画是通过过渡（Transition）实现的，只会触发 onTransitionEnd，不会触发 onAnimationStart, onAnimationIteration, onAnimationEnd。",
      "default": "{}",
      "value": "",
      "type": "TaroGeneral.IAnyObject",
      "required": false
    },
    "role": {
      "description": "表示组件的语义角色。设置为 img 时，组件聚焦后读屏软件会朗读出 图像 ；设置为 button 时，聚焦后读屏软件会朗读出 按钮 。详情请参见 aria-component。",
      "description_zh": "表示组件的语义角色。设置为 img 时，组件聚焦后读屏软件会朗读出 图像 ；设置为 button 时，聚焦后读屏软件会朗读出 按钮 。详情请参见 aria-component。",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "ariaRole": {
      "description": "无障碍访问，（角色）标识元素的作用",
      "description_zh": "无障碍访问，（角色）标识元素的作用",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "ariaLabel": {
      "description": "无障碍访问，（属性）元素的额外描述",
      "description_zh": "无障碍访问，（属性）元素的额外描述",
      "default": "",
      "value": "",
      "type": "string",
      "required": false
    },
    "onTap": {
      "description": "点击。",
      "description_zh": "点击。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchStart": {
      "description": "触摸动作开始。",
      "description_zh": "触摸动作开始。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchMove": {
      "description": "触摸后移动。",
      "description_zh": "触摸后移动。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchEnd": {
      "description": "触摸动作结束。",
      "description_zh": "触摸动作结束。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTouchCancel": {
      "description": "触摸动作被打断，如来电提醒，弹窗。",
      "description_zh": "触摸动作被打断，如来电提醒，弹窗。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onLongTap": {
      "description": "长按 500ms 之后触发，触发了长按事件后进行移动将不会触发屏幕的滚动。",
      "description_zh": "长按 500ms 之后触发，触发了长按事件后进行移动将不会触发屏幕的滚动。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onTransitionEnd": {
      "description": "过渡（Transition）结束时触发。",
      "description_zh": "过渡（Transition）结束时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onAnimationIteration": {
      "description": "每开启一次新的动画过程时触发。（第一次不触发）",
      "description_zh": "每开启一次新的动画过程时触发。（第一次不触发）",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onAnimationStart": {
      "description": "动画开始时触发。",
      "description_zh": "动画开始时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onAnimationEnd": {
      "description": "动画结束时触发。",
      "description_zh": "动画结束时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onAppear": {
      "description": "当前元素可见面积超过50%时触发。",
      "description_zh": "当前元素可见面积超过50%时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onDisappear": {
      "description": "当前元素不可见面积超过50%时触发。",
      "description_zh": "当前元素不可见面积超过50%时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "onFirstAppear": {
      "description": "当前元素首次可见面积达到50%时触发。",
      "description_zh": "当前元素首次可见面积达到50%时触发。",
      "default": "",
      "value": "",
      "type": "CommonEventFunction",
      "required": false
    },
    "catchMove": {
      "description": "是否以 catch 的形式绑定 touchmove 事件version: 3.1.0+",
      "description_zh": "是否以 catch 的形式绑定 touchmove 事件version: 3.1.0+",
      "default": "",
      "value": "",
      "type": "boolean",
      "required": false
    }
  },
  "link": "https://docs.taro.zone/docs/components/viewContainer/view",
  "link_zh": "https://docs.taro.zone/docs/components/viewContainer/view",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": []
}

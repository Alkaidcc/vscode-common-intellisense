{
  "name": "Affix",
  "props": {
    ":offsetBottom": {
      "default": "-",
      "value": "",
      "type": "number",
      "description": "距离窗口底部达到指定偏移量后触发",
      "description_zh": "距离窗口底部达到指定偏移量后触发"
    },
    ":offsetTop": {
      "default": "0",
      "value": "",
      "type": "number",
      "description": "距离窗口顶部达到指定偏移量后触发",
      "description_zh": "距离窗口顶部达到指定偏移量后触发"
    },
    "affixClassName": {
      "default": "-",
      "value": "",
      "type": "string | string[]",
      "description": "给 fixed 的元素设置 className。",
      "description_zh": "给 fixed 的元素设置 className。"
    },
    ":affixStyle": {
      "default": "-",
      "value": "",
      "type": "CSSProperties",
      "description": "给 fixed 的元素设置 style，注意不要设置 position top width height， 因为这几个属性是在元素 fixed 时候用于定位的。",
      "description_zh": "给 fixed 的元素设置 style，注意不要设置 position top width height， 因为这几个属性是在元素 fixed 时候用于定位的。"
    },
    "className": {
      "default": "-",
      "value": "",
      "type": "string | string[]",
      "description": "节点类名",
      "description_zh": "节点类名"
    },
    ":style": {
      "default": "-",
      "value": "",
      "type": "CSSProperties",
      "description": "节点样式",
      "description_zh": "节点样式"
    },
    ":target": {
      "default": "() => window",
      "value": "",
      "type": "() => HTMLElement | null | Window",
      "description": "滚动容器",
      "description_zh": "滚动容器"
    },
    ":targetContainer": {
      "default": "-",
      "value": "",
      "type": "() => HTMLElement | null | Window",
      "description": "target 的外层滚动元素。Affix 将会监听该元素的滚动事件，并实时更新固钉的位置。主要是为了解决 target 属性指定为非 window 元素时，如果外层元素滚动，可能会导致固钉跑出容器问题。",
      "description_zh": "target 的外层滚动元素。Affix 将会监听该元素的滚动事件，并实时更新固钉的位置。主要是为了解决 target 属性指定为非 window 元素时，如果外层元素滚动，可能会导致固钉跑出容器问题。"
    }
  },
  "methods": [],
  "link": "https://arco.design/react/components/affix#api",
  "link_zh": "https://arco.design/react/components/affix#api",
  "events": [
    {
      "name": "onChange",
      "description": "固定状态发生改变时触发",
      "description_zh": "固定状态发生改变时触发",
      "params": "(affixed: boolean) => void"
    }
  ],
  "typeDetail": {}
}

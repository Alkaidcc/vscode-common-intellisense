{
  "name": "Accordion",
  "props": {
    "children": {
      "description": "The content of the component.",
      "description_zh": "The content of the component.",
      "default": "-",
      "value": "",
      "type": "node",
      "required": true
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "description_zh": "Override or extend the styles applied to the component.See CSS classes API below for more details.",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    },
    "defaultExpanded": {
      "description": "If true, expands the accordion by default.",
      "description_zh": "If true, expands the accordion by default.",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disabled": {
      "description": "If true, the component is disabled.",
      "description_zh": "If true, the component is disabled.",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "disableGutters": {
      "description": "If true, it removes the margin between two expanded accordion items and the increase of height.",
      "description_zh": "If true, it removes the margin between two expanded accordion items and the increase of height.",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "expanded": {
      "description": "If true, expands the accordion, otherwise collapse it. Setting this prop enables control over the accordion.",
      "description_zh": "If true, expands the accordion, otherwise collapse it. Setting this prop enables control over the accordion.",
      "default": "-",
      "value": "",
      "type": "bool",
      "required": false
    },
    "onChange": {
      "description": "Callback fired when the expand/collapse state is changed.Signature:function(event: React.SyntheticEvent, expanded: boolean) => voidevent The event source of the callback. Warning: This is a generic event not a change event.expanded The expanded state of the accordion.",
      "description_zh": "Callback fired when the expand/collapse state is changed.Signature:function(event: React.SyntheticEvent, expanded: boolean) => voidevent The event source of the callback. Warning: This is a generic event not a change event.expanded The expanded state of the accordion.",
      "default": "-",
      "value": "",
      "type": "func",
      "required": false
    },
    "slotProps": {
      "description": "The props used for each slot inside.",
      "description_zh": "The props used for each slot inside.",
      "default": "{}",
      "value": "",
      "type": "{ transition?: func| object }",
      "required": false
    },
    "slots": {
      "description": "The components used for each slot inside.",
      "description_zh": "The components used for each slot inside.",
      "default": "{}",
      "value": "",
      "type": "{ transition?: elementType }",
      "required": false
    },
    "square": {
      "description": "If true, rounded corners are disabled.",
      "description_zh": "If true, rounded corners are disabled.",
      "default": "false",
      "value": "",
      "type": "bool",
      "required": false
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "description_zh": "The system prop that allows defining system overrides as well as additional CSS styles.See the `sx` page for more details.",
      "default": "-",
      "value": "",
      "type": "Array<func| object| bool>| func| object",
      "required": false
    },
    "TransitionComponent": {
      "description": "The component used for the transition. Follow this guide to learn more about the requirements for this component.Deprecated - Use slots.transition instead. This prop will be removed in v7. How to migrate.",
      "description_zh": "The component used for the transition. Follow this guide to learn more about the requirements for this component.Deprecated - Use slots.transition instead. This prop will be removed in v7. How to migrate.",
      "default": "-",
      "value": "",
      "type": "elementType",
      "required": false
    },
    "TransitionProps": {
      "description": "Props applied to the transition element. By default, the element is based on this Transition component.Deprecated - Use slotProps.transition instead. This prop will be removed in v7. How to migrate.",
      "description_zh": "Props applied to the transition element. By default, the element is based on this Transition component.Deprecated - Use slotProps.transition instead. This prop will be removed in v7. How to migrate.",
      "default": "-",
      "value": "",
      "type": "object",
      "required": false
    }
  },
  "link": "https://mui.com/material-ui/api/accordion/",
  "link_zh": "https://mui.com/material-ui/api/accordion/",
  "typeDetail": {},
  "events": [
    {
      "name": "onChange",
      "description": "Callback fired when the expand/collapse state is changed.Signature:event The event source of the callback. Warning: This is a generic event not a change event.expanded The expanded state of the accordion.",
      "description_zh": "Callback fired when the expand/collapse state is changed.Signature:event The event source of the callback. Warning: This is a generic event not a change event.expanded The expanded state of the accordion.",
      "params": "function(event: React.SyntheticEvent, expanded: boolean) => void"
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": []
}

{
  "name": "NumberKeyboard",
  "props": {
    "afterClose": {
      "description": "Callback when the keyboard is completely put away",
      "description_zh": "Callback when the keyboard is completely put away",
      "default": "-",
      "value": "",
      "type": "() => void"
    },
    "afterShow": {
      "description": "Callback when the keyboard is completely bounced",
      "description_zh": "Callback when the keyboard is completely bounced",
      "default": "-",
      "value": "",
      "type": "() => void"
    },
    "closeOnConfirm": {
      "description": "Whether to automatically close when the ok button is clicked",
      "description_zh": "Whether to automatically close when the ok button is clicked",
      "default": "true",
      "value": "",
      "type": "boolean"
    },
    "confirmText": {
      "description": "The text of the confirm button, if null is set, it would be shown",
      "description_zh": "The text of the confirm button, if null is set, it would be shown",
      "default": "null",
      "value": "",
      "type": "string | null"
    },
    "customKey": {
      "description": "Customized button",
      "description_zh": "Customized button",
      "default": "-",
      "value": "",
      "type": "string | [string, string]"
    },
    "destroyOnClose": {
      "description": "Destroy dom when not visible",
      "description_zh": "Destroy dom when not visible",
      "default": "false",
      "value": "",
      "type": "boolean"
    },
    "forceRender": {
      "description": "Render content forcely",
      "description_zh": "Render content forcely",
      "default": "false",
      "value": "",
      "type": "boolean"
    },
    "getContainer": {
      "description": "To get the specified mounted HTML node, the default is body, if null returned, it would be rendered to the current node",
      "description_zh": "To get the specified mounted HTML node, the default is body, if null returned, it would be rendered to the current node",
      "default": "() => document.body",
      "value": "",
      "type": "HTMLElement | () => HTMLElement | null"
    },
    "randomOrder": {
      "description": "Whether the keyboard is out of order",
      "description_zh": "Whether the keyboard is out of order",
      "default": "false",
      "value": "",
      "type": "boolean"
    },
    "safeArea": {
      "description": "Whether to enable safe area padding",
      "description_zh": "Whether to enable safe area padding",
      "default": "true",
      "value": "",
      "type": "boolean"
    },
    "showCloseButton": {
      "description": "Whether to show the collapsed keyboard arrow",
      "description_zh": "Whether to show the collapsed keyboard arrow",
      "default": "true",
      "value": "",
      "type": "boolean"
    },
    "title": {
      "description": "The title of the keyboard",
      "description_zh": "The title of the keyboard",
      "default": "-",
      "value": "",
      "type": "string"
    },
    "visible": {
      "description": "Whether to show or hide",
      "description_zh": "Whether to show or hide",
      "default": "-",
      "value": "",
      "type": "boolean"
    }
  },
  "link": "https://mobile.ant.design/components/number-keyboard",
  "link_zh": "https://mobile.ant.design/components/number-keyboard",
  "typeDetail": {},
  "events": [
    {
      "name": "onClose",
      "description": "Triggered when it is clicked",
      "description_zh": "Triggered when it is clicked",
      "params": "() => void"
    },
    {
      "name": "onConfirm",
      "description": "Triggered when the ok button is clicked",
      "description_zh": "Triggered when the ok button is clicked",
      "params": "() => void"
    },
    {
      "name": "onDelete",
      "description": "Callback when the content is deleted",
      "description_zh": "Callback when the content is deleted",
      "params": "() => void"
    },
    {
      "name": "onInput",
      "description": "Callback when the input content is changed",
      "description_zh": "Callback when the input content is changed",
      "params": "(v: string) => void"
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": []
}

{
  "name": "NavigationMenuContent",
  "props": {
    "as": {
      "default": "div",
      "value": "",
      "type": "string | Component",
      "description": "The element or component this component should render as. Can be overwrite by asChild",
      "description_zh": ""
    },
    "asChild": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Change the default rendered element for the one passed as a child, merging their props and behavior.",
      "description_zh": ""
    },
    "disableOutsidePointerEvents": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "When true, hover/focus/click interactions will be disabled on elements outside the bounds of the component. Users will need to click twice on outside elements to interact with them: Once to close the navigation menu, and again to activate the element.",
      "description_zh": ""
    },
    "forceMount": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Used to force mounting when more control is needed. Useful when controlling animation with Vue.js animation libraries.",
      "description_zh": ""
    }
  },
  "events": [{
    "name": "escapeKeyDown",
    "prams": "(event: KeyboardEvent) => void",
    "description": "Event handler called when the escape key is down. It can be prevented by calling event.preventDefault.",
    "description_zh": ""
  }, {
    "name": "pointerDownOutside",
    "prams": "(event: PointerDownOutsideEvent) => void",
    "description": "Event handler called when a pointer event occurs outside the bounds of the component. It can be prevented by calling event.preventDefault.",
    "description_zh": ""
  }, {
    "name": "focusOutside",
    "prams": "(event: FocusOutsideEvent) => void",
    "description": "Event handler called when focus moves outside the bounds of the component. It can be prevented by calling event.preventDefault.",
    "description_zh": ""
  }, {
    "name": "interactOutside",
    "prams": "(event: FocusEvent | MouseEvent | TouchEvent) => void",
    "description": "Event handler called when an interaction (pointer or focus event) happens outside the bounds of the component. It can be prevented by calling event.preventDefault.",
    "description_zh": ""
  }],
  "methods": [],
  "link": "https://www.radix-vue.com/components/navigation-menu.html#root",
  "link_zh": "https://www.radix-vue.com/components/navigation-menu.html#root"
}

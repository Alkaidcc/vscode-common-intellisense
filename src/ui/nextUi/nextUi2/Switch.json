{
  "name": "Switch",
  "methods": [],
  "events": [
    {
      "name": "onChange",
      "description": "Handler that is called when the element's selection state changes. You can pull out the new checked state by accessing `event.target.checked` (boolean).",
      "params": "`React.ChangeEvent<HTMLInputElement>`"
    },
    {
      "name": "onValueChange",
      "description": "Handler that is called when the element's selection state changes.",
      "params": "`(isSelected: boolean) => void`"
    }
  ],
  "props": {
    "children": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "The label of the switch.",
      "value": ""
    },
    "value": {
      "type": "`string`",
      "default": "-",
      "description": "The value of the input element, used when submitting an HTML form.",
      "value": ""
    },
    "name": {
      "type": "`string`",
      "default": "-",
      "description": "The name of the input element, used when submitting an HTML form.",
      "value": ""
    },
    "size": {
      "type": "`sm` | `md` | `lg`",
      "default": "`md`",
      "description": "The size of the switch.",
      "value": ""
    },
    "color": {
      "type": "`default` | `primary` | `secondary` | `success` | `warning` | `danger`",
      "default": "`primary`",
      "description": "The color of the switch.",
      "value": ""
    },
    "thumbIcon": {
      "type": "[ThumbIconProps](#switch-icon-props)",
      "default": "-",
      "description": "The icon to be displayed when the switch is checked.",
      "value": ""
    },
    "startContent": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "The icon to be displayed at the start of the switch.",
      "value": ""
    },
    "endContent": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "The icon to be displayed at the end of the switch.",
      "value": ""
    },
    "isSelected": {
      "type": "`boolean`",
      "default": "-",
      "description": "Whether the element should be selected (controlled).",
      "value": ""
    },
    "defaultSelected": {
      "type": "`boolean`",
      "default": "-",
      "description": "Whether the element should be selected (uncontrolled).",
      "value": ""
    },
    "isRequired": {
      "type": "`boolean`",
      "default": "`false`",
      "description": "Whether user input is required on the input before form submission.",
      "value": ""
    },
    "isReadOnly": {
      "type": "`boolean`",
      "default": "-",
      "description": "Whether the input can be selected but not changed by the user.",
      "value": ""
    },
    "isDisabled": {
      "type": "`boolean`",
      "default": "`false`",
      "description": "Whether the switch is disabled.",
      "value": ""
    },
    "disableAnimation": {
      "type": "`boolean`",
      "default": "`false`",
      "description": "Whether the animation should be disabled.",
      "value": ""
    },
    "classNames": {
      "type": "`Record<\"base\"｜ \"wrapper\"｜ \"thumb\"｜ \"label\" ｜ \"startContent\" ｜ \"endContent\" ｜ \"thumbIcon\" , string>`",
      "default": "-",
      "description": "Allows to set custom class names for the switch slots.",
      "value": ""
    }
  },
  "link": "https://nextui.org/docs/components/switch"
}

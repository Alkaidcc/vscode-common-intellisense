{
  "name": "BreadcrumbItem",
  "props": {
    "children": {
      "default": "-",
      "value": "",
      "type": "ReactNode",
      "description": "The contents of the item. Usually the link label or icon.",
      "description_zh": "The contents of the item. Usually the link label or icon."
    },
    "color": {
      "default": "foreground",
      "value": "",
      "type": "foreground | primary | secondary | success | warning | danger",
      "description": "The item color theme.",
      "description_zh": "The item color theme."
    },
    "size": {
      "default": "md",
      "value": "",
      "type": "sm | md | lg",
      "description": "The item size.",
      "description_zh": "The item size."
    },
    "underline": {
      "default": "none",
      "value": "",
      "type": "none | active | hover | focus | always",
      "description": "The item underline style.",
      "description_zh": "The item underline style."
    },
    "startContent": {
      "default": "-",
      "value": "",
      "type": "ReactNode",
      "description": "The item start content.",
      "description_zh": "The item start content."
    },
    "endContent": {
      "default": "-",
      "value": "",
      "type": "ReactNode",
      "description": "The item end content.",
      "description_zh": "The item end content."
    },
    "separator": {
      "default": "-",
      "value": "",
      "type": "ReactNode",
      "description": "The item custom separator. It is a chevron by default.",
      "description_zh": "The item custom separator. It is a chevron by default."
    },
    "isCurrent": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether the item is the current/active one.",
      "description_zh": "Whether the item is the current/active one."
    },
    "isLast": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether the item is the last one.",
      "description_zh": "Whether the item is the last one."
    },
    "hideSeparator": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether to hide the item separator.",
      "description_zh": "Whether to hide the item separator."
    },
    "isDisabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether the item is disabled.",
      "description_zh": "Whether the item is disabled."
    },
    "disableAnimation": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether the item should display animations.",
      "description_zh": "Whether the item should display animations."
    },
    "classNames": {
      "default": "-",
      "value": "",
      "type": "Record<\"base\"｜ \"item\"｜ \"separator\", string>",
      "description": "Allows to set custom class names for the item slots.",
      "description_zh": "Allows to set custom class names for the item slots."
    }
  },
  "methods": [],
  "link": "https://nextui.org/docs/components/breadcrumbs#breadcrumbs-functions",
  "link_zh": "https://nextui.org/docs/components/breadcrumbs#breadcrumbs-functions",
  "events": [
    {
      "name": "onPress",
      "description": "Handler called when the press is released over the target.",
      "description_zh": "Handler called when the press is released over the target.",
      "params": "(e: PressEvent) => void"
    },
    {
      "name": "onPressStart",
      "description": "Handler called when a press interaction starts.",
      "description_zh": "Handler called when a press interaction starts.",
      "params": "(e: PressEvent) => void"
    },
    {
      "name": "onPressEnd",
      "description": "Handler called when a press interaction ends, either over the target or when the pointer leaves the target.",
      "description_zh": "Handler called when a press interaction ends, either over the target or when the pointer leaves the target.",
      "params": "(e: PressEvent) => void"
    },
    {
      "name": "onKeyDown",
      "description": "Handler called when a key is pressed.",
      "description_zh": "Handler called when a key is pressed.",
      "params": "(e: KeyboardEvent) => void"
    },
    {
      "name": "onKeyUp",
      "description": "Handler called when a key is released.",
      "description_zh": "Handler called when a key is released.",
      "params": "(e: KeyboardEvent) => void"
    }
  ],
  "slots": [
    {
      "name": "data-current",
      "params": "",
      "description": "When the breadcrumb item is the current item. Based on breadcrumb isCurrent prop or on whether the item is the last one.",
      "description_zh": "When the breadcrumb item is the current item. Based on breadcrumb isCurrent prop or on whether the item is the last one."
    },
    {
      "name": "data-disabled",
      "params": "",
      "description": "When the breadcrumb item is disabled. Based on breadcrumb isDisabled prop.",
      "description_zh": "When the breadcrumb item is disabled. Based on breadcrumb isDisabled prop."
    },
    {
      "name": "data-focus",
      "params": "",
      "description": "When the breadcrumb item is being focused. Based on useFocusRing",
      "description_zh": "When the breadcrumb item is being focused. Based on useFocusRing"
    },
    {
      "name": "data-focus-visible",
      "params": "",
      "description": "When the breadcrumb item is being focused with the keyboard. Based on useFocusRing",
      "description_zh": "When the breadcrumb item is being focused with the keyboard. Based on useFocusRing"
    }
  ],
  "typeDetail": {}
}

{
  "name": "Input",
  "methods": [],
  "events": [
    {
      "name": "onChange",
      "description": "Handler that is called when the element's value changes. You can pull out the new value by accessing `event.target.value` (string).",
      "params": "`React.ChangeEvent<HTMLInputElement>`"
    },
    {
      "name": "onValueChange",
      "description": "Handler that is called when the element's value changes.",
      "params": "`(value: string) => void`"
    },
    {
      "name": "onClear",
      "description": "Handler that is called when the clear button is clicked.",
      "params": "`() => void`"
    }
  ],
  "props": {
    "children": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "The content of the input.",
      "value": ""
    },
    "variant": {
      "type": "`flat` | `bordered` | `faded` | `underlined`",
      "default": "`flat`",
      "description": "The variant of the input.",
      "value": ""
    },
    "color": {
      "type": "`default` | `primary` | `secondary` | `success` | `warning` | `danger`",
      "default": "`default`",
      "description": "The color of the input.",
      "value": ""
    },
    "size": {
      "type": "`sm` | `md` | `lg`",
      "default": "`md`",
      "description": "The size of the input.",
      "value": ""
    },
    "radius": {
      "type": "`none` | `sm` | `md` | `lg` | `full`",
      "default": "-",
      "description": "The radius of the input.",
      "value": ""
    },
    "label": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "The content to display as the label.",
      "value": ""
    },
    "value": {
      "type": "`string`",
      "default": "-",
      "description": "The current value of the input (controlled).",
      "value": ""
    },
    "defaultValue": {
      "type": "`string`",
      "default": "-",
      "description": "The default value of the input (uncontrolled).",
      "value": ""
    },
    "placeholder": {
      "type": "`string`",
      "default": "-",
      "description": "The placeholder of the input.",
      "value": "",
      "required": true
    },
    "description": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "A description for the input. Provides a hint such as specific requirements for what to choose.",
      "value": ""
    },
    "errorMessage": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "An error message for the input.",
      "value": ""
    },
    "startContent": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "Element to be rendered in the left side of the input.",
      "value": ""
    },
    "endContent": {
      "type": "`ReactNode`",
      "default": "-",
      "description": "Element to be rendered in the right side of the input.",
      "value": ""
    },
    "labelPlacement": {
      "type": "`inside` | `outside` | `outside-left`",
      "default": "`inside`",
      "description": "The position of the label.",
      "value": ""
    },
    "fullWidth": {
      "type": "`boolean`",
      "default": "`true`",
      "description": "Whether the input should take up the width of its parent.",
      "value": ""
    },
    "isClearable": {
      "type": "`boolean`",
      "default": "`false`",
      "description": "Whether the input should have a clear button.",
      "value": ""
    },
    "isRequired": {
      "type": "`boolean`",
      "default": "`false`",
      "description": "Whether user input is required on the input before form submission.",
      "value": ""
    },
    "isReadOnly": {
      "type": "`boolean`",
      "default": "",
      "description": "Whether the input can be selected but not changed by the user.",
      "value": ""
    },
    "isDisabled": {
      "type": "`boolean`",
      "default": "`false`",
      "description": "Whether the input is disabled.",
      "value": ""
    },
    "isInvalid": {
      "type": "`boolean`",
      "default": "`false`",
      "description": "Whether the input is invalid.",
      "value": ""
    },
    "validationState": {
      "type": "`valid` | `invalid`",
      "default": "-",
      "description": "Whether the input should display its \"valid\" or \"invalid\" visual styling. (**Deprecated**) use **isInvalid** instead.",
      "value": ""
    },
    "disableAnimation": {
      "type": "`boolean`",
      "default": "`false`",
      "description": "Whether the input should be animated.",
      "value": ""
    },
    "classNames": {
      "type": "`Record<\"base\"｜ \"label\"｜ \"inputWrapper\"｜ \"innerWrapper\"｜ \"mainWrapper\" ｜ \"input\" ｜ \"clearButton\" ｜ \"helperWrapper\" ｜ \"description\" ｜ \"errorMessage\", string>`",
      "default": "-",
      "description": "Allows to set custom class names for the checkbox slots.",
      "value": ""
    }
  },
  "link": "https://nextui.org/docs/components/input"
}

{
  "name": "InputNumber",
  "props": {
    "modelValue": {
      "default": "",
      "description": "Value of the component.",
      "type": "Nullable<number>",
      "value": ""
    },
    "format": {
      "default": "true",
      "description": "Whether to format the value.",
      "type": "boolean",
      "value": ""
    },
    "showButtons": {
      "default": "false",
      "description": "Displays spinner buttons.",
      "type": "boolean",
      "value": ""
    },
    "buttonLayout": {
      "default": "stacked",
      "description": "Layout of the buttons.",
      "type": "\"horizontal\" | \"vertical\" | \"stacked\"",
      "value": ""
    },
    "incrementButtonClass": {
      "default": "",
      "description": "Style class of the increment button.",
      "type": "string",
      "value": ""
    },
    "decrementButtonClass": {
      "default": "",
      "description": "Style class of the decrement button.",
      "type": "string",
      "value": ""
    },
    "incrementButtonIcon": {
      "default": "",
      "description": "Style class of the increment button.",
      "type": "string",
      "value": ""
    },
    "decrementButtonIcon": {
      "default": "",
      "description": "Style class of the decrement button.",
      "type": "string",
      "value": ""
    },
    "locale": {
      "default": "",
      "description": "Locale to be used in formatting.",
      "type": "string",
      "value": ""
    },
    "localeMatcher": {
      "default": "best fit",
      "description": "The locale matching algorithm to use. Possible values are 'lookup' and 'best fit'; the default is 'best fit'.\nSee [Locale Negotation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_negotiation) for details.",
      "type": "\"best fit\" | \"lookup\"",
      "value": ""
    },
    "mode": {
      "default": "decimal",
      "description": "Defines the behavior of the component.",
      "type": "\"decimal\" | \"currency\"",
      "value": ""
    },
    "prefix": {
      "default": "",
      "description": "Text to display before the value.",
      "type": "string",
      "value": ""
    },
    "suffix": {
      "default": "",
      "description": "Text to display after the value.",
      "type": "string",
      "value": ""
    },
    "currency": {
      "default": "",
      "description": "The currency to use in currency formatting. Possible values are the [ISO 4217 currency codes](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency), such as 'USD' for the US dollar, 'EUR' for the euro, or 'CNY' for the Chinese RMB.\nThere is no default value; if the style is 'currency', the currency property must be provided.",
      "type": "string",
      "value": ""
    },
    "currencyDisplay": {
      "default": "symbol",
      "description": "How to display the currency in currency formatting. Possible values are 'symbol' to use a localized currency symbol such as â‚¬, 'code' to use the ISO currency code, 'name' to use a localized currency name such as 'dollar'.",
      "type": "string",
      "value": ""
    },
    "useGrouping": {
      "default": "true",
      "description": "Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators.",
      "type": "boolean",
      "value": ""
    },
    "minFractionDigits": {
      "default": "",
      "description": "The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0;\nthe default for currency formatting is the number of minor unit digits provided by the [ISO 4217 currency code](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency) list (2 if the list doesn't provide that information).",
      "type": "number",
      "value": ""
    },
    "maxFractionDigits": {
      "default": "",
      "description": "The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3;\nthe default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the [ISO 4217 currency code](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency) list (2 if the list doesn't provide that information).",
      "type": "number",
      "value": ""
    },
    "min": {
      "default": "",
      "description": "Mininum boundary value.",
      "type": "number",
      "value": ""
    },
    "max": {
      "default": "",
      "description": "Maximum boundary value.",
      "type": "number",
      "value": ""
    },
    "step": {
      "default": "1",
      "description": "Step factor to increment/decrement the value.",
      "type": "number",
      "value": ""
    },
    "allowEmpty": {
      "default": "true",
      "description": "Determines whether the input field is empty.",
      "type": "boolean",
      "value": ""
    },
    "highlightOnFocus": {
      "default": "false",
      "description": "Highlights automatically the input value.",
      "type": "boolean",
      "value": ""
    },
    "disabled": {
      "default": "false",
      "description": "When present, it specifies that the component should be disabled.",
      "type": "boolean",
      "value": ""
    },
    "readonly": {
      "default": "false",
      "description": "When present, it specifies that an input field is read-only.",
      "type": "boolean",
      "value": ""
    },
    "placeholder": {
      "default": "",
      "description": "Placeholder text for the input.",
      "type": "string",
      "value": ""
    },
    "inputId": {
      "default": "",
      "description": "Identifier of the focus input to match a label defined for the chips.",
      "type": "string",
      "value": ""
    },
    "inputClass": {
      "default": "",
      "description": "Style class of the input field.",
      "type": "string | object",
      "value": ""
    },
    "inputStyle": {
      "default": "",
      "description": "Inline style of the input field.",
      "type": "object",
      "value": ""
    },
    "inputProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLInputElement to the focusable input element inside the component.",
      "type": "InputHTMLAttributes",
      "value": ""
    },
    "incrementButtonProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to increment button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": ""
    },
    "decrementButtonProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to decrement button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": ""
    },
    "aria-labelledby": {
      "default": "",
      "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs.",
      "type": "string",
      "value": ""
    },
    "aria-label": {
      "default": "",
      "description": "Establishes a string value that labels the component.",
      "type": "string",
      "value": ""
    },
    "pt": {
      "default": "",
      "description": "Used to pass attributes to DOM elements inside the component.",
      "type": "PassThrough<InputNumberPassThroughOptions>",
      "value": ""
    },
    "ptOptions": {
      "default": "",
      "description": "Used to configure passthrough(pt) options of the component.",
      "type": "PassThroughOptions",
      "value": ""
    },
    "unstyled": {
      "default": "false",
      "description": "When enabled, it removes component related styles in the core.",
      "type": "boolean",
      "value": ""
    }
  },
  "events": [
    {
      "name": "update:modelValue",
      "description": "Emitted when the value changes.",
      "params": "(value: number) => void"
    },
    {
      "name": "input",
      "description": "Callback to invoke when the value is entered.",
      "params": "(event: InputNumberInputEvent) => void"
    },
    {
      "name": "focus",
      "description": "Callback to invoke on focus of input field.",
      "params": "(event: Event) => void"
    },
    {
      "name": "blur",
      "description": "Callback to invoke on blur of input field.",
      "params": "(event: InputNumberBlurEvent) => void"
    }
  ],
  "link": "https://primevue.org/inputnumber/"
}

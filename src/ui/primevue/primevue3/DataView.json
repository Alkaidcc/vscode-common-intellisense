{
  "name": "DataView",
  "props": {
    "value": {
      "default": "",
      "description": "An array of objects to display.",
      "type": "any[]",
      "value": ""
    },
    "layout": {
      "default": "list",
      "description": "Layout of the items, valid values are 'list' and 'grid'.",
      "type": "\"grid\" | \"list\"",
      "value": ""
    },
    "rows": {
      "default": "0",
      "description": "Number of rows to display per page.",
      "type": "number",
      "value": ""
    },
    "first": {
      "default": "0",
      "description": "Index of the first record to render.",
      "type": "number",
      "value": ""
    },
    "totalRecords": {
      "default": "",
      "description": "Number of total records, defaults to length of value when not defined.",
      "type": "number",
      "value": ""
    },
    "paginator": {
      "default": "false",
      "description": "When specified as true, enables the pagination.",
      "type": "boolean",
      "value": ""
    },
    "paginatorPosition": {
      "default": "bottom",
      "description": "Position of the paginator, options are 'top','bottom' or 'both'.",
      "type": "\"both\" | \"top\" | \"bottom\"",
      "value": ""
    },
    "alwaysShowPaginator": {
      "default": "true",
      "description": "Whether to show it even there is only one page.",
      "type": "boolean",
      "value": ""
    },
    "paginatorTemplate": {
      "default": "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown",
      "description": "Template of the paginator. It can be customized using the template property using the predefined keys,\n\n- FirstPageLink\n- PrevPageLink\n- PageLinks\n- NextPageLink\n- LastPageLink\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPageInput\n- CurrentPageReport",
      "type": "string",
      "value": ""
    },
    "pageLinkSize": {
      "default": "5",
      "description": "Number of page links to display.",
      "type": "number",
      "value": ""
    },
    "rowsPerPageOptions": {
      "default": "",
      "description": "Array of integer values to display inside rows per page dropdown.",
      "type": "number[]",
      "value": ""
    },
    "currentPageReportTemplate": {
      "default": "'({currentPage} of {totalPages})'",
      "description": "Template of the current page report element. It displays information about the pagination state.\n\n- {currentPage}\n- {totalPages}\n- {rows}\n- {first}\n- {last}\n- {totalRecords}",
      "type": "string",
      "value": ""
    },
    "sortField": {
      "default": "",
      "description": "Property name or a getter function of data to use in sorting by default.",
      "type": "string | Function",
      "value": ""
    },
    "sortOrder": {
      "default": "",
      "description": "Order to sort the data by default.",
      "type": "number",
      "value": ""
    },
    "lazy": {
      "default": "false",
      "description": "Defines if data is loaded and interacted with in lazy manner.",
      "type": "boolean",
      "value": ""
    },
    "dataKey": {
      "default": "",
      "description": "Name of the data that uniquely identifies the a record in the data.",
      "type": "undefined | string",
      "value": ""
    },
    "pt": {
      "default": "",
      "description": "Used to pass attributes to DOM elements inside the component.",
      "type": "PassThrough<DataViewPassThroughOptions>",
      "value": ""
    },
    "ptOptions": {
      "default": "",
      "description": "Used to configure passthrough(pt) options of the component.",
      "type": "PassThroughOptions",
      "value": ""
    },
    "unstyled": {
      "default": "false",
      "description": "When enabled, it removes component related styles in the core.",
      "type": "boolean",
      "value": ""
    }
  },
  "events": [
    {
      "name": "update:first",
      "description": "Emitted when the first changes.",
      "params": "(value: number) => void"
    },
    {
      "name": "update:rows",
      "description": "Emitted when the rows changes.",
      "params": "(value: number) => void"
    },
    {
      "name": "page",
      "description": "Callback to invoke when page changes, the event object contains information about the new state.",
      "params": "(event: DataViewPageEvent) => void"
    }
  ],
  "link": "https://primevue.org/dataview/"
}

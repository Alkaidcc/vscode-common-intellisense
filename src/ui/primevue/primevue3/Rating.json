{
  "name": "Rating",
  "props": {
    "modelValue": {
      "default": "",
      "description": "Value of the rating.",
      "type": "number",
      "value": ""
    },
    "name": {
      "default": "",
      "description": "Name of the element.",
      "type": "string",
      "value": ""
    },
    "disabled": {
      "default": "false",
      "description": "When present, it specifies that the element should be disabled.",
      "type": "boolean",
      "value": ""
    },
    "readonly": {
      "default": "false",
      "description": "When present, it specifies that component is read-only.",
      "type": "boolean",
      "value": ""
    },
    "stars": {
      "default": "5",
      "description": "Number of stars.",
      "type": "number",
      "value": ""
    },
    "cancel": {
      "default": "true",
      "description": "When specified a cancel icon is displayed to allow clearing the value.",
      "type": "boolean",
      "value": ""
    },
    "onIcon": {
      "default": "",
      "description": "Icon for the on state.",
      "type": "string",
      "value": ""
    },
    "offIcon": {
      "default": "",
      "description": "Icon for the off state.",
      "type": "string",
      "value": ""
    },
    "cancelIcon": {
      "default": "",
      "description": "Icon for the cancelable state.",
      "type": "string",
      "value": ""
    },
    "pt": {
      "default": "",
      "description": "Used to pass attributes to DOM elements inside the component.",
      "type": "PassThrough<RatingPassThroughOptions>",
      "value": ""
    },
    "ptOptions": {
      "default": "",
      "description": "Used to configure passthrough(pt) options of the component.",
      "type": "PassThroughOptions",
      "value": ""
    },
    "unstyled": {
      "default": "false",
      "description": "When enabled, it removes component related styles in the core.",
      "type": "boolean",
      "value": ""
    }
  },
  "events": [
    {
      "name": "update:modelValue",
      "description": "Emitted when the value changes.",
      "params": "(value: number) => void"
    },
    {
      "name": "change",
      "description": "Callback to invoke when a suggestion is selected.",
      "params": "(event: RatingChangeEvent) => void"
    },
    {
      "name": "focus",
      "description": "Callback to invoke when the component receives focus.",
      "params": "(event: Event) => void"
    },
    {
      "name": "blur",
      "description": "Callback to invoke when the component loses focus.",
      "params": "(event: Event) => void"
    }
  ],
  "link": "https://primevue.org/rating/"
}

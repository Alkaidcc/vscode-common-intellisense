{
  "name": "QRating",
  "methods": [],
  "events": [
    {
      "name": "update:model-value",
      "description": "",
      "params": ""
    }
  ],
  "props": {
    "model-value": {
      "value": "",
      "type": "Number",
      "description": "",
      "default": "",
      "extends": "model-value",
      "examples": [
        "v-model=\"rating\"",
        ":model-value=\"rating\"",
        ":model-value=\"2\""
      ]
    },
    "max": {
      "value": "",
      "type": "Number | String",
      "description": "Number of icons to display",
      "default": 5
    },
    "icon": {
      "value": "",
      "type": "String | Array",
      "description": "Icon name following Quasar convention; make sure you have the icon library installed unless you are using 'img:' prefix; If an array is provided each rating value will use the corresponding icon in the array (0 based)",
      "default": ""
    },
    "icon-selected": {
      "value": "",
      "type": "String | Array",
      "description": "Icon name following Quasar convention to be used when selected (optional); make sure you have the icon library installed unless you are using 'img:' prefix; If an array is provided each rating value will use the corresponding icon in the array (0 based)",
      "default": ""
    },
    "icon-half": {
      "value": "",
      "type": "String | Array",
      "description": "Icon name following Quasar convention to be used when selected (optional); make sure you have the icon library installed unless you are using 'img:' prefix; If an array is provided each rating value will use the corresponding icon in the array (0 based)",
      "default": ""
    },
    "icon-aria-label": {
      "value": "",
      "type": "String | Array",
      "description": "Label to be set on aria-label for Icon; If an array is provided each rating value will use the corresponding aria-label in the array (0 based); If string value is provided the rating value will be appended; If not provided the name of the icon will be used",
      "default": ""
    },
    "color": {
      "type": "String | Array",
      "description": "Color name for component from the Quasar Color Palette",
      "value": "",
      "default": "primary",
      "extends": "color",
      "desc": "Color name from the Quasar Palette for half selected icons",
      "category": "labels",
      "addedIn": "v2.4",
      "examples": [
        "primary",
        "teal-10",
        "[\"accent\", \"grey-7\"] "
      ]
    },
    "color-selected": {
      "type": "String | Array",
      "description": "Color name for component from the Quasar Color Palette",
      "value": "",
      "default": "primary",
      "extends": "color",
      "desc": "Color name from the Quasar Palette for half selected icons",
      "category": "labels",
      "addedIn": "v2.4",
      "examples": [
        "primary",
        "teal-10",
        "[\"accent\", \"grey-7\"] "
      ]
    },
    "color-half": {
      "type": "String | Array",
      "description": "Color name for component from the Quasar Color Palette",
      "value": "",
      "default": "primary",
      "extends": "color",
      "desc": "Color name from the Quasar Palette for half selected icons",
      "category": "labels",
      "addedIn": "v2.4",
      "examples": [
        "primary",
        "teal-10",
        "[\"accent\", \"grey-7\"] "
      ]
    },
    "no-dimming": {
      "value": "",
      "type": "Boolean",
      "description": "Does not lower opacity for unselected icons",
      "default": "false"
    },
    "no-reset": {
      "value": "",
      "type": "Boolean",
      "description": "When used, disables default behavior of clicking/tapping on icon which represents current model value to reset model to 0",
      "default": "false"
    },
    "readonly": {
      "value": "",
      "type": "String",
      "description": "",
      "default": "",
      "extends": "readonly"
    },
    "disable": {
      "value": "",
      "type": "String",
      "description": "",
      "default": "",
      "extends": "disable"
    }
  },
  "link": "https://v2.quasar.dev/vue-components/rating"
}

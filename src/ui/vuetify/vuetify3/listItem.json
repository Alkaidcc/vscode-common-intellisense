{
  "name": "VListItem",
  "props": {
    "active": {
      "value": "",
      "description": "Controls the active status of the project. Typically used to highlight components",
      "default": "false",
      "type": "boolean",
      "description_zh": "控制项目的 active 状态。 通常用于突出显示组件"
    },
    "active-class": {
      "value": "",
      "description": "The class that is applied when the component is in the active state",
      "default": "undefined",
      "type": "string",
      "description_zh": "当组件处于 active 状态时应用的类"
    },
    "active-color": {
      "value": "",
      "description": "The color applied when the component is in the active state",
      "default": "undefined",
      "type": "string",
      "description_zh": "当组件处于 active 状态时应用的颜色"
    },
    "append-avatar": {
      "value": "",
      "description": "Create a v-avatar component after the default contents of the append slot",
      "default": "undefined",
      "type": "string",
      "description_zh": "在 append 插槽的默认内容后创建一个 v-avatar组件"
    },
    "append-icon": {
      "value": "",
      "description": "Create a v-icon component after the default contents of the append slot",
      "default": "undefined",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在 append 插槽的默认内容后创建一个 v-icon组件"
    },
    "base-color": {
      "value": "",
      "description": "MISSING DESCRIPTION",
      "default": "undefined",
      "type": "string",
      "description_zh": "缺少描述"
    },
    "border": {
      "value": "",
      "description": "Apply a border style to the component.",
      "default": "false",
      "type": "string | number | boolean",
      "description_zh": "应用边框样式到组件。"
    },
    "color": {
      "value": "",
      "description": "Specify the control color, which can be any Material color (e.g. success or purple) or Css color (e.g. #033 or rgba (255, 0, 0, 0.5)). You can find a list of built-in color classes in the Colors page.",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定控件颜色，颜色值可以是任意 Material 颜色（例如 success 或者 purple ）也可以是 Css 颜色 （例如 #033 或者 rgba(255, 0, 0, 0.5)）。在 颜色页中可以找到内置的颜色类列表。"
    },
    "density": {
      "value": ["default", "comfortable", "compact"],
      "description": "Adjusts the vertical height used by the component.",
      "default": "default",
      "type": "'default' | 'comfortable' | 'compact'",
      "description_zh": "调整组件使用的垂直高度。"
    },
    "disabled": {
      "value": "",
      "description": "Remove the ability to click or select a component to make it unavailable.",
      "default": "false",
      "type": "boolean",
      "description_zh": "移除单击组件或选中组件的能力，将组件设置为不可用状态。"
    },
    "elevation": {
      "value": "",
      "description": "The elevation of the component is acceptable from 0 to 24. You can find more information on the elevation page.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "组件的海拔可接受 0 到 24 之间的值。你可以在 elevation page浏览更多信息。"
    },
    "exact": {
      "value": "",
      "description": "Exact match link. Without this link, '/' will match each route. You can read more about Exactprop in the vue-router documentation.",
      "default": "false",
      "type": "boolean",
      "description_zh": "完全匹配链接。如果没有这个链接，‘/’ 将匹配每个路由。你能够在 vue-router 文档浏览更多 exactprop。"
    },
    "height": {
      "value": "",
      "description": "Sets the height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的高度。"
    },
    "href": {
      "value": "",
      "description": "Specify the component as an anchor and apply the href attribute.",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定组件为锚点并应用 href 属性。"
    },
    "lines": {
      "value": ["one", "two", "three"],
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "undefined",
      "type": "'one' | 'two' | 'three'",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "link": {
      "value": "",
      "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
      "default": "false",
      "type": "boolean",
      "description_zh": "指定组件是链接。当使用 href 或 to prop 时，这是自动的。"
    },
    "max-height": {
      "value": "",
      "description": "Sets the maximum height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最大高度。"
    },
    "max-width": {
      "value": "",
      "description": "Sets the maximum width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最大宽度。"
    },
    "min-height": {
      "value": "",
      "description": "Sets the minimum height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最小高度。"
    },
    "min-width": {
      "value": "",
      "description": "Sets the minimum width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最小宽度。"
    },
    "nav": {
      "value": "",
      "description": "Another style can reduce the width of the v-list-item and round it. Usually used with v-navigation-drawer",
      "default": "false",
      "type": "boolean",
      "description_zh": "另一种样式可以减小 v-list-item 的宽度并圆角化。 通常与 v-navigation-drawer一起使用"
    },
    "prepend-avatar": {
      "value": "",
      "description": "Create a v-avatar component before the default content of the prepend slot",
      "default": "undefined",
      "type": "string",
      "description_zh": "在 prepend 插槽的默认内容前创建一个 v-avatar组件"
    },
    "prepend-icon": {
      "value": "",
      "description": "Create a v-icon component before the default content of the prepend slot",
      "default": "undefined",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在 prepend 插槽的默认内容前创建一个 v-icon组件"
    },
    "replace": {
      "value": "",
      "description": "Setting the replace property will call router.replace() instead of router.push() on click, so navigation doesn't leave a history. You can explore more replaceprops in the vue-router documentation.",
      "default": "false",
      "type": "boolean",
      "description_zh": "设置 replace 属性会在点击时调用 router.replace() 而不是 router.push()，这样导航就不会留下历史记录。您可以在 vue-router 文档中浏览更多 replaceprop。"
    },
    "ripple": {
      "value": "",
      "description": "Apply the v-ripple directive.",
      "default": "true",
      "type": "boolean | { class: string }",
      "description_zh": "应用 v-ripple指令。"
    },
    "rounded": {
      "value": "",
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "default": "false",
      "type": "string | number | boolean",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面获取更多有关信息"
    },
    "subtitle": {
      "value": "",
      "description": "Specify a subtitle text for the component.",
      "default": "false",
      "type": "string | number | boolean",
      "description_zh": "指定组件的副标题文本。"
    },
    "tag": {
      "value": "",
      "description": "Specifies the custom tag to be used on the root element.",
      "default": "button",
      "type": "string",
      "description_zh": "指定在根元素上使用的自定义标签。"
    },
    "theme": {
      "value": "",
      "description": "Specifies the theme of this component and all of its subcomponents",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定此组件及其所有子组件的主题"
    },
    "title": {
      "value": "",
      "description": "Generates a v-list-item-title component with the supplied value",
      "default": "false",
      "type": "string | number | boolean",
      "description_zh": "使用提供的值生成 v-list-item-title 组件"
    },
    "to": {
      "value": "",
      "description": "Indicates the target route of the link. You can read more about toprops in the vue-router documentation",
      "default": "undefined",
      "type": "unknown",
      "description_zh": "表示链接的目标路由。你可以在 vue-router 文档浏览更多 toprop"
    },
    "value": {
      "value": "",
      "description": "The value used for selection.",
      "default": "undefined",
      "type": "any",
      "description_zh": "用于选择的值。"
    },
    "variant": {
      "value": ["text", "flat", "elevated", "tonal", "outlined", "plain"],
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "default": "false",
      "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面获取更多有关信息"
    },
    "width": {
      "value": "",
      "description": "Sets the width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的宽度。"
    }
  },
  "methods": [],
  "typeDetail": {},
  "events": [
    {
      "name": "click",
      "description": "MISSING DESCRIPTION (edit in github)",
      "params": "[MouseEvent | KeyboardEvent]",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "value": ""
    },
    {
      "name": "clickOnce",
      "description": "MISSING DESCRIPTION (edit in github)",
      "params": "never",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "value": ""
    }
  ],
  "link": "https://vuetifyjs.com/en/api/v-list/",
  "link_zh": "https://vuetifyjs.com/zh-Hans/api/v-list/"
}

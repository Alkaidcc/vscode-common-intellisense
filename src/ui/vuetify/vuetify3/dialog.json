{
  "name": "VDialog",
  "props": {
    "absolute": {
      "value": "",
      "description": "Applies position: absolute to the content element.",
      "default": "false",
      "type": "Boolean",
      "description_zh": "将 position： absolute 应用于 content 元素。"
    },
    "activator": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "undefined",
      "type": "string | Element | ComponentPublicInstance",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "activator-props": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "{}",
      "type": "{}",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "attach": {
      "value": "",
      "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or true to disable teleporting. Uses body by default.",
      "default": "false",
      "type": "string | boolean | Element",
      "description_zh": "指定覆盖内容应传送到哪个 DOM 元素。可以是直接元素引用、querySelector 字符串或 true 以禁用传送。默认使用 body。"
    },
    "close-delay": {
      "value": "",
      "description": "The number of milliseconds to wait before the component shuts down. Applies only to hover and focus events.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "组件关闭前等待的毫秒数。仅应用于悬停和焦点事件。"
    },
    "close-on-back": {
      "value": "",
      "description": "Closes the overlay content when the browser’s back button is pressed or $router.back() is called, cancelling the original navigation. persistent overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
      "default": "true",
      "type": "boolean",
      "description_zh": "当按下浏览器的后退按钮或调用 $router.back（） 时关闭覆盖内容，从而取消原始导航。持久叠加将取消导航并制作动画，就好像它们在外部单击而不是关闭一样。"
    },
    "close-on-content-click": {
      "value": "",
      "description": "Closes component when you click on its content",
      "default": "false",
      "type": "boolean",
      "description_zh": "单击组件内容时关闭组件"
    },
    "contained": {
      "value": "",
      "description": "Limits the size of the component and scrim to its offset parent. Implies absolute and attach.",
      "default": "false",
      "type": "boolean",
      "description_zh": "将元件和稀松布的大小限制为其偏移父项。表示绝对和附加。"
    },
    "content-class": {
      "value": "",
      "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the v-app component (unless the attach prop is provided) and is not targetable by classes passed directly on the component",
      "default": "undefined",
      "type": "any",
      "description_zh": "将自定义类应用于分离的元素。这很有用，因为内容被移动到 v-app 组件的开头（除非提供了 attach 属性），并且直接在组件上传递的类无法定位"
    },
    "content-props": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "undefined",
      "type": "any",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "disabled": {
      "value": "",
      "description": "Remove the ability to click or select a component to make it unavailable.",
      "default": "false",
      "type": "boolean",
      "description_zh": "移除单击组件或选中组件的能力，将组件设置为不可用状态。"
    },
    "eager": {
      "value": "",
      "description": "Forces the component’s content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
      "default": "false",
      "type": "boolean",
      "description_zh": "强制在装入组件时呈现组件的内容。如果您的内容不会在 DOM 中呈现，而您希望为 SEO 进行抓取，这将非常有用。"
    },
    "fullscreen": {
      "value": "",
      "description": "Change the layout of the full-screen display.",
      "default": "false",
      "type": "boolean",
      "description_zh": "改变全屏显示的布局。"
    },
    "height": {
      "value": "",
      "description": "Sets the height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的高度。"
    },
    "location": {
      "value": "",
      "description": "Specifies the location of the component. You can apply multiple strings at the same time using space-separated strings.",
      "default": "undefined",
      "type": "Anchor",
      "description_zh": "指定组件的位置。可以使用空格分隔的字符串同时应用多个。"
    },
    "location-strategy": {
      "value": "",
      "description": "A function used to specifies how the component should position relative to its activator",
      "default": "static",
      "type": "'static' | 'connected' | LocationStrategyFn",
      "description_zh": "用于指定组件相对于其激活器的位置的函数"
    },
    "max-height": {
      "value": "",
      "description": "Sets the maximum height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最大高度。"
    },
    "max-width": {
      "value": "",
      "description": "Sets the maximum width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最大宽度。"
    },
    "min-height": {
      "value": "",
      "description": "Sets the minimum height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最小高度。"
    },
    "min-width": {
      "value": "",
      "description": "Sets the minimum width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最小宽度。"
    },
    "model-value": {
      "value": "",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array",
      "default": "false",
      "type": "boolean",
      "description_zh": "组件的 v 模型值。如果组件支持 multiple 属性，则默认为空数组"
    },
    "no-click-animation": {
      "value": "",
      "description": "Use the persistent property to disable the bouncing effect when clicked outside of the content of the v-dialog.",
      "default": "false",
      "type": "boolean",
      "description_zh": "使用 persistent 属性，在 v-dialog 的内容之外点击时，禁用弹跳效果。"
    },
    "offset": {
      "value": "",
      "description": "A single value that offsets content away from the target based upon what side it is on",
      "default": "undefined",
      "type": "string | number | number[]",
      "description_zh": "一个值，它根据内容所在的一侧将内容与目标偏移"
    },
    "open-delay": {
      "value": "",
      "description": "The number of milliseconds that the component waits before opening. Applies only to hover and focus events.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "组件打开前等待的毫秒数。仅应用于悬停和焦点事件。"
    },
    "open-on-click": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "false",
      "type": "boolean",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "open-on-focus": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "false",
      "type": "boolean",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "open-on-hover": {
      "value": "",
      "description": "Specifies whether the component should be active when its activator is hovered.",
      "default": "false",
      "type": "boolean",
      "description_zh": "指定组件在其激活器悬停时是否应激活。"
    },
    "origin": {
      "value": "",
      "description": "Sets the origin of the animation on the element. You can explore more for transition origin on the MDN documentation",
      "default": "'center center'",
      "type": "Anchor | 'auto' | 'overlap'",
      "description_zh": "设置元素上的动画原点。您可以在 MDN 文档上浏览更多 for transition origin"
    },
    "persistent": {
      "value": "",
      "description": "Clicking on the outside of an element or pressing the esc key will not close it.",
      "default": "false",
      "type": "boolean",
      "description_zh": "点击元素外面或按下 esc 键将不会关闭它。"
    },
    "retain-focus": {
      "value": "",
      "description": "By default, tab focus is returned to the first child of the dialog box. Disable this option when using an external tool that requires focus, such as TinyMCE or vue-clipboard.",
      "default": "true",
      "type": "boolean",
      "description_zh": "默认情况下，制表符焦点将返回到对话框的第一个子级。在使用需要焦点的外部工具（如 TinyMCE 或 vue-clipboard）时禁用此选项。"
    },
    "scrim": {
      "value": "",
      "description": "Accepts true/false to enable background, and string to define color.",
      "default": "true",
      "type": "string | boolean",
      "description_zh": "接受 true/false 以启用背景，接受 string 以定义颜色。"
    },
    "scrollable": {
      "value": "",
      "description": "When set to true, expect a v-card and a v-card-text component, with the specified height. For more information, check out the scrollable example.",
      "default": "false",
      "type": "boolean",
      "description_zh": "当设置为 true 时，期望有一个 v-card 和一个 v-card-text 组件，并有指定的高度。更多信息，请查看 可滚动示例。"
    },
    "scroll-strategy": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "block",
      "type": "'close' | 'block' | 'none' | 'reposition' | ScrollStrategyFn",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "theme": {
      "value": "",
      "description": "Specifies the theme of this component and all of its subcomponents",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定此组件及其所有子组件的主题"
    },
    "transition": {
      "value": "",
      "description": "Sets the component transition. Can be one of the built in or custom transition.",
      "default": "{component: {name: 'VDialogTransition'}}",
      "type": "string | { component: Component }",
      "description_zh": "设置组件过渡。可以是内置过渡或自定义过渡之一。"
    },
    "width": {
      "value": "",
      "description": "Sets the width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的宽度。"
    },
    "z-index": {
      "value": "",
      "description": "The z-index used for the component",
      "default": "2400",
      "type": "string | number",
      "description_zh": "用于组件的 z-index"
    }
  },
  "methods": [],
  "typeDetail": {},
  "events": [
    {
      "name": "update:modelValue",
      "description": "Event that is emitted when the component’s model changes",
      "params": "[boolean]",
      "description_zh": "组件模型更改时发出的事件"
    }
  ],
  "link": "https://vuetifyjs.com/zh-Hans/components/dialogs/",
  "link_zh": "https://vuetifyjs.com/zh-Hans/components/dialogs/"
}

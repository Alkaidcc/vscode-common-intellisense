{
  "name": "VSnackbar",
  "props": {
    "absolute": {
      "default": "false",
      "description": "Applies position: absolute to the content element.",
      "type": "boolean",
      "description_zh": "将 position： absolute 应用于 content 元素。",
      "value": ""
    },
    "activator": {
      "default": "undefined",
      "description": "Explicitly sets the overlay’s activator.",
      "type": "string | Element | ComponentPublicInstance",
      "description_zh": "显式设置覆盖的激活器。",
      "value": ""
    },
    "activator-props": {
      "default": "{}",
      "description": "Apply custom properties to the activator.",
      "type": "{}",
      "description_zh": "将自定义属性应用于激活器。",
      "value": ""
    },
    "attach": {
      "default": "false",
      "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or true to disable teleporting. Uses body by default.",
      "type": "string | boolean | Element",
      "description_zh": "指定覆盖内容应传送到哪个 DOM 元素。可以是直接元素引用、querySelector 字符串或 true 以禁用传送。默认使用 body。",
      "value": ""
    },
    "close-delay": {
      "default": "undefined",
      "description": "The number of milliseconds to wait before the component shuts down. Applies only to hover and focus events.",
      "type": "string | number",
      "description_zh": "组件关闭前等待的毫秒数。仅应用于悬停和焦点事件。",
      "value": ""
    },
    "close-on-back": {
      "default": "true",
      "description": "Closes the overlay content when the browser’s back button is pressed or $router.back() is called, cancelling the original navigation. persistent overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
      "type": "boolean",
      "description_zh": "当按下浏览器的后退按钮或调用 $router.back（） 时关闭覆盖内容，从而取消原始导航。持久叠加将取消导航并制作动画，就好像它们在外部单击而不是关闭一样。",
      "value": ""
    },
    "close-on-content-click": {
      "default": "false",
      "description": "Closes component when you click on its content.",
      "type": "boolean",
      "description_zh": "单击组件内容时关闭组件。",
      "value": ""
    },
    "color": {
      "default": "undefined",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "type": "string",
      "description_zh": "将指定的颜色应用于控件 - 支持实用程序颜色（例如，成功或紫色）或 css 颜色（例如，成功或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。",
      "value": ""
    },
    "contained": {
      "default": "false",
      "description": "Limits the size of the component and scrim to its offset parent. Implies absolute and attach. (Note: The parent element must have position: relative.).",
      "type": "boolean",
      "description_zh": "将元件和稀松布的大小限制为其偏移父项。表示绝对和附加。（注意：父元素必须具有 position： relative。",
      "value": ""
    },
    "content-class": {
      "default": "undefined",
      "description": "Apply a custom class to the detached element. This is useful since the contents of this element will be appended to the beginning of the V-App component (unless you set the attach attribute), and the class attribute will not pass the CSS class directly to the component.",
      "type": "any",
      "description_zh": "将自定义的class应用于被分离的此元素。由于此元素的内容将被附加到v-app组件开头(除非你设置了attach属性)，并且class属性不会将css类直接传递给组件，所以这个实行非常有用。",
      "value": ""
    },
    "content-props": {
      "default": "undefined",
      "description": "Apply custom properties to the content.",
      "type": "any",
      "description_zh": "将自定义属性应用于内容。",
      "value": ""
    },
    "disabled": {
      "default": "false",
      "description": "Remove the component's click or target functionality.",
      "type": "boolean",
      "description_zh": "移除组件的单击或 target 功能。",
      "value": ""
    },
    "eager": {
      "default": "false",
      "description": "Forces the component’s content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
      "type": "boolean",
      "description_zh": "强制在装入组件时呈现组件的内容。如果您的内容不会在 DOM 中呈现，而您希望为 SEO 进行抓取，这将非常有用。",
      "value": ""
    },
    "height": {
      "default": "undefined",
      "description": "Sets the height of the component.",
      "type": "string | number",
      "description_zh": "设定组件的高度。",
      "value": ""
    },
    "location": {
      "default": "bottom",
      "description": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both…",
      "type": "Anchor",
      "description_zh": "指定用于定位组件的锚点，使用方向提示将其水平、垂直或两者对齐...",
      "value": ""
    },
    "location-strategy": {
      "default": "static",
      "description": "A function used to specifies how the component should position relative to its activator.",
      "type": "'static' | 'connected' | LocationStrategyFn",
      "description_zh": "一个函数，用于指定组件相对于其激活器应如何定位。",
      "value": ["static", "connected", "LocationStrategyFn"]
    },
    "max-height": {
      "default": "undefined",
      "description": "Sets the maximum height of the component.",
      "type": "string | number",
      "description_zh": "设定组件的最大高度。",
      "value": ""
    },
    "max-width": {
      "default": "undefined",
      "description": "Sets the maximum width of the component.",
      "type": "string | number",
      "description_zh": "设定组件的最大宽度。",
      "value": ""
    },
    "min-height": {
      "default": "undefined",
      "description": "Sets the minimum height of the component.",
      "type": "string | number",
      "description_zh": "设定组件的最小高度。",
      "value": ""
    },
    "min-width": {
      "default": "undefined",
      "description": "Sets the minimum width of the component.",
      "type": "string | number",
      "description_zh": "设定组件的最小宽度。",
      "value": ""
    },
    ":v-model": {
      "default": "false",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array.",
      "type": "boolean",
      "description_zh": "组件的 v 模型值。如果组件支持 multiple 属性，则默认为空数组。",
      "value": ""
    },
    "multi-line": {
      "default": "false",
      "description": "Makes the message strip have a larger minimum height.",
      "type": "boolean",
      "description_zh": "使消息条具有更大的最低高度。",
      "value": ""
    },
    "offset": {
      "default": "undefined",
      "description": "A single value that offsets content away from the target based upon what side it is on.",
      "type": "string | number | number[]",
      "description_zh": "一个值，它根据内容所在的一侧将内容与目标偏移。",
      "value": ""
    },
    "open-delay": {
      "default": "undefined",
      "description": "The number of milliseconds that the component waits before opening. Applies only to hover and focus events.",
      "type": "string | number",
      "description_zh": "组件打开前等待的毫秒数。仅应用于悬停和焦点事件。",
      "value": ""
    },
    "open-on-click": {
      "default": "false",
      "description": "Activate the component when the activator is clicked.",
      "type": "boolean",
      "description_zh": "单击激活器时激活组件。",
      "value": ""
    },
    "open-on-focus": {
      "default": "false",
      "description": "Activate the component when the activator is focused.",
      "type": "boolean",
      "description_zh": "当激活器聚焦时激活组件。",
      "value": ""
    },
    "open-on-hover": {
      "default": "false",
      "description": "MISSING DESCRIPTION (edit in github)",
      "type": "boolean",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "value": ""
    },
    "origin": {
      "default": "auto",
      "description": "Sets the origin of the animation on the element. You can explore more for transition origin on the MDN documentation",
      "type": "Anchor | 'auto' | 'overlap'",
      "description_zh": "设置元素上的动画原点。您可以在 MDN 文档上浏览更多 for transition origin",
      "value": ["Anchor", "auto", "overlap"]
    },
    "position": {
      "default": "undefined",
      "description": "Sets the position for the component.",
      "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'",
      "description_zh": "设置元件的位置。",
      "value": ["static", "relative", "fixed", "absolute", "sticky"]
    },
    "rounded": {
      "default": "false",
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "type": "string | number | boolean",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面 获取更多有关信息",
      "value": ""
    },
    "theme": {
      "default": "undefined",
      "description": "Specify a theme for this component and all of its children.",
      "type": "string",
      "description_zh": "为此组件及其所有子组件指定主题。",
      "value": ""
    },
    "timeout": {
      "default": "5000",
      "description": "The amount of time (ms) spent waiting for the snackbar to be automatically hidden. Use \"-1\" to keep it open indefinitely (version < 2 of 0). It is recommended that this number be between 4000 and 10000. Changes to this property reset the timeout.",
      "type": "string | number",
      "description_zh": "等待snackbar 自动隐藏的时间 (毫秒) 。使用 “-1” 保持无限期打开 (版本 < 2 的 0 )。 建议这个数字在 4000 和 10000 之间。此属性的更改将重置超时。",
      "value": ""
    },
    "transition": {
      "default": "'v-snackbar-transition'",
      "description": "Sets the component transition. Can be one of the built in or custom transition.",
      "type": "string",
      "description_zh": "设置组件过渡。可以是内置过渡或自定义过渡之一。",
      "value": ""
    },
    "variant": {
      "default": "elevated",
      "description": "Applies a distinct style to the component.",
      "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'",
      "description_zh": "对组件应用不同的样式。",
      "value": ""
    },
    "vertical": {
      "default": "false",
      "description": "Stack the message content on top of the action (button).",
      "type": "boolean",
      "description_zh": "将消息条内容堆叠在操作（按钮）之上。",
      "value": ""
    },
    "width": {
      "default": "undefined",
      "description": "Sets the width of the component.",
      "type": "string | number",
      "description_zh": "设定组件的宽度。",
      "value": ""
    },
    "z-index": {
      "default": "2000",
      "description": "The z-index used for the component.",
      "type": "string | number",
      "description_zh": "用于组件的 z 索引。",
      "value": ""
    }
  },
  "methods": [],
  "typeDetail": {},
  "events": [],
  "link": "https://vuetifyjs.com/en/api/v-snackbar/#links",
  "link_zh": "https://vuetifyjs.com/zh-Hans/api/v-snackbar/#links"
}

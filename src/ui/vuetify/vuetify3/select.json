{
  "name": "VSelect",
  "props": {
    "active": {
      "default": "false",
      "description": "The active state of the control item. This is typically used to highlight components.",
      "type": "boolean",
      "description_zh": "控制项的 active 状态。这通常用于高亮显示组件。",
      "value": ""
    },
    "append-icon": {
      "default": "undefined",
      "description": "Creates a v-icon component after default content in the append slot.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在追加槽中的默认内容之后创建一个 v-icon 组件。",
      "value": ""
    },
    "autofocus": {
      "default": "false",
      "description": "Enables autofocus.",
      "type": "boolean",
      "description_zh": "启用自动对焦。",
      "value": ""
    },
    "base-color": {
      "default": "undefined",
      "description": "Sets the color of the input when it is not focused.",
      "type": "string",
      "description_zh": "设置输入未聚焦时的颜色。",
      "value": ""
    },
    "bg-color": {
      "default": "undefined",
      "description": "Applies specified color to the control’s background. Used on components that also support the color prop. - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "type": "string",
      "description_zh": "将指定的颜色应用于控件的背景。用于也支持 color 属性的组件。- 支持实用程序颜色（例如成功或紫色）或 CSS 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。",
      "value": ""
    },
    "center-affix": {
      "default": "false",
      "description": "Vertically align appendInner, prependInner, clearIcon and label in the center.",
      "type": "boolean",
      "description_zh": "将 appendInner、prependInner、clearIcon 和标签垂直对齐在中心。",
      "value": ""
    },
    "chips": {
      "default": "false",
      "description": "Changes display of selections to chips.",
      "type": "boolean",
      "description_zh": "将选择的显示更改为筹码。",
      "value": ""
    },
    "clearable": {
      "default": "false",
      "description": "Allows for the component to be cleared.",
      "type": "boolean",
      "description_zh": "允许清除组件。",
      "value": ""
    },
    "clear-icon": {
      "default": "'$clear'",
      "description": "The icon used when the clearable prop is set to true.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "将 clearable prop 设置为 true 时使用的图标。",
      "value": ""
    },
    "closable-chips": {
      "default": "false",
      "description": "Enables the closable prop on all v-chip components.",
      "type": "boolean",
      "description_zh": "启用所有 V 芯片组件上的可闭合道具。",
      "value": ""
    },
    "close-text": {
      "default": "'$vuetify.close'",
      "description": "Text set to to the inputs aria-label and title when input menu is closed.",
      "type": "string",
      "description_zh": "当输入菜单关闭时，文本设置为输入 aria-label 和 title。",
      "value": ""
    },
    "color": {
      "default": "undefined",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "type": "string",
      "description_zh": "将指定的颜色应用于控件 - 支持实用程序颜色（例如，成功或紫色）或 css 颜色（例如，成功或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。",
      "value": ""
    },
    "counter": {
      "default": "false",
      "description": "Create a counter for the input length, default to 25 if no number is specified, no validation will be applied.",
      "type": "string | number | boolean",
      "description_zh": "为输入长度创建一个计数器，如果未指定数字，则默认为25，不会应用任何验证。",
      "value": ""
    },
    "counter-value": {
      "default": "undefined",
      "description": "Function returns the counter display text.",
      "type": "number | ((value: any) => number)",
      "description_zh": "函数返回计数器显示文本。",
      "value": ""
    },
    "density": {
      "default": "'default'",
      "description": "Adjusts the vertical height used by the component.",
      "type": "'default' | 'comfortable' | 'compact'",
      "description_zh": "调整组件使用的垂直高度。",
      "value": ["default", "comfortable", "compact"]
    },
    "direction": {
      "default": "'horizontal'",
      "description": "Changes the direction of the input.",
      "type": "'horizontal' | 'vertical'",
      "description_zh": "更改输入的方向。",
      "value": ["horizontal", "vertical"]
    },
    "disabled": {
      "default": "false",
      "description": "Removes the ability to click or target the input.",
      "type": "boolean",
      "description_zh": "删除单击或定位输入的功能。",
      "value": ""
    },
    "eager": {
      "default": "false",
      "description": "Forces the component’s content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
      "type": "boolean",
      "description_zh": "强制在装入组件时呈现组件的内容。如果您的内容不会在 DOM 中呈现，而您希望为 SEO 进行抓取，这将非常有用。",
      "value": ""
    },
    "error": {
      "default": "false",
      "description": "Puts the input in a manual error state.",
      "type": "boolean",
      "description_zh": "将输入置于手动错误状态。",
      "value": ""
    },
    "error-messages": {
      "default": "[]",
      "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the rules prop. This field will not trigger validation.",
      "type": "string | string[]",
      "description_zh": "将输入置于错误状态并传递自定义错误消息。将与 rules 属性发生的任何验证相结合。此字段不会触发验证。",
      "value": ""
    },
    "flat": {
      "default": "false",
      "description": "Removes box shadow when using a variant with elevation.",
      "type": "boolean",
      "description_zh": "使用具有高程的变体时删除框阴影。",
      "value": ""
    },
    "focused": {
      "default": "false",
      "description": "Force the component to use the style when focused.",
      "type": "boolean",
      "description_zh": "强制组件使用聚焦时的样式。",
      "value": ""
    },
    "hide-details": {
      "default": "false",
      "description": "Hides hint and validation errors. When set to auto messages will be rendered only if there’s a message (hint, error message, counter value etc) to display.",
      "type": "boolean | 'auto'",
      "description_zh": "隐藏提示和验证错误。设置为自动时，仅当有消息（提示、错误消息、计数器值等）要显示时，才会呈现消息。",
      "value": ""
    },
    "hide-no-data": {
      "default": "false",
      "description": "When there are no options to display, hide the menu. Used to prevent the menu from opening before the results are obtained asynchronously. There is also the effect of opening the menu when the items array changes if it is not already open.",
      "type": "boolean",
      "description_zh": "当没有要显示的选项时，隐藏菜单。用于防止在异步获取结果之前打开菜单。也有打开菜单的效果，当“ items 数组改变，如果还没有打开。",
      "value": ""
    },
    "hide-selected": {
      "default": "false",
      "description": "Do not display in the select menu items that are already selected.",
      "type": "boolean",
      "description_zh": "不显示在已选择的菜单项中。",
      "value": ""
    },
    "hint": {
      "default": "undefined",
      "description": "Displays hint text below the input when focused. Force this always open with the persistent-hint property.",
      "type": "string",
      "description_zh": "聚焦时在输入下方显示提示文本。使用 persistent-hint 属性强制它始终打开。",
      "value": ""
    },
    "id": {
      "default": "undefined",
      "description": "Sets the DOM id on the component.",
      "type": "string",
      "description_zh": "设置组件上的 DOM ID。",
      "value": ""
    },
    "item-children": {
      "default": "false",
      "description": "Property on supplied items that contains its children.",
      "type": "SelectItemKey",
      "description_zh": "包含其子项的所提供项的属性。",
      "value": ""
    },
    "item-color": {
      "default": "undefined",
      "description": "Sets color of selected items.",
      "type": "string",
      "description_zh": "设置所选项目的颜色。",
      "value": ""
    },
    "item-props": {
      "default": "'props'",
      "description": "Props object that will be applied to each item component. true will treat the original object as raw props and pass it directly to the component.",
      "type": "SelectItemKey",
      "description_zh": "将应用于每个项组件的 props 对象。true 会将原始对象视为原始 props，并将其直接传递给组件。",
      "value": ""
    },
    "items": {
      "default": "[]",
      "description": "Can be an array of objects or array of strings. When using objects, will look for a title, value and disabled keys. This can be changed using the item-title, item-value and item-disabled props. Objects that have a header or divider property are considered special cases and generate a list header or divider; these items are not selectable.",
      "type": "any[]",
      "description_zh": "可以是对象数组或字符串数组。使用对象时，将查找标题、值和禁用键。这可以使用 item-title、item-value 和 item-disabled 属性进行更改。具有标题或分隔线属性的对象被视为特殊情况，会生成一个列表标题或分隔线；这些项目不可选。",
      "value": ""
    },
    "item-title": {
      "default": "'title'",
      "description": "Property on supplied items that contains its title.",
      "type": "SelectItemKey",
      "description_zh": "属性中包含其标题。",
      "value": ""
    },
    "item-value": {
      "default": "'value'",
      "description": "Set property of items’s value - must be primitive. Dot notation is supported. Note: This is currently not supported with v-combobox GitHub Issue.",
      "type": "SelectItemKey",
      "description_zh": "项目值的设置属性 - 必须是基元属性。支持圆点符号。注：v-combobox GitHub Issue 目前不支持此功能。",
      "value": ""
    },
    "label": {
      "default": "undefined",
      "description": "Sets the text of the v-label or v-field-label component.",
      "type": "string",
      "description_zh": "设置v-label或v-field-label组件的文本。",
      "value": ""
    },
    "loading": {
      "default": "false",
      "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it’s supported by the component) or the primary color.",
      "type": "string | boolean",
      "description_zh": "显示线性进度条。可以是一个字符串，指定应用于进度条的颜色（任何材质颜色或主题颜色--主色、次色、成功、信息、警告、错误），也可以是一个布尔值，使用组件颜色（由颜色道具设置--如果组件支持）或主色。",
      "value": ""
    },
    "max-errors": {
      "default": "1",
      "description": "Control the maximum number of shown errors from validation.",
      "type": "string | number",
      "description_zh": "控制验证中显示的最大错误数。",
      "value": ""
    },
    "menu": {
      "default": "false",
      "description": "Renders with the menu open by default.",
      "type": "boolean",
      "description_zh": "渲染时默认打开菜单。",
      "value": ""
    },
    "menu-icon": {
      "default": "'$dropdown'",
      "description": "Sets the the spin icon.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "设置自旋图标。",
      "value": ""
    },
    "menu-props": {
      "default": "undefined",
      "description": "Pass props through to the v-menu component. Accepts an object with anything from v-menu props, camelCase keys are recommended.",
      "type": "unknown",
      "description_zh": "将props传递给v-menu组件。接受v-menu props中的任何对象，建议使用camelCase键。",
      "value": ""
    },
    "messages": {
      "default": "[]",
      "description": "Displays a list of messages or a single message if using a string.",
      "type": "string | string[]",
      "description_zh": "如果使用字符串，则显示消息列表或单个消息。",
      "value": ""
    },
    ":v-model": {
      "default": "null",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array.",
      "type": "any",
      "description_zh": "组件的v-model值。如果组件支持多个道具，则默认为空数组。",
      "value": ""
    },
    "multiple": {
      "default": "false",
      "description": "Changes select to multiple. Accepts array for value.",
      "type": "boolean",
      "description_zh": "将选择改为多重。接受数组值。",
      "value": ""
    },
    "name": {
      "default": "undefined",
      "description": "Set the name property of the component.",
      "type": "string",
      "description_zh": "设置组件的 name 属性.",
      "value": ""
    },
    "no-data-text": {
      "default": "'$vuetify.noDataText'",
      "description": "Text shown when no items are provided to the component.",
      "type": "string",
      "description_zh": "当组件没有提供任何项目时显示的文本。",
      "value": ""
    },
    "open-on-clear": {
      "default": "false",
      "description": "When using the clearable prop, once cleared, the select menu will either open or stay open, depending on the current state.",
      "type": "boolean",
      "description_zh": "当使用clearable道具时，一旦清除，选择菜单将打开或保持打开状态，这取决于当前状态。",
      "value": ""
    },
    "open-text": {
      "default": "'$vuetify.open'",
      "description": "Text set to to the inputs aria-label and title when input menu is open.",
      "type": "string",
      "description_zh": "当输入菜单打开时，设置为输入的 aria-label 和标题的文本。",
      "value": ""
    },
    "persistent-clear": {
      "default": "false",
      "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
      "type": "boolean",
      "description_zh": "当输入不干净时，总是显示可清除图标(默认情况下，它只在悬停时显示)。",
      "value": ""
    },
    "persistent-counter": {
      "default": "false",
      "description": "Forces counter to always be visible.",
      "type": "boolean",
      "description_zh": "迫使计数器始终可见。",
      "value": ""
    },
    "persistent-hint": {
      "default": "false",
      "description": "Forces hint to always be visible.",
      "type": "boolean",
      "description_zh": "力暗示永远是可见的。",
      "value": ""
    },
    "persistent-placeholder": {
      "default": "false",
      "description": "Forces placeholder to always be visible.",
      "type": "boolean",
      "description_zh": "强制占位符始终可见。",
      "value": ""
    },
    "placeholder": {
      "default": "undefined",
      "description": "Sets the input’s placeholder text.",
      "type": "string",
      "description_zh": "设置输入的占位符文本。",
      "value": ""
    },
    "prefix": {
      "default": "undefined",
      "description": "Displays prefix text.",
      "type": "string",
      "description_zh": "显示前缀文本。",
      "value": ""
    },
    "prepend-icon": {
      "default": "undefined",
      "description": "Prepends an icon to the outnside the component’s input, uses the same syntax as v-icon.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在组件输入的外部添加一个图标，使用与v-icon相同的语法。",
      "value": ""
    },
    "prepend-inner-icon": {
      "default": "undefined",
      "description": "Creates a v-icon component in the prepend-inner slot.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在prepend_inner槽中创建一个v-icon组件。",
      "value": ""
    },
    "readonly": {
      "default": "false",
      "description": "Puts input in readonly state.",
      "type": "boolean",
      "description_zh": "将输入置于只读状态。",
      "value": ""
    },
    "return-object": {
      "default": "false",
      "description": "Changes the selection behavior to return the object directly rather than the value specified with item-value.",
      "type": "boolean",
      "description_zh": "更改选择行为以直接返回对象，而不是返回使用 item-value 指定的值。",
      "value": ""
    },
    "reverse": {
      "default": "false",
      "description": "Reverses the orientation.",
      "type": "boolean",
      "description_zh": "反转方向。",
      "value": ""
    },
    "role": {
      "default": "'button'",
      "description": "The role attribute applied to the input.",
      "type": "string",
      "description_zh": "应用于输入的 role 属性。",
      "value": ""
    },
    "rounded": {
      "default": "false",
      "description": "Adds a border radius to the input.",
      "type": "string | number | boolean",
      "description_zh": "向输入添加边框半径。",
      "value": ""
    },
    "rules": {
      "default": "[]",
      "description": "Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) false or is a string.",
      "type": "ValidationRule[]",
      "description_zh": "接受类型函数、布尔值和字符串的混合数组。函数传递输入值作为参数，并且必须返回true/false或包含错误消息的字符串。如果函数返回（或数组中的任何值包含）false或字符串，则输入字段将进入错误状态。",
      "value": ""
    },
    "single-line": {
      "default": "false",
      "description": "Label does not move on focus/dirty.",
      "type": "boolean",
      "description_zh": "标签不会在焦点/肮脏时移动。",
      "value": ""
    },
    "suffix": {
      "default": "undefined",
      "description": "Displays suffix text.",
      "type": "string",
      "description_zh": "显示后缀文本。",
      "value": ""
    },
    "theme": {
      "default": "undefined",
      "description": "Specify a theme for this component and all of its children.",
      "type": "string",
      "description_zh": "为此组件及其所有子组件指定一个主题。",
      "value": ""
    },
    "transition": {
      "default": "{component: {name: 'VDialogTransition'}}",
      "description": "Sets the component transition. Can be one of the built in or custom transition.",
      "type": "string | { component: Component }",
      "description_zh": "设置组件过渡。可以是内置或自定义过渡之一。",
      "value": ""
    },
    "type": {
      "default": "'text'",
      "description": "Sets input type.",
      "type": "string",
      "description_zh": "设置输入类型。",
      "value": ""
    },
    "validate-on": {
      "default": "undefined",
      "description": "Change what type of event triggers validation to run.",
      "type": "'lazy' | 'blur' | 'input' | 'submit' | 'blur lazy' | 'input lazy' | 'submit lazy' | 'lazy blur' | 'lazy input' | 'lazy submit'",
      "description_zh": "更改触发验证运行的事件类型。",
      "value": ["lazy", "blur", "input", "submit", "blur lazy", "input lazy", "submit lazy", "lazy blur", "lazy input", "lazy submit"]
    },
    "value-comparator": {
      "default": "undefined",
      "description": "Apply a custom comparison algorithm to compare model-value and values contains in the items prop.",
      "type": "(a: any, b: any) => boolean",
      "description_zh": "应用自定义比较算法来比较项目道具中包含的模型值和值。",
      "value": ""
    },
    "variant": {
      "default": "'filled'",
      "description": "Applies a distinct style to the component.",
      "type": "'outlined' | 'plain' | 'underlined' | 'filled' | 'solo' | 'solo-inverted' | 'solo-filled'",
      "description_zh": "对组件应用独特的风格。",
      "value": ["outlined", "plain", "underlined", "filled", "solo", "solo-inverted", "solo-filled"]
    }
  },
  "methods": [],
  "typeDetail": {},
  "events": [],
  "link": "https://vuetifyjs.com/en/api/v-select/#links",
  "link_zh": "https://vuetifyjs.com/zh-Hans/api/v-select/#links"
}

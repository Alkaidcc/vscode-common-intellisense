{
  "name": "VRadioGroup",
  "props": {
    "append-icon": {
      "default": "undefined",
      "description": "Creates a v-icon component after default content in the append slot.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在追加槽中的默认内容之后创建一个 v-icon 组件。",
      "value": ""
    },
    "center-affix": {
      "default": "true",
      "description": "Vertically align appendInner, prependInner, clearIcon and label in the center.",
      "type": "boolean",
      "description_zh": "将 appendInner、prependInner、clearIcon 和标签垂直对齐在中心。",
      "value": ""
    },
    "color": {
      "default": "undefined",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "type": "string",
      "description_zh": "将指定的颜色应用于控件 - 支持实用程序颜色（例如，成功或紫色）或 css 颜色（例如，成功或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。",
      "value": ""
    },
    "defaults-target": {
      "default": "undefined",
      "description": "The target component to provide defaults values for.",
      "type": "string",
      "description_zh": "要为其提供默认值的目标组件。",
      "value": ""
    },
    "density": {
      "default": "'default'",
      "description": "Adjusts the vertical height used by the component.",
      "type": "'default' | 'comfortable' | 'compact'",
      "description_zh": "调整组件使用的垂直高度。",
      "value": ["default", "comfortable", "compact"]
    },
    "direction": {
      "default": "'horizontal'",
      "description": "Changes the direction of the input.",
      "type": "'horizontal' | 'vertical'",
      "description_zh": "更改输入的方向。",
      "value": ["horizontal", "vertical"]
    },
    "disabled": {
      "default": "false",
      "description": "Remove the component's click or target functionality.",
      "type": "boolean",
      "description_zh": "移除组件的单击或 target 功能。",
      "value": ""
    },
    "error": {
      "default": "false",
      "description": "Puts the input in a manual error state.",
      "type": "boolean",
      "description_zh": "将输入置于手动错误状态。",
      "value": ""
    },
    "error-messages": {
      "default": "[]",
      "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the rules prop. This field will not trigger validation.",
      "type": "string | string[]",
      "description_zh": "将输入置于错误状态并传递自定义错误消息。将与 rules 属性发生的任何验证相结合。此字段不会触发验证。",
      "value": ""
    },
    "false-icon": {
      "default": "'$radioOff'",
      "description": "The icon used when it is inactive.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "处于不活动状态时使用的图标。",
      "value": ""
    },
    "focused": {
      "default": "false",
      "description": "Force the component to use the style when focused.",
      "type": "boolean",
      "description_zh": "强制组件使用聚焦时的样式。",
      "value": ""
    },
    "height": {
      "default": "'auto'",
      "description": "Sets the height of the input.",
      "type": "string | number",
      "description_zh": "设置输入的高度。",
      "value": ""
    },
    "hide-details": {
      "default": "false",
      "description": "Hides hint and validation errors. When set to auto messages will be rendered only if there’s a message (hint, error message, counter value etc) to display.",
      "type": "boolean | 'auto'",
      "description_zh": "隐藏提示和验证错误。设置为自动时，仅当有消息（提示、错误消息、计数器值等）要显示时，才会呈现消息。",
      "value": ""
    },
    "hint": {
      "default": "undefined",
      "description": "Displays hint text below the input when focused. Force this always open with the persistent-hint property.",
      "type": "string",
      "description_zh": "聚焦时在输入下方显示提示文本。使用 persistent-hint 属性强制它始终打开。",
      "value": ""
    },
    "id": {
      "default": "undefined",
      "description": "Sets the DOM id on the component.",
      "type": "string",
      "description_zh": "设置组件上的 DOM ID。",
      "value": ""
    },
    "inline": {
      "default": "false",
      "description": "Displays radio buttons in row.",
      "type": "boolean",
      "description_zh": "在行中显示单选按钮。",
      "value": ""
    },
    "label": {
      "default": "undefined",
      "description": "Sets the text of the v-label or v-field-label component.",
      "type": "string",
      "description_zh": "设置 v-label 或 v-field-label 组件的文本。",
      "value": ""
    },
    "max-errors": {
      "default": "1",
      "description": "Control the maximum number of shown errors from validation.",
      "type": "string | number",
      "description_zh": "控制验证中显示的最大错误数。",
      "value": ""
    },
    "messages": {
      "default": "[]",
      "description": "Displays a list of messages or a single message if using a string.",
      "type": "string | string[]",
      "description_zh": "显示消息列表或单个消息（如果使用字符串）。",
      "value": ""
    },
    "model-value": {
      "default": "undefined",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array.",
      "type": "any",
      "description_zh": "组件的 v 模型值。如果组件支持 multiple 属性，则默认为空数组。",
      "value": ""
    },
    "name": {
      "default": "undefined",
      "description": "Set the name property of the component.",
      "type": "string",
      "description_zh": "设置组件的 name 属性.",
      "value": ""
    },
    "persistent-hint": {
      "default": "false",
      "description": "Forces hint to always be visible.",
      "type": "boolean",
      "description_zh": "力暗示始终可见。",
      "value": ""
    },
    "prepend-icon": {
      "default": "undefined",
      "description": "Prepends an icon to the component, uses the same syntax as v-icon.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在组件前面添加一个图标，使用与 v-icon 相同的语法。",
      "value": ""
    },
    "readonly": {
      "default": "false",
      "description": "Puts input in readonly state.",
      "type": "boolean",
      "description_zh": "将输入置于只读状态。",
      "value": ""
    },
    "ripple": {
      "default": "true",
      "description": "Apply the v-ripple directive.",
      "type": "boolean",
      "description_zh": "应用 v-ripple 指令。",
      "value": ""
    },
    "rules": {
      "default": "[]",
      "description": "Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) false or is a string.",
      "type": "ValidationRule[]",
      "description_zh": "接受 function、boolean 和 string 类型的混合数组。函数将输入值作为参数传递，并且必须返回 true / false 或包含错误消息的字符串。如果函数返回（或数组中的任何值包含）false 或字符串，则输入字段将进入错误状态。",
      "value": ""
    },
    "theme": {
      "default": "undefined",
      "description": "Specify a theme for this component and all of its children.",
      "type": "string",
      "description_zh": "为此组件及其所有子组件指定主题。",
      "value": ""
    },
    "true-icon": {
      "default": "'$radioOn'",
      "description": "The icon used when it is active.",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "处于激活状态时使用的图标.",
      "value": ""
    },
    "type": {
      "default": "'radio'",
      "description": "Provides the default type for children selection controls.",
      "type": "string",
      "description_zh": "为子项选择控件提供默认类型。",
      "value": ""
    },
    "validate-on": {
      "default": "undefined",
      "description": "Change what type of event triggers validation to run.",
      "type": "'lazy' | 'blur' | 'input' | 'submit' | 'blur lazy' | 'input lazy' | 'submit lazy' | 'lazy blur' | 'lazy input' | 'lazy submit'",
      "description_zh": "更改触发要运行的验证的事件类型。",
      "value": ["lazy", "blur", "input", "submit", "blur lazy", "input lazy", "submit lazy", "lazy blur", "lazy input", "lazy submit"]
    },
    "validation-value": {
      "default": "undefined",
      "description": "The value used when applying validation rules.",
      "type": "any",
      "description_zh": "应用验证规则时使用的值。",
      "value": ""
    },
    "value-comparator": {
      "default": "undefined",
      "description": "Apply a custom comparison algorithm to compare model-value and values contains in the items prop.",
      "type": "(a: any, b: any) => boolean",
      "description_zh": "应用自定义比较算法来比较模型值和 items 属性中包含的值。",
      "value": ""
    }
  },
  "methods": [],
  "typeDetail": {},
  "events": [],
  "link": "https://vuetifyjs.com/en/api/v-radio-group/#links",
  "link_zh": "https://vuetifyjs.com/zh-Hans/api/v-radio-group/#links"
}

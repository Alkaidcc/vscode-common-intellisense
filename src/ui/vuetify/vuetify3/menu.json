{
  "name": "VMenu",
  "props": {
    "activator": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "undefined",
      "type": "string | Element | ComponentPublicInstance",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "activator-props": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "{}",
      "type": "{}",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "attach": {
      "value": "",
      "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or true to disable teleporting. Uses body by default. Generally not recommended except as a last resort: the default positioning algorithm should handle most scenarios better than is possible without teleporting, and you may have unexpected behavior if the menu ends up as child of its activator.",
      "default": "false",
      "type": "string | boolean | Element",
      "description_zh": "指定覆盖内容应传送到哪个 DOM 元素。可以是直接元素引用、querySelector 字符串或 true 以禁用传送。默认使用 body。除非万不得已，否则通常不建议这样做：默认定位算法应该比没有传送时更好地处理大多数场景，如果菜单最终成为其激活器的子项，则可能会出现意外行为。"
    },
    "close-delay": {
      "value": "",
      "description": "The number of milliseconds to wait before shutting down a component. Only works when using open-on-hover prop.",
      "default": "250",
      "type": "string | number",
      "description_zh": "关闭组件之前等待的毫秒数. 只在使用 open-on-hover prop 时有效."
    },
    "close-on-back": {
      "value": "",
      "description": "Specifies whether the menu should close when you click on content.",
      "default": "true",
      "type": "boolean",
      "description_zh": "指定点击内容时菜单是否应该关闭。"
    },
    "contained": {
      "value": "",
      "description": "Limits the size of the component and scrim to its offset parent. Implies absolute and attach.",
      "default": "false",
      "type": "boolean",
      "description_zh": "将元件和稀松布的大小限制为其偏移父项。表示绝对和附加。"
    },
    "content-class": {
      "value": "",
      "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the v-app component (unless the attach prop is provided) and is not targetable by classes passed directly on the component",
      "default": "undefined",
      "type": "any",
      "description_zh": "将自定义类应用于分离的元素。这很有用，因为内容被移动到 v-app 组件的开头（除非提供了 attach 属性），并且直接在组件上传递的类无法定位"
    },
    "content-props": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "undefined",
      "type": "any",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "disabled": {
      "value": "",
      "description": "Remove the ability to click or select a component to make it unavailable.",
      "default": "false",
      "type": "boolean",
      "description_zh": "移除单击组件或选中组件的能力，将组件设置为不可用状态。"
    },
    "eager": {
      "value": "",
      "description": "Forces the component’s content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
      "default": "false",
      "type": "boolean",
      "description_zh": "强制在装入组件时呈现组件的内容。如果您的内容不会在 DOM 中呈现，而您希望为 SEO 进行抓取，这将非常有用。"
    },
    "height": {
      "value": "",
      "description": "Sets the height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的高度。"
    },
    "id": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "undefined",
      "type": "string",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "location": {
      "value": "",
      "description": "Specifies the location of the component. You can apply multiple strings at the same time using space-separated strings.",
      "default": "undefined",
      "type": "Anchor",
      "description_zh": "指定组件的位置。可以使用空格分隔的字符串同时应用多个。"
    },
    "location-strategy": {
      "value": "",
      "description": "A function used to specifies how the component should position relative to its activator",
      "default": "connected",
      "type": "'static' | 'connected' | LocationStrategyFn",
      "description_zh": "用于指定组件相对于其激活器的位置的函数"
    },
    "max-height": {
      "value": "",
      "description": "Sets the maximum height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最大高度。"
    },
    "max-width": {
      "value": "",
      "description": "Sets the maximum width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最大宽度。"
    },
    "min-height": {
      "value": "",
      "description": "Sets the minimum height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最小高度。"
    },
    "min-width": {
      "value": "",
      "description": "Sets the minimum width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最小宽度。"
    },
    "model-value": {
      "value": "",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array",
      "default": "false",
      "type": "boolean",
      "description_zh": "组件的 v 模型值。如果组件支持 multiple 属性，则默认为空数组"
    },
    "no-click-animation": {
      "value": "",
      "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
      "default": "false",
      "type": "boolean",
      "description_zh": "禁用在使用持久性道具时单击内容元素外部时的反弹效果。"
    },
    "offset": {
      "value": "",
      "description": "A single value that offsets content away from the target based upon what side it is on",
      "default": "undefined",
      "type": "string | number | number[]",
      "description_zh": "一个值，它根据内容所在的一侧将内容与目标偏移"
    },
    "open-delay": {
      "value": "",
      "description": "The number of milliseconds to wait before turning on the component. Only works when using open-on-hover prop.",
      "default": "300",
      "type": "string | number",
      "description_zh": "开启组件之前等待的毫秒数. 只在使用 open-on-hover prop 时有效."
    },
    "open-on-click": {
      "value": "",
      "description": "Specifies whether to open the menu when the activator is clicked",
      "default": "false",
      "type": "boolean",
      "description_zh": "指定是否在激活器点击时打开菜单"
    },
    "open-on-focus": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "false",
      "type": "boolean",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "open-on-hover": {
      "value": "",
      "description": "Specifies whether to open the menu when the activator is hovered",
      "default": "false",
      "type": "boolean",
      "description_zh": "指定是否在激活器悬停时打开菜单"
    },
    "origin": {
      "value": "",
      "description": "Sets the origin of the animation on the element. You can explore more for transition origin on the MDN documentation",
      "default": "auto",
      "type": "Anchor | 'auto' | 'overlap'",
      "description_zh": "设置元素上的动画原点。您可以在 MDN 文档上浏览更多 for transition origin"
    },
    "persistent": {
      "value": "",
      "description": "Clicking outside of the element or pressing esc key will not deactivate it.",
      "default": "false",
      "type": "boolean",
      "description_zh": "单击元素外部或按 esc 键不会停用它。"
    },
    "scrim": {
      "value": "",
      "description": "Accepts true/false to enable background, and string to define color.",
      "default": "false",
      "type": "string | boolean",
      "description_zh": "接受 true/false 以启用背景，接受 string 以定义颜色。"
    },
    "scroll-strategy": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "reposition",
      "type": "'close' | 'block' | 'none' | 'reposition' | ScrollStrategyFn",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "theme": {
      "value": "",
      "description": "Specifies the theme of this component and all of its subcomponents",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定此组件及其所有子组件的主题"
    },
    "transition": {
      "value": "",
      "description": "Sets the component transition. Can be one of the built in or custom transition.",
      "default": "{component: {name: 'VDialogTransition'}}",
      "type": "string | { component: Component }",
      "description_zh": "设置组件过渡。可以是内置过渡或自定义过渡之一。"
    },
    "width": {
      "value": "",
      "description": "Sets the width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的宽度。"
    },
    "z-index": {
      "value": "",
      "description": "The z-index used for the component",
      "default": "2000",
      "type": "string | number",
      "description_zh": "用于组件的 z-index"
    }
  },
  "methods": [],
  "typeDetail": {},
  "events": [
    {
      "name": "update:modelValue",
      "description": "Event that is emitted when the component’s model changes",
      "params": "[boolean]",
      "description_zh": "组件模型更改时发出的事件"
    }
  ],
  "link": "https://vuetifyjs.com/zh-Hans/components/menus/",
  "link_zh": "https://vuetifyjs.com/zh-Hans/components/menus/"
}

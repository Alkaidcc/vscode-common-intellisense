{
  "name": "VList",
  "props": {
    "active-class": {
      "value": "",
      "description": "The class that is applied when the component is in the active state",
      "default": "undefined",
      "type": "string",
      "description_zh": "当组件处于 active 状态时应用的类"
    },
    "active-color": {
      "value": "",
      "description": "The color applied when the component is in the active state",
      "default": "undefined",
      "type": "string",
      "description_zh": "当组件处于 active 状态时应用的颜色"
    },
    "base-color": {
      "value": "",
      "description": "MISSING DESCRIPTION",
      "default": "undefined",
      "type": "string",
      "description_zh": "缺少描述"
    },
    "bg-color": {
      "value": "",
      "description": "Applies specified color to the control’s background. Used on components that also support the color prop. - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page",
      "default": "undefined",
      "type": "string",
      "description_zh": "将指定的颜色应用于控件的背景。用于也支持 color 属性的组件。- 支持实用程序颜色（例如成功或紫色）或 CSS 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表"
    },
    "border": {
      "value": "",
      "description": "Apply a border style to the component.",
      "default": "false",
      "type": "string | number | boolean",
      "description_zh": "应用边框样式到组件。"
    },
    "color": {
      "value": "",
      "description": "Specify the control color, which can be any Material color (e.g. success or purple) or Css color (e.g. #033 or rgba (255, 0, 0, 0.5)). You can find a list of built-in color classes in the Colors page.",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定控件颜色，颜色值可以是任意 Material 颜色（例如 success 或者 purple ）也可以是 Css 颜色 （例如 #033 或者 rgba(255, 0, 0, 0.5)）。在 颜色页中可以找到内置的颜色类列表。"
    },
    "density": {
      "value": ["default", "comfortable", "compact"],
      "description": "Adjusts the vertical height used by the component.",
      "default": "default",
      "type": "'default' | 'comfortable' | 'compact'",
      "description_zh": "调整组件使用的垂直高度。"
    },
    "disabled": {
      "value": "",
      "description": "Remove the ability to click or select a component to make it unavailable.",
      "default": "false",
      "type": "boolean",
      "description_zh": "移除单击组件或选中组件的能力，将组件设置为不可用状态。"
    },
    "elevation": {
      "value": "",
      "description": "The elevation of the component is acceptable from 0 to 24. You can find more information on the elevation page.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "组件的海拔可接受 0 到 24 之间的值。你可以在 elevation page浏览更多信息。"
    },
    "height": {
      "value": "",
      "description": "Sets the height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的高度。"
    },
    "item-children": {
      "value": "",
      "description": "Attributes provided on items that contain their children",
      "default": "children",
      "type": "SelectItemKey",
      "description_zh": "提供的包含其子项的 items 上的属性"
    },
    "item-props": {
      "value": "",
      "description": "Props object that will be applied to each item component. true will treat the original object as raw props and pass it directly to the component.",
      "default": "props",
      "type": "SelectItemKey",
      "description_zh": "将应用于每个项组件的 props 对象。true 会将原始对象视为原始 props，并将其直接传递给组件。"
    },
    "items": {
      "value": "",
      "description": "An array of strings or objects used for automatically generating children components",
      "default": "[]",
      "type": "unknown[]",
      "description_zh": "用于自动生成子组件的字符串或对象数组"
    },
    "item-title": {
      "value": "",
      "description": "Property on supplied items that contains its title",
      "default": "title",
      "type": "SelectItemKey",
      "description_zh": "包含其标题的所提供项的属性"
    },
    "item-type": {
      "value": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "default": "type",
      "type": "string",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "item-value": {
      "value": ["false", "one", "two", "three"],
      "description": "Designates a minimum-height for all children v-list-item components. This prop uses line-clamp and is not supported in all browsers.",
      "default": "one",
      "type": "false | 'one' | 'two' | 'three'",
      "description_zh": "指定所有子 v-list-item 组件的最小高度。此道具使用 line-clamp，并非所有浏览器都支持。"
    },
    "mandatory": {
      "value": "",
      "description": "Force at least one item to be selected, if available.",
      "default": "false",
      "type": "boolean",
      "description_zh": "强制至少选择一个项目（如果可用）。"
    },
    "max-height": {
      "value": "",
      "description": "Sets the maximum height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最大高度。"
    },
    "max-width": {
      "value": "",
      "description": "Sets the maximum width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最大宽度。"
    },
    "min-height": {
      "value": "",
      "description": "Sets the minimum height of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最小高度。"
    },
    "min-width": {
      "value": "",
      "description": "Sets the minimum width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的最小宽度。"
    },
    "nav": {
      "value": "",
      "description": "Another style can reduce the width of the v-list-item and round it. Usually used with v-navigation-drawer",
      "default": "false",
      "type": "boolean",
      "description_zh": "另一种样式可以减小 v-list-item 的宽度并圆角化。 通常与 v-navigation-drawer一起使用"
    },
    "opened": {
      "value": "",
      "description": "An array containing the values of currently opened groups. Can be two-way bound with v-model:opened.",
      "default": "undefined",
      "type": "unknown[]",
      "description_zh": "包含当前打开的组的值的数组。可以与 v-model：opened 双向绑定。"
    },
    "open-strategy": {
      "value": ["multiple", "single", "list"],
      "description": "multiple: Any number of groups can be open at once. single: Only one group at each level can be open, opening a group will cause others to close. list: Multiple, but all other groups will close when an item is selected.",
      "default": "list",
      "type": "'multiple' | 'single' | 'list' | { open: OpenStrategyFn; select: OpenSelectStrategyFn }",
      "description_zh": "multiple：可以一次打开任意数量的组。single：每个级别只能打开一个组，打开一个组会导致其他组关闭。list：多个，但在选择某个项目时，所有其他组都将关闭。"
    },
    "return-object": {
      "value": "",
      "description": "Change the behavior of the selector to return the object directly, rather than the value specified by item-value",
      "default": "false",
      "type": "boolean",
      "description_zh": "将选择器的行为更改为直接返回对象，而不是 item-value 指定的值"
    },
    "rounded": {
      "value": "",
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "default": "false",
      "type": "string | number | boolean",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面获取更多有关信息"
    },
    "selected": {
      "value": "",
      "description": "An array containing the values of currently selected items. Can be two-way bound with v-model:selected.",
      "default": "undefined",
      "type": "unknown[]",
      "description_zh": "包含当前选定项的值的数组。可以使用 v-model：selected 进行双向绑定。"
    },
    "select-strategy": {
      "value": ["single-leaf", "leaf", "independent", "single-independent", "classic", "SelectStrategyFn"],
      "description": "leaf: Only leaf nodes (items without children) can be selected.independent: All nodes can be selected whether they have children or not.classic: Selecting a parent node will cause all children to be selected, parent nodes will be displayed as selected if all their descendants are selected. Only leaf nodes will be added to the model.",
      "default": "single-leaf",
      "type": "'single-leaf' | 'leaf' | 'independent' | 'single-independent' | 'classic' | SelectStrategyFn",
      "description_zh": "leaf：只能选择叶节点（没有子节点的项目）。independent：可以选择所有节点，无论它们是否有子节点。classic：选择父节点将导致选择所有子节点，如果父节点的所有子节点都被选中，则父节点将显示为已选中。只有叶节点才会添加到模型中。"
    },
    "tag": {
      "value": "",
      "description": "Specifies the custom tag to be used on the root element.",
      "default": "button",
      "type": "string",
      "description_zh": "指定在根元素上使用的自定义标签。"
    },
    "theme": {
      "value": "",
      "description": "Specifies the theme of this component and all of its subcomponents",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定此组件及其所有子组件的主题"
    },
    "variant": {
      "value": ["text", "flat", "elevated", "tonal", "outlined", "plain"],
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "default": "false",
      "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面获取更多有关信息"
    },
    "width": {
      "value": "",
      "description": "Sets the width of the component.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "设定组件的宽度。"
    }
  },
  "methods": [],
  "typeDetail": {},
  "events": [
    {
      "name": "click:open",
      "description": "MISSING DESCRIPTION (edit in github)",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "value": ""
    },
    {
      "name": "click:select",
      "description": "MISSING DESCRIPTION (edit in github)",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "value": ""
    },
    {
      "name": "update:opened",
      "description": "MISSING DESCRIPTION (edit in github)",
      "params": "[unknown[]]",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "value": ""
    },
    {
      "name": "update:selected",
      "description": "MISSING DESCRIPTION (edit in github)",
      "params": "[unknown[]]",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "value": ""
    }
  ],
  "link": "https://vuetifyjs.com/en/api/v-list/",
  "link_zh": "https://vuetifyjs.com/zh-Hans/api/v-list/"
}

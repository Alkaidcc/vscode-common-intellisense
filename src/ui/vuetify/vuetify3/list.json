{
  "name": "VList",
  "props": {
    "active-class": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "The class applied to the component when it is in an active state.",
      "description_zh": "当组件处于活动状态时应用于组件的类。"
    },
    "active-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "The applied color when the component is in an active state.",
      "description_zh": "组件处于活动状态时应用的颜色。"
    },
    "base-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "bg-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Applies specified color to the control’s background. Used on components that also support the color prop. - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定的颜色应用于控件的背景。用于也支持 color 属性的组件。- 支持实用程序颜色（例如成功或紫色）或 CSS 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。"
    },
    "border": {
      "default": "false",
      "value": "",
      "type": "string | number | boolean",
      "description": "Apply a border style to the component.",
      "description_zh": "应用边框样式到组件。"
    },
    "collapse-icon": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定的颜色应用于控件 - 支持实用程序颜色（例如成功或紫色）或 css 颜色（例如成功或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。"
    },
    "density": {
      "default": "'default'",
      "value": "",
      "type": "'default' / 'comfortable' / 'compact'",
      "description": "Adjusts the vertical height used by the component.",
      "description_zh": "调整组件使用的垂直高度。"
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Set all subform components to a disabled state.",
      "description_zh": "将所有的子表单组件设置为禁用状态."
    },
    "elevation": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "The elevation of the component is acceptable from 0 to 24. You can read more on the Elevation page.",
      "description_zh": "组件的海拔可接受 0 到 24 之间的值。你可以在 elevation page 浏览更多信息。"
    },
    "expand-icon": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the height of the component.",
      "description_zh": "设定组件的高度。"
    },
    "item-children": {
      "default": "'children'",
      "value": "",
      "type": "SelectItemKey<any>",
      "description": "Property on supplied items that contains its children.",
      "description_zh": "包含其子项的所提供项的属性。"
    },
    "item-props": {
      "default": "'props'",
      "value": "",
      "type": "SelectItemKey<any>",
      "description": "Props object that will be applied to each item component. true will treat the original object as raw props and pass it directly to the component.",
      "description_zh": "将应用于每个项组件的 props 对象。true 会将原始对象视为原始 props，并将其直接传递给组件。"
    },
    "items": {
      "default": "[]",
      "value": "",
      "type": "any[]",
      "description": "Can be an array of objects or strings. By default objects should have a title property, and can optionally have a props property containing any VListItem props, a value property to allow selection, and a children property containing more item objects. Keys to use for these can be changed with the item-title, item-value, item-props, and item-children props.",
      "description_zh": "可以是对象或字符串的数组。默认情况下，对象应具有 title 属性，并且可以选择具有包含任何 VListItem 属性的 props 属性、允许选择的 value 属性以及包含更多项对象的 children 属性。可以使用 item-title、item-value、item-props 和 item-children 属性更改用于这些键的键。"
    },
    "item-title": {
      "default": "'title'",
      "value": "",
      "type": "SelectItemKey<any>",
      "description": "Property on supplied items that contains its title.",
      "description_zh": "包含其标题的所提供项的属性。"
    },
    "item-type": {
      "default": "'type'",
      "value": "",
      "type": "string",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    "item-value": {
      "default": "'value'",
      "value": "",
      "type": "SelectItemKey<any>",
      "description": "Property on supplied items that contains its value.",
      "description_zh": "所提供项的属性，其中包含其值。"
    },
    "lines": {
      "default": "'one'",
      "value": "",
      "type": "false / 'one' / 'two' / 'three'",
      "description": "Designates a minimum-height for all children v-list-item components. This prop uses line-clamp and is not supported in all browsers.",
      "description_zh": "指定所有子 v-list-item 组件的最小高度。此道具使用 line-clamp，并非所有浏览器都支持。",
      "required": true
    },
    "mandatory": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Force at least one item to be selected, if available.",
      "description_zh": "强制至少选择一个项目（如果可用）。"
    },
    "max-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the maximum height of the component.",
      "description_zh": "设定组件的最大高度。"
    },
    "max-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the maximum width of the component.",
      "description_zh": "设定组件的最大宽度。"
    },
    "min-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the minimum height of the component.",
      "description_zh": "设定组件的最小高度。"
    },
    "min-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the minimum width of the component.",
      "description_zh": "设定组件的最小宽度。"
    },
    "nav": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "An alternative styling that reduces v-list-item width and rounds the corners. Typically used with v-navigation-drawer.",
      "description_zh": "一种替代样式，可减小 v-list-item 宽度并圆角。通常与 v-navigation-drawer 一起使用。"
    },
    "opened": {
      "default": "undefined",
      "value": "",
      "type": "unknown[]",
      "description": "An array containing the values of currently opened groups. Can be two-way bound with v-model:opened.",
      "description_zh": "包含当前打开的组的值的数组。可以与 v-model：opened 双向绑定。"
    },
    "open-strategy": {
      "default": "'list'",
      "value": "",
      "type": " / 'single' / 'multiple' / 'list' / { open: OpenStrategyFn; select: OpenSelectStrategyFn }",
      "description": "Affects how items with children behave when expanded.multiple: Any number of groups can be open at once.single: Only one group at each level can be open, opening a group will cause others to close.list: Multiple, but all other groups will close when an item is selected.",
      "description_zh": "影响包含子项的项目在展开时的行为方式。multiple：一次可以打开任意数量的组。single：每个级别只能打开一个组，打开一个组将导致其他组关闭。list：多个，但在选择某个项目时，所有其他组都将关闭。"
    },
    "return-object": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Changes the selection behavior to return the object directly rather than the value specified with item-value.",
      "description_zh": "更改选择行为以直接返回对象，而不是返回使用 item-value 指定的值。"
    },
    "rounded": {
      "default": "undefined",
      "value": "",
      "type": "string | number | boolean",
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面 获取更多有关信息"
    },
    "selected": {
      "default": "undefined",
      "value": "",
      "type": "unknown[]",
      "description": "An array containing the values of currently selected items. Can be two-way bound with v-model:selected.",
      "description_zh": "包含当前选定项的值的数组。可以使用 v-model：selected 进行双向绑定。"
    },
    "select-strategy": {
      "default": "'single-leaf'",
      "value": "",
      "type": " / 'single-leaf' / 'leaf' / 'independent' / 'single-independent' / 'classic' / SelectStrategyFn",
      "description": "Affects how items with children behave when selected.leaf: Only leaf nodes (items without children) can be selected.independent: All nodes can be selected whether they have children or not.classic: Selecting a parent node will cause all children to be selected, parent nodes will be displayed as selected if all their descendants are selected. Only leaf nodes will be added to the model.",
      "description_zh": "影响选中有子节点时的行为方式。leaf：只能选择叶节点（没有子节点）。independent：可以选择所有节点，无论它们是否有子节点。classic：选择父节点将导致选择所有子节点，如果父节点的所有子节点都被选中，则父节点将显示为选中节点。只有叶节点才会添加到模型中。"
    },
    "slim": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Reduces horizontal spacing for badges, icons, tooltips, and avatars within slim list items to create a more compact visual representation.",
      "description_zh": "减小细列列表项中锁屏提醒、图标、工具提示和头像的水平间距，以创建更紧凑的视觉表示形式。"
    },
    "tag": {
      "default": "'div'",
      "value": "",
      "type": "string",
      "description": "Specifies the custom tag to be used on the root element.",
      "description_zh": "指定在根元素上使用的自定义标签。"
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "为此组件及其所有子组件指定主题。"
    },
    "value-comparator": {
      "default": "undefined",
      "value": "",
      "type": "(a: any, b: any) => boolean",
      "description": "Apply a custom comparison algorithm to compare model-value and values contains in the items prop.",
      "description_zh": "应用自定义比较算法来比较模型值和 items 属性中包含的值。"
    },
    "variant": {
      "default": "'text'",
      "value": "",
      "type": "'flat' / 'elevated' / 'tonal' / 'outlined' / 'text' / 'plain'",
      "description": "Applies a distinct style to the component.",
      "description_zh": "对组件应用不同的样式。"
    },
    "width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the width of the component.",
      "description_zh": "设定组件的宽度。"
    }
  },
  "link": "https://vuetifyjs.com/zh-Hans/api/v-list/#links",
  "link_zh": "https://vuetifyjs.com/zh-Hans/api/v-list/#links",
  "typeDetail": {},
  "events": [
    {
      "name": "click:open",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "value": ""
    },
    {
      "name": "click:select",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "value": ""
    },
    {
      "name": "update:opened",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "params": "[unknown[]]",
      "value": ""
    },
    {
      "name": "update:selected",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）",
      "params": "[unknown[]]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "append",
      "description": "Adds an item inside the input and after input content.",
      "description_zh": "在输入内容内部和之后添加一个项目。"
    },
    {
      "name": "default",
      "description": "Default Vue slot.",
      "description_zh": "默认Vue 插槽。"
    },
    {
      "name": "divider",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    {
      "name": "header",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    {
      "name": "item",
      "description": "Define a custom item appearance.",
      "description_zh": "定义自定义项目外观。"
    },
    {
      "name": "prepend",
      "description": "Adds an item outside the input and before input content.",
      "description_zh": "在输入内容之外和输入内容之前添加一个项目。"
    },
    {
      "name": "subheader",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述 （在 github 中编辑）"
    },
    {
      "name": "subtitle",
      "description": "Slot for the component’s subtitle content.",
      "description_zh": "组件字幕内容的插槽。"
    },
    {
      "name": "title",
      "description": "Slot for the component’s title content.",
      "description_zh": "组件标题内容的槽。"
    }
  ],
  "suggestions": [
    "v-list-group",
    "v-list-subheader",
    "v-list-item",
    "v-list-item-title",
    "v-list-item-subtitle",
    "v-list-item-action",
    "v-list-img",
    "v-list-item-media"
  ]
}

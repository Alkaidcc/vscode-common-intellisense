{
  "name": "VChip",
  "props": {
    "active-class": {
      "value": "",
      "description": "Create a v-avatar component after the default contents of the append slot",
      "default": "undefined",
      "type": "string",
      "description_zh": "在 append 插槽的默认内容后创建一个 v-avatar组件"
    },
    "append-icon": {
      "value": "",
      "description": "Create a v-icon component after the default contents of the append slot",
      "default": "undefined",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在 append 插槽的默认内容后创建一个 v-icon组件"
    },
    "border": {
      "value": "",
      "description": "Apply a border style to the component.",
      "default": "false",
      "type": "string | number | boolean",
      "description_zh": "应用边框样式到组件。"
    },
    "closable": {
      "value": "",
      "description": "Adds remove button and then a chip can be closed",
      "default": "false",
      "type": "boolean",
      "description_zh": "添加移除按钮，然后可以关闭芯片"
    },
    "close-icon": {
      "value": "",
      "description": "Change the default icon used for close sheets",
      "default": "$delete",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "更改用于 close 纸片的默认图标"
    },
    "close-label": {
      "value": "",
      "description": "Text used for aria-label on the close button in close chips. Can also be customized globally in Internationalization",
      "default": "'vuetify.close",
      "type": "string",
      "description_zh": "用于关闭筹码中关闭按钮上的咏叹调标签的文本。也可在国际化方面进行全球定制"
    },
    "color": {
      "value": "",
      "description": "Specify the control color, which can be any Material color (e.g. success or purple) or Css color (e.g. #033 or rgba (255, 0, 0, 0.5)). You can find a list of built-in color classes in the Colors page.",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定控件颜色，颜色值可以是任意 Material 颜色（例如 success 或者 purple ）也可以是 Css 颜色 （例如 #033 或者 rgba(255, 0, 0, 0.5)）。在 颜色页中可以找到内置的颜色类列表。"
    },
    "density": {
      "value": "",
      "description": "Adjusts the vertical height used by the component.",
      "default": "default",
      "type": "'default' | 'comfortable' | 'compact'",
      "description_zh": "调整组件使用的垂直高度。"
    },
    "disabled": {
      "value": "",
      "description": "Remove the ability to click or select a component to make it unavailable.",
      "default": "false",
      "type": "boolean",
      "description_zh": "移除单击组件或选中组件的能力，将组件设置为不可用状态。"
    },
    "draggable": {
      "value": "",
      "description": "Makes the paper draggable",
      "default": "false",
      "type": "boolean",
      "description_zh": "使纸片可拖动"
    },
    "elevation": {
      "value": "",
      "description": "The elevation of the component is acceptable from 0 to 24. You can find more information on the elevation page.",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "组件的海拔可接受 0 到 24 之间的值。你可以在 elevation page浏览更多信息。"
    },
    "exact": {
      "value": "",
      "description": "Exact match link. Without this link, '/' will match each route. You can read more about Exactprop in the vue-router documentation.",
      "default": "false",
      "type": "boolean",
      "description_zh": "完全匹配链接。如果没有这个链接，‘/’ 将匹配每个路由。你能够在 vue-router 文档浏览更多 exactprop。"
    },
    "filter": {
      "value": "",
      "description": "A selection icon is displayed when selected",
      "default": "false",
      "type": "boolean",
      "description_zh": "选中时显示选择图标"
    },
    "filter-icon": {
      "value": "",
      "description": "Change the default icon used for filter sheets",
      "default": "$complete",
      "type": "string",
      "description_zh": "更改用于 filter 纸片的默认图标"
    },
    "href": {
      "value": "",
      "description": "Specify the component as an anchor and apply the href attribute.",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定组件为锚点并应用 href 属性。"
    },
    "label": {
      "value": "",
      "description": "Applies a medium size border radius",
      "default": "false",
      "type": "boolean",
      "description_zh": "应用中等大小的边框半径"
    },
    "link": {
      "value": "",
      "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
      "default": "false",
      "type": "boolean",
      "description_zh": "指定组件是链接。当使用 href 或 to prop 时，这是自动的。"
    },
    "model-value": {
      "value": "",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array",
      "default": "true",
      "type": "boolean",
      "description_zh": "组件的 v 模型值。如果组件支持 multiple 属性，则默认为空数组"
    },
    "pill": {
      "value": "",
      "description": "Remove the margins of the v-avatar",
      "default": "false",
      "type": "boolean",
      "description_zh": "移除 v-avatar 的边距"
    },
    "prepend-avatar": {
      "value": "",
      "description": "Create a v-avatar component before the default content of the prepend slot",
      "default": "undefined",
      "type": "string",
      "description_zh": "在 prepend 插槽的默认内容前创建一个 v-avatar组件"
    },
    "prepend-icon": {
      "value": "",
      "description": "Create a v-icon component before the default content of the prepend slot",
      "default": "undefined",
      "type": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent",
      "description_zh": "在 prepend 插槽的默认内容前创建一个 v-icon组件"
    },
    "replace": {
      "value": "",
      "description": "Setting the replace property will call router.replace() instead of router.push() on click, so navigation doesn't leave a history. You can explore more replaceprops in the vue-router documentation.",
      "default": "false",
      "type": "boolean",
      "description_zh": "设置 replace 属性会在点击时调用 router.replace() 而不是 router.push()，这样导航就不会留下历史记录。您可以在 vue-router 文档中浏览更多 replaceprop。"
    },
    "ripple": {
      "value": "",
      "description": "Apply the v-ripple directive.",
      "default": "true",
      "type": "boolean | { class: string }",
      "description_zh": "应用 v-ripple指令。"
    },
    "rounded": {
      "value": "",
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "default": "false",
      "type": "string | number | boolean",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面获取更多有关信息"
    },
    "selected-class": {
      "value": "",
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "default": "undefined",
      "type": "string",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面获取更多有关信息"
    },
    "size": {
      "value": "",
      "description": "Set the height and width of the component. The default unit is px. You can also use the following predefined sizes: x-small, small, default, large, and x-large.",
      "default": "default",
      "type": "string | number",
      "description_zh": "设置组件的高度和宽度。默认单位是px。也可以使用以下预定义的大小：x-small、small、default、large和x-large。"
    },
    "tag": {
      "value": "",
      "description": "Specifies the custom tag to be used on the root element.",
      "default": "button",
      "type": "string",
      "description_zh": "指定在根元素上使用的自定义标签。"
    },
    "text": {
      "value": "",
      "description": "Sets the content text of the component.",
      "default": "undefined",
      "type": "string",
      "description_zh": "设置组件的内容文本。"
    },
    "theme": {
      "value": "",
      "description": "Specifies the theme of this component and all of its subcomponents",
      "default": "undefined",
      "type": "string",
      "description_zh": "指定此组件及其所有子组件的主题"
    },
    "to": {
      "value": "",
      "description": "Indicates the target route of the link. You can read more about toprops in the vue-router documentation.",
      "default": "undefined",
      "type": "unknown",
      "description_zh": "表示链接的目标路由。你可以在 vue-router 文档浏览更多 toprop。"
    },
    "value": {
      "value": "",
      "description": "Remove the shadow effect of the button.",
      "default": "false",
      "type": "boolean",
      "description_zh": "移除按钮的阴影效果。"
    },
    "variant": {
      "value": [
        "text",
        "flat",
        "elevated",
        "tonal",
        "outlined",
        "plain"
      ],
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "default": "false",
      "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面获取更多有关信息"
    }
  },
  "methods": [],
  "typeDetail": {},
  "events": [
    {
      "name": "click",
      "description": "Emitted when a component is clicked, switching chips (if included in the chipset) - unless a .native modifier is used, clicking will trigger a ripple in the component",
      "params": "[MouseEvent | KeyboardEvent]",
      "description_zh": "单击组件时发出，切换芯片（如果包含在芯片组中） - 除非使用 .native 修饰符，否则单击时将触发组件产生涟漪",
      "value": ""
    },
    {
      "name": "click:close",
      "description": "Issued when the close icon is clicked",
      "params": "[MouseEvent]",
      "description_zh": "单击关闭图标时发出",
      "value": ""
    },
    {
      "name": "clickOnce",
      "description": "MISSING DESCRIPTION",
      "params": "never",
      "description_zh": "缺少描述",
      "value": ""
    },
    {
      "name": "group:selected",
      "description": "Event that is emitted when an item is selected within a group.",
      "params": "[{ value: boolean }]",
      "description_zh": "在组中选择项目时发出的事件。",
      "value": ""
    },
    {
      "name": "update:modelValue",
      "description": "Event that is emitted when the component’s model changes",
      "params": "[boolean]",
      "description_zh": "组件模型更改时发出的事件",
      "value": ""
    }
  ],
  "link": "https://vuetifyjs.com/en/components/chips/",
  "link_zh": "https://vuetifyjs.com/en/components/chips/"
}
